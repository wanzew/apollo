// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/dag_conf.proto

#include "cyber/proto/dag_conf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace cyber {
namespace proto {
PROTOBUF_CONSTEXPR ComponentInfo::ComponentInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.class_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_)*/nullptr} {}
struct ComponentInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentInfoDefaultTypeInternal() {}
  union {
    ComponentInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentInfoDefaultTypeInternal _ComponentInfo_default_instance_;
PROTOBUF_CONSTEXPR TimerComponentInfo::TimerComponentInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.class_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_)*/nullptr} {}
struct TimerComponentInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimerComponentInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimerComponentInfoDefaultTypeInternal() {}
  union {
    TimerComponentInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimerComponentInfoDefaultTypeInternal _TimerComponentInfo_default_instance_;
PROTOBUF_CONSTEXPR ModuleConfig::ModuleConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.components_)*/{}
  , /*decltype(_impl_.timer_components_)*/{}
  , /*decltype(_impl_.module_library_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct ModuleConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfigDefaultTypeInternal() {}
  union {
    ModuleConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
PROTOBUF_CONSTEXPR DagConfig::DagConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_config_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DagConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DagConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DagConfigDefaultTypeInternal() {}
  union {
    DagConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DagConfigDefaultTypeInternal _DagConfig_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_cyber_2fproto_2fdag_5fconf_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_cyber_2fproto_2fdag_5fconf_2eproto = nullptr;

const uint32_t TableStruct_cyber_2fproto_2fdag_5fconf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, _impl_.class_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, _impl_.config_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, _impl_.class_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, _impl_.config_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _impl_.module_library_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _impl_.components_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _impl_.timer_components_),
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::DagConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::DagConfig, _impl_.module_config_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::apollo::cyber::proto::ComponentInfo)},
  { 10, 18, -1, sizeof(::apollo::cyber::proto::TimerComponentInfo)},
  { 20, 29, -1, sizeof(::apollo::cyber::proto::ModuleConfig)},
  { 32, -1, -1, sizeof(::apollo::cyber::proto::DagConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::cyber::proto::_ComponentInfo_default_instance_._instance,
  &::apollo::cyber::proto::_TimerComponentInfo_default_instance_._instance,
  &::apollo::cyber::proto::_ModuleConfig_default_instance_._instance,
  &::apollo::cyber::proto::_DagConfig_default_instance_._instance,
};

const char descriptor_table_protodef_cyber_2fproto_2fdag_5fconf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032cyber/proto/dag_conf.proto\022\022apollo.cyb"
  "er.proto\032 cyber/proto/component_conf.pro"
  "to\"X\n\rComponentInfo\022\022\n\nclass_name\030\001 \001(\t\022"
  "3\n\006config\030\002 \001(\0132#.apollo.cyber.proto.Com"
  "ponentConfig\"b\n\022TimerComponentInfo\022\022\n\ncl"
  "ass_name\030\001 \001(\t\0228\n\006config\030\002 \001(\0132(.apollo."
  "cyber.proto.TimerComponentConfig\"\237\001\n\014Mod"
  "uleConfig\022\026\n\016module_library\030\001 \001(\t\0225\n\ncom"
  "ponents\030\002 \003(\0132!.apollo.cyber.proto.Compo"
  "nentInfo\022@\n\020timer_components\030\003 \003(\0132&.apo"
  "llo.cyber.proto.TimerComponentInfo\"D\n\tDa"
  "gConfig\0227\n\rmodule_config\030\001 \003(\0132 .apollo."
  "cyber.proto.ModuleConfig"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_deps[1] = {
  &::descriptor_table_cyber_2fproto_2fcomponent_5fconf_2eproto,
};
static ::_pbi::once_flag descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto = {
    false, false, 504, descriptor_table_protodef_cyber_2fproto_2fdag_5fconf_2eproto,
    "cyber/proto/dag_conf.proto",
    &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once, descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_cyber_2fproto_2fdag_5fconf_2eproto::offsets,
    file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto, file_level_enum_descriptors_cyber_2fproto_2fdag_5fconf_2eproto,
    file_level_service_descriptors_cyber_2fproto_2fdag_5fconf_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_getter() {
  return &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cyber_2fproto_2fdag_5fconf_2eproto(&descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto);
namespace apollo {
namespace cyber {
namespace proto {

// ===================================================================

class ComponentInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ComponentInfo>()._impl_._has_bits_);
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::cyber::proto::ComponentConfig& config(const ComponentInfo* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::cyber::proto::ComponentConfig&
ComponentInfo::_Internal::config(const ComponentInfo* msg) {
  return *msg->_impl_.config_;
}
void ComponentInfo::clear_config() {
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ComponentInfo::ComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.ComponentInfo)
}
ComponentInfo::ComponentInfo(const ComponentInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.class_name_){}
    , decltype(_impl_.config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.class_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.class_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_class_name()) {
    _impl_.class_name_.Set(from._internal_class_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    _impl_.config_ = new ::apollo::cyber::proto::ComponentConfig(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ComponentInfo)
}

inline void ComponentInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.class_name_){}
    , decltype(_impl_.config_){nullptr}
  };
  _impl_.class_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.class_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComponentInfo::~ComponentInfo() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ComponentInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComponentInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.class_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void ComponentInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComponentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ComponentInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.class_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComponentInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string class_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_class_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.proto.ComponentInfo.class_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.cyber.proto.ComponentConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComponentInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ComponentInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string class_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_class_name().data(), static_cast<int>(this->_internal_class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentInfo.class_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_class_name(), target);
  }

  // optional .apollo.cyber.proto.ComponentConfig config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ComponentInfo)
  return target;
}

size_t ComponentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ComponentInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string class_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_class_name());
    }

    // optional .apollo.cyber.proto.ComponentConfig config = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.config_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComponentInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComponentInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComponentInfo::GetClassData() const { return &_class_data_; }

void ComponentInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ComponentInfo *>(to)->MergeFrom(
      static_cast<const ComponentInfo &>(from));
}


void ComponentInfo::MergeFrom(const ComponentInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ComponentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_class_name(from._internal_class_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_config()->::apollo::cyber::proto::ComponentConfig::MergeFrom(from._internal_config());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentInfo::CopyFrom(const ComponentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ComponentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInfo::IsInitialized() const {
  return true;
}

void ComponentInfo::InternalSwap(ComponentInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.class_name_, lhs_arena,
      &other->_impl_.class_name_, rhs_arena
  );
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComponentInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_getter, &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once,
      file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto[0]);
}

// ===================================================================

class TimerComponentInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<TimerComponentInfo>()._impl_._has_bits_);
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::cyber::proto::TimerComponentConfig& config(const TimerComponentInfo* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::cyber::proto::TimerComponentConfig&
TimerComponentInfo::_Internal::config(const TimerComponentInfo* msg) {
  return *msg->_impl_.config_;
}
void TimerComponentInfo::clear_config() {
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TimerComponentInfo::TimerComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.TimerComponentInfo)
}
TimerComponentInfo::TimerComponentInfo(const TimerComponentInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.class_name_){}
    , decltype(_impl_.config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.class_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.class_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_class_name()) {
    _impl_.class_name_.Set(from._internal_class_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    _impl_.config_ = new ::apollo::cyber::proto::TimerComponentConfig(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.TimerComponentInfo)
}

inline void TimerComponentInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.class_name_){}
    , decltype(_impl_.config_){nullptr}
  };
  _impl_.class_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.class_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TimerComponentInfo::~TimerComponentInfo() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.TimerComponentInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TimerComponentInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.class_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void TimerComponentInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TimerComponentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.TimerComponentInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.class_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TimerComponentInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string class_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_class_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.proto.TimerComponentInfo.class_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TimerComponentInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.TimerComponentInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string class_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_class_name().data(), static_cast<int>(this->_internal_class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentInfo.class_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_class_name(), target);
  }

  // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.TimerComponentInfo)
  return target;
}

size_t TimerComponentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.TimerComponentInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string class_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_class_name());
    }

    // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.config_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TimerComponentInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TimerComponentInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TimerComponentInfo::GetClassData() const { return &_class_data_; }

void TimerComponentInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TimerComponentInfo *>(to)->MergeFrom(
      static_cast<const TimerComponentInfo &>(from));
}


void TimerComponentInfo::MergeFrom(const TimerComponentInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.TimerComponentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_class_name(from._internal_class_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_config()->::apollo::cyber::proto::TimerComponentConfig::MergeFrom(from._internal_config());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TimerComponentInfo::CopyFrom(const TimerComponentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.TimerComponentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimerComponentInfo::IsInitialized() const {
  return true;
}

void TimerComponentInfo::InternalSwap(TimerComponentInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.class_name_, lhs_arena,
      &other->_impl_.class_name_, rhs_arena
  );
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TimerComponentInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_getter, &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once,
      file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto[1]);
}

// ===================================================================

class ModuleConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleConfig>()._impl_._has_bits_);
  static void set_has_module_library(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ModuleConfig::ModuleConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.ModuleConfig)
}
ModuleConfig::ModuleConfig(const ModuleConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.components_){from._impl_.components_}
    , decltype(_impl_.timer_components_){from._impl_.timer_components_}
    , decltype(_impl_.module_library_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.module_library_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.module_library_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_module_library()) {
    _impl_.module_library_.Set(from._internal_module_library(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ModuleConfig)
}

inline void ModuleConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.components_){arena}
    , decltype(_impl_.timer_components_){arena}
    , decltype(_impl_.module_library_){}
  };
  _impl_.module_library_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.module_library_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleConfig::~ModuleConfig() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ModuleConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.components_.~RepeatedPtrField();
  _impl_.timer_components_.~RepeatedPtrField();
  _impl_.module_library_.Destroy();
}

void ModuleConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModuleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ModuleConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.components_.Clear();
  _impl_.timer_components_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.module_library_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string module_library = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_library();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.cyber.proto.ModuleConfig.module_library");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.cyber.proto.ComponentInfo components = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_timer_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ModuleConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string module_library = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_module_library().data(), static_cast<int>(this->_internal_module_library().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ModuleConfig.module_library");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_library(), target);
  }

  // repeated .apollo.cyber.proto.ComponentInfo components = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_components_size()); i < n; i++) {
    const auto& repfield = this->_internal_components(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_timer_components_size()); i < n; i++) {
    const auto& repfield = this->_internal_timer_components(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ModuleConfig)
  return target;
}

size_t ModuleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ModuleConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.ComponentInfo components = 2;
  total_size += 1UL * this->_internal_components_size();
  for (const auto& msg : this->_impl_.components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
  total_size += 1UL * this->_internal_timer_components_size();
  for (const auto& msg : this->_impl_.timer_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string module_library = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_library());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleConfig::GetClassData() const { return &_class_data_; }

void ModuleConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleConfig *>(to)->MergeFrom(
      static_cast<const ModuleConfig &>(from));
}


void ModuleConfig::MergeFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ModuleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.components_.MergeFrom(from._impl_.components_);
  _impl_.timer_components_.MergeFrom(from._impl_.timer_components_);
  if (from._internal_has_module_library()) {
    _internal_set_module_library(from._internal_module_library());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig::CopyFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleConfig::IsInitialized() const {
  return true;
}

void ModuleConfig::InternalSwap(ModuleConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.components_.InternalSwap(&other->_impl_.components_);
  _impl_.timer_components_.InternalSwap(&other->_impl_.timer_components_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.module_library_, lhs_arena,
      &other->_impl_.module_library_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_getter, &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once,
      file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto[2]);
}

// ===================================================================

class DagConfig::_Internal {
 public:
};

DagConfig::DagConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.DagConfig)
}
DagConfig::DagConfig(const DagConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.module_config_){from._impl_.module_config_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.DagConfig)
}

inline void DagConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.module_config_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DagConfig::~DagConfig() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.DagConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DagConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_config_.~RepeatedPtrField();
}

void DagConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DagConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.DagConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_config_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DagConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_module_config(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DagConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.DagConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_module_config_size()); i < n; i++) {
    const auto& repfield = this->_internal_module_config(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.DagConfig)
  return target;
}

size_t DagConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.DagConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
  total_size += 1UL * this->_internal_module_config_size();
  for (const auto& msg : this->_impl_.module_config_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DagConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DagConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DagConfig::GetClassData() const { return &_class_data_; }

void DagConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DagConfig *>(to)->MergeFrom(
      static_cast<const DagConfig &>(from));
}


void DagConfig::MergeFrom(const DagConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.DagConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.module_config_.MergeFrom(from._impl_.module_config_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DagConfig::CopyFrom(const DagConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.DagConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DagConfig::IsInitialized() const {
  return true;
}

void DagConfig::InternalSwap(DagConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.module_config_.InternalSwap(&other->_impl_.module_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DagConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_getter, &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once,
      file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::ComponentInfo*
Arena::CreateMaybeMessage< ::apollo::cyber::proto::ComponentInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::ComponentInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::TimerComponentInfo*
Arena::CreateMaybeMessage< ::apollo::cyber::proto::TimerComponentInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::TimerComponentInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::ModuleConfig*
Arena::CreateMaybeMessage< ::apollo::cyber::proto::ModuleConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::ModuleConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::DagConfig*
Arena::CreateMaybeMessage< ::apollo::cyber::proto::DagConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::DagConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
