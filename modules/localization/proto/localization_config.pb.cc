// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/localization/proto/localization_config.proto

#include "modules/localization/proto/localization_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace localization {
PROTOBUF_CONSTEXPR LocalizationConfig::LocalizationConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.localization_type_)*/0} {}
struct LocalizationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationConfigDefaultTypeInternal() {}
  union {
    LocalizationConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationConfigDefaultTypeInternal _LocalizationConfig_default_instance_;
}  // namespace localization
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto = nullptr;

const uint32_t TableStruct_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::localization::LocalizationConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::localization::LocalizationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::localization::LocalizationConfig, _impl_.localization_type_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::apollo::localization::LocalizationConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::localization::_LocalizationConfig_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n4modules/localization/proto/localizatio"
  "n_config.proto\022\023apollo.localization\"\224\001\n\022"
  "LocalizationConfig\022X\n\021localization_type\030"
  "\001 \001(\01628.apollo.localization.Localization"
  "Config.LocalizationType:\003RTK\"$\n\020Localiza"
  "tionType\022\007\n\003RTK\020\000\022\007\n\003MSF\020\001"
  ;
static ::_pbi::once_flag descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto = {
    false, false, 226, descriptor_table_protodef_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto,
    "modules/localization/proto/localization_config.proto",
    &descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto::offsets,
    file_level_metadata_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto, file_level_enum_descriptors_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto,
    file_level_service_descriptors_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto_getter() {
  return &descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto(&descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto);
namespace apollo {
namespace localization {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocalizationConfig_LocalizationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto);
  return file_level_enum_descriptors_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto[0];
}
bool LocalizationConfig_LocalizationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr LocalizationConfig_LocalizationType LocalizationConfig::RTK;
constexpr LocalizationConfig_LocalizationType LocalizationConfig::MSF;
constexpr LocalizationConfig_LocalizationType LocalizationConfig::LocalizationType_MIN;
constexpr LocalizationConfig_LocalizationType LocalizationConfig::LocalizationType_MAX;
constexpr int LocalizationConfig::LocalizationType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class LocalizationConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<LocalizationConfig>()._impl_._has_bits_);
  static void set_has_localization_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LocalizationConfig::LocalizationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.localization.LocalizationConfig)
}
LocalizationConfig::LocalizationConfig(const LocalizationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.localization_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.localization_type_ = from._impl_.localization_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.localization.LocalizationConfig)
}

inline void LocalizationConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.localization_type_){0}
  };
}

LocalizationConfig::~LocalizationConfig() {
  // @@protoc_insertion_point(destructor:apollo.localization.LocalizationConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocalizationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LocalizationConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LocalizationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.LocalizationConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.localization_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalizationConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.localization.LocalizationConfig.LocalizationType localization_type = 1 [default = RTK];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::localization::LocalizationConfig_LocalizationType_IsValid(val))) {
            _internal_set_localization_type(static_cast<::apollo::localization::LocalizationConfig_LocalizationType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalizationConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.LocalizationConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.localization.LocalizationConfig.LocalizationType localization_type = 1 [default = RTK];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_localization_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.LocalizationConfig)
  return target;
}

size_t LocalizationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.LocalizationConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .apollo.localization.LocalizationConfig.LocalizationType localization_type = 1 [default = RTK];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_localization_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalizationConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalizationConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalizationConfig::GetClassData() const { return &_class_data_; }

void LocalizationConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalizationConfig *>(to)->MergeFrom(
      static_cast<const LocalizationConfig &>(from));
}


void LocalizationConfig::MergeFrom(const LocalizationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.LocalizationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_localization_type()) {
    _internal_set_localization_type(from._internal_localization_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationConfig::CopyFrom(const LocalizationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.LocalizationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizationConfig::IsInitialized() const {
  return true;
}

void LocalizationConfig::InternalSwap(LocalizationConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.localization_type_, other->_impl_.localization_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalizationConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto_getter, &descriptor_table_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto_once,
      file_level_metadata_modules_2flocalization_2fproto_2flocalization_5fconfig_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace localization
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::localization::LocalizationConfig*
Arena::CreateMaybeMessage< ::apollo::localization::LocalizationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::localization::LocalizationConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
