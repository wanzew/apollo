// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/devkit.proto

#include "modules/canbus/proto/devkit.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace canbus {
PROTOBUF_CONSTEXPR Throttle_command_100::Throttle_command_100(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.throttle_acc_)*/0
  , /*decltype(_impl_.throttle_pedal_target_)*/0
  , /*decltype(_impl_.checksum_100_)*/0
  , /*decltype(_impl_.throttle_en_ctrl_)*/0} {}
struct Throttle_command_100DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Throttle_command_100DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Throttle_command_100DefaultTypeInternal() {}
  union {
    Throttle_command_100 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Throttle_command_100DefaultTypeInternal _Throttle_command_100_default_instance_;
PROTOBUF_CONSTEXPR Brake_command_101::Brake_command_101(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.brake_dec_)*/0
  , /*decltype(_impl_.brake_pedal_target_)*/0
  , /*decltype(_impl_.checksum_101_)*/0
  , /*decltype(_impl_.brake_en_ctrl_)*/0
  , /*decltype(_impl_.aeb_en_ctrl_)*/0} {}
struct Brake_command_101DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Brake_command_101DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Brake_command_101DefaultTypeInternal() {}
  union {
    Brake_command_101 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Brake_command_101DefaultTypeInternal _Brake_command_101_default_instance_;
PROTOBUF_CONSTEXPR Steering_command_102::Steering_command_102(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.steer_en_ctrl_)*/0
  , /*decltype(_impl_.steer_angle_target_)*/0
  , /*decltype(_impl_.steer_angle_spd_)*/0
  , /*decltype(_impl_.checksum_102_)*/0} {}
struct Steering_command_102DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Steering_command_102DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Steering_command_102DefaultTypeInternal() {}
  union {
    Steering_command_102 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Steering_command_102DefaultTypeInternal _Steering_command_102_default_instance_;
PROTOBUF_CONSTEXPR Gear_command_103::Gear_command_103(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.gear_target_)*/0
  , /*decltype(_impl_.gear_en_ctrl_)*/0
  , /*decltype(_impl_.checksum_103_)*/0} {}
struct Gear_command_103DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Gear_command_103DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Gear_command_103DefaultTypeInternal() {}
  union {
    Gear_command_103 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Gear_command_103DefaultTypeInternal _Gear_command_103_default_instance_;
PROTOBUF_CONSTEXPR Park_command_104::Park_command_104(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.checksum_104_)*/0
  , /*decltype(_impl_.park_target_)*/0
  , /*decltype(_impl_.park_en_ctrl_)*/0} {}
struct Park_command_104DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Park_command_104DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Park_command_104DefaultTypeInternal() {}
  union {
    Park_command_104 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Park_command_104DefaultTypeInternal _Park_command_104_default_instance_;
PROTOBUF_CONSTEXPR Throttle_report_500::Throttle_report_500(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.throttle_pedal_actual_)*/0
  , /*decltype(_impl_.throttle_flt2_)*/0
  , /*decltype(_impl_.throttle_flt1_)*/0
  , /*decltype(_impl_.throttle_en_state_)*/0} {}
struct Throttle_report_500DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Throttle_report_500DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Throttle_report_500DefaultTypeInternal() {}
  union {
    Throttle_report_500 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Throttle_report_500DefaultTypeInternal _Throttle_report_500_default_instance_;
PROTOBUF_CONSTEXPR Brake_report_501::Brake_report_501(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.brake_pedal_actual_)*/0
  , /*decltype(_impl_.brake_flt2_)*/0
  , /*decltype(_impl_.brake_flt1_)*/0
  , /*decltype(_impl_.brake_en_state_)*/0} {}
struct Brake_report_501DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Brake_report_501DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Brake_report_501DefaultTypeInternal() {}
  union {
    Brake_report_501 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Brake_report_501DefaultTypeInternal _Brake_report_501_default_instance_;
PROTOBUF_CONSTEXPR Steering_report_502::Steering_report_502(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.steer_angle_spd_actual_)*/0
  , /*decltype(_impl_.steer_flt2_)*/0
  , /*decltype(_impl_.steer_flt1_)*/0
  , /*decltype(_impl_.steer_en_state_)*/0
  , /*decltype(_impl_.steer_angle_actual_)*/0} {}
struct Steering_report_502DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Steering_report_502DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Steering_report_502DefaultTypeInternal() {}
  union {
    Steering_report_502 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Steering_report_502DefaultTypeInternal _Steering_report_502_default_instance_;
PROTOBUF_CONSTEXPR Gear_report_503::Gear_report_503(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.gear_flt_)*/0
  , /*decltype(_impl_.gear_actual_)*/0} {}
struct Gear_report_503DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Gear_report_503DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Gear_report_503DefaultTypeInternal() {}
  union {
    Gear_report_503 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Gear_report_503DefaultTypeInternal _Gear_report_503_default_instance_;
PROTOBUF_CONSTEXPR Park_report_504::Park_report_504(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.parking_actual_)*/0
  , /*decltype(_impl_.park_flt_)*/0} {}
struct Park_report_504DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Park_report_504DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Park_report_504DefaultTypeInternal() {}
  union {
    Park_report_504 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Park_report_504DefaultTypeInternal _Park_report_504_default_instance_;
PROTOBUF_CONSTEXPR Vcu_report_505::Vcu_report_505(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.vehicle_mode_state_)*/0
  , /*decltype(_impl_.frontcrash_state_)*/0
  , /*decltype(_impl_.backcrash_state_)*/0
  , /*decltype(_impl_.aeb_state_)*/0
  , /*decltype(_impl_.acc_)*/0
  , /*decltype(_impl_.speed_)*/0} {}
struct Vcu_report_505DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vcu_report_505DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vcu_report_505DefaultTypeInternal() {}
  union {
    Vcu_report_505 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vcu_report_505DefaultTypeInternal _Vcu_report_505_default_instance_;
PROTOBUF_CONSTEXPR Wheelspeed_report_506::Wheelspeed_report_506(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.rr_)*/0
  , /*decltype(_impl_.rl_)*/0
  , /*decltype(_impl_.fr_)*/0
  , /*decltype(_impl_.fl_)*/0} {}
struct Wheelspeed_report_506DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Wheelspeed_report_506DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Wheelspeed_report_506DefaultTypeInternal() {}
  union {
    Wheelspeed_report_506 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Wheelspeed_report_506DefaultTypeInternal _Wheelspeed_report_506_default_instance_;
PROTOBUF_CONSTEXPR Ultr_sensor_1_507::Ultr_sensor_1_507(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uiuss9_tof_direct_)*/0
  , /*decltype(_impl_.uiuss8_tof_direct_)*/0
  , /*decltype(_impl_.uiuss11_tof_direct_)*/0
  , /*decltype(_impl_.uiuss10_tof_direct_)*/0} {}
struct Ultr_sensor_1_507DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ultr_sensor_1_507DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ultr_sensor_1_507DefaultTypeInternal() {}
  union {
    Ultr_sensor_1_507 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ultr_sensor_1_507DefaultTypeInternal _Ultr_sensor_1_507_default_instance_;
PROTOBUF_CONSTEXPR Ultr_sensor_2_508::Ultr_sensor_2_508(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uiuss9_tof_indirect_)*/0
  , /*decltype(_impl_.uiuss8_tof_indirect_)*/0
  , /*decltype(_impl_.uiuss11_tof_indirect_)*/0
  , /*decltype(_impl_.uiuss10_tof_indirect_)*/0} {}
struct Ultr_sensor_2_508DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ultr_sensor_2_508DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ultr_sensor_2_508DefaultTypeInternal() {}
  union {
    Ultr_sensor_2_508 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ultr_sensor_2_508DefaultTypeInternal _Ultr_sensor_2_508_default_instance_;
PROTOBUF_CONSTEXPR Ultr_sensor_3_509::Ultr_sensor_3_509(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uiuss5_tof_direct_)*/0
  , /*decltype(_impl_.uiuss4_tof_direct_)*/0
  , /*decltype(_impl_.uiuss3_tof_direct_)*/0
  , /*decltype(_impl_.uiuss2_tof_direct_)*/0} {}
struct Ultr_sensor_3_509DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ultr_sensor_3_509DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ultr_sensor_3_509DefaultTypeInternal() {}
  union {
    Ultr_sensor_3_509 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ultr_sensor_3_509DefaultTypeInternal _Ultr_sensor_3_509_default_instance_;
PROTOBUF_CONSTEXPR Ultr_sensor_4_510::Ultr_sensor_4_510(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uiuss5_tof_indirect_)*/0
  , /*decltype(_impl_.uiuss4_tof_indirect_)*/0
  , /*decltype(_impl_.uiuss3_tof_indirect_)*/0
  , /*decltype(_impl_.uiuss2_tof_indirect_)*/0} {}
struct Ultr_sensor_4_510DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ultr_sensor_4_510DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ultr_sensor_4_510DefaultTypeInternal() {}
  union {
    Ultr_sensor_4_510 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ultr_sensor_4_510DefaultTypeInternal _Ultr_sensor_4_510_default_instance_;
PROTOBUF_CONSTEXPR Ultr_sensor_5_511::Ultr_sensor_5_511(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uiuss7_tof_direct_)*/0
  , /*decltype(_impl_.uiuss6_tof_direct_)*/0
  , /*decltype(_impl_.uiuss1_tof_direct_)*/0
  , /*decltype(_impl_.uiuss0_tof_direct_)*/0} {}
struct Ultr_sensor_5_511DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ultr_sensor_5_511DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ultr_sensor_5_511DefaultTypeInternal() {}
  union {
    Ultr_sensor_5_511 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ultr_sensor_5_511DefaultTypeInternal _Ultr_sensor_5_511_default_instance_;
PROTOBUF_CONSTEXPR Bms_report_512::Bms_report_512(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.battery_current_)*/0
  , /*decltype(_impl_.battery_voltage_)*/0
  , /*decltype(_impl_.battery_soc_)*/0} {}
struct Bms_report_512DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Bms_report_512DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Bms_report_512DefaultTypeInternal() {}
  union {
    Bms_report_512 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Bms_report_512DefaultTypeInternal _Bms_report_512_default_instance_;
PROTOBUF_CONSTEXPR Devkit::Devkit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.throttle_command_100_)*/nullptr
  , /*decltype(_impl_.brake_command_101_)*/nullptr
  , /*decltype(_impl_.steering_command_102_)*/nullptr
  , /*decltype(_impl_.gear_command_103_)*/nullptr
  , /*decltype(_impl_.park_command_104_)*/nullptr
  , /*decltype(_impl_.throttle_report_500_)*/nullptr
  , /*decltype(_impl_.brake_report_501_)*/nullptr
  , /*decltype(_impl_.steering_report_502_)*/nullptr
  , /*decltype(_impl_.gear_report_503_)*/nullptr
  , /*decltype(_impl_.park_report_504_)*/nullptr
  , /*decltype(_impl_.vcu_report_505_)*/nullptr
  , /*decltype(_impl_.wheelspeed_report_506_)*/nullptr
  , /*decltype(_impl_.ultr_sensor_1_507_)*/nullptr
  , /*decltype(_impl_.ultr_sensor_2_508_)*/nullptr
  , /*decltype(_impl_.ultr_sensor_3_509_)*/nullptr
  , /*decltype(_impl_.ultr_sensor_4_510_)*/nullptr
  , /*decltype(_impl_.ultr_sensor_5_511_)*/nullptr
  , /*decltype(_impl_.bms_report_512_)*/nullptr} {}
struct DevkitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DevkitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DevkitDefaultTypeInternal() {}
  union {
    Devkit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DevkitDefaultTypeInternal _Devkit_default_instance_;
}  // namespace canbus
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[19];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[25];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto = nullptr;

const uint32_t TableStruct_modules_2fcanbus_2fproto_2fdevkit_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_command_100, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_command_100, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_command_100, _impl_.throttle_acc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_command_100, _impl_.checksum_100_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_command_100, _impl_.throttle_pedal_target_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_command_100, _impl_.throttle_en_ctrl_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _impl_.brake_dec_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _impl_.checksum_101_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _impl_.brake_pedal_target_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _impl_.brake_en_ctrl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_command_101, _impl_.aeb_en_ctrl_),
  0,
  2,
  1,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_command_102, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_command_102, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_command_102, _impl_.steer_en_ctrl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_command_102, _impl_.steer_angle_target_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_command_102, _impl_.steer_angle_spd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_command_102, _impl_.checksum_102_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_command_103, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_command_103, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_command_103, _impl_.gear_target_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_command_103, _impl_.gear_en_ctrl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_command_103, _impl_.checksum_103_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_command_104, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_command_104, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_command_104, _impl_.checksum_104_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_command_104, _impl_.park_target_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_command_104, _impl_.park_en_ctrl_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_report_500, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_report_500, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_report_500, _impl_.throttle_pedal_actual_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_report_500, _impl_.throttle_flt2_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_report_500, _impl_.throttle_flt1_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Throttle_report_500, _impl_.throttle_en_state_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_report_501, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_report_501, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_report_501, _impl_.brake_pedal_actual_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_report_501, _impl_.brake_flt2_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_report_501, _impl_.brake_flt1_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brake_report_501, _impl_.brake_en_state_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _impl_.steer_angle_spd_actual_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _impl_.steer_flt2_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _impl_.steer_flt1_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _impl_.steer_en_state_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Steering_report_502, _impl_.steer_angle_actual_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_report_503, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_report_503, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_report_503, _impl_.gear_flt_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Gear_report_503, _impl_.gear_actual_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_report_504, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_report_504, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_report_504, _impl_.parking_actual_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Park_report_504, _impl_.park_flt_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_.vehicle_mode_state_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_.frontcrash_state_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_.backcrash_state_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_.aeb_state_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_.acc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcu_report_505, _impl_.speed_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wheelspeed_report_506, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wheelspeed_report_506, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wheelspeed_report_506, _impl_.rr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wheelspeed_report_506, _impl_.rl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wheelspeed_report_506, _impl_.fr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wheelspeed_report_506, _impl_.fl_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_1_507, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_1_507, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_1_507, _impl_.uiuss9_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_1_507, _impl_.uiuss8_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_1_507, _impl_.uiuss11_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_1_507, _impl_.uiuss10_tof_direct_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_2_508, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_2_508, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_2_508, _impl_.uiuss9_tof_indirect_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_2_508, _impl_.uiuss8_tof_indirect_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_2_508, _impl_.uiuss11_tof_indirect_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_2_508, _impl_.uiuss10_tof_indirect_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_3_509, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_3_509, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_3_509, _impl_.uiuss5_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_3_509, _impl_.uiuss4_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_3_509, _impl_.uiuss3_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_3_509, _impl_.uiuss2_tof_direct_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_4_510, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_4_510, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_4_510, _impl_.uiuss5_tof_indirect_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_4_510, _impl_.uiuss4_tof_indirect_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_4_510, _impl_.uiuss3_tof_indirect_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_4_510, _impl_.uiuss2_tof_indirect_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_5_511, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_5_511, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_5_511, _impl_.uiuss7_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_5_511, _impl_.uiuss6_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_5_511, _impl_.uiuss1_tof_direct_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ultr_sensor_5_511, _impl_.uiuss0_tof_direct_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bms_report_512, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bms_report_512, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bms_report_512, _impl_.battery_current_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bms_report_512, _impl_.battery_voltage_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bms_report_512, _impl_.battery_soc_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.throttle_command_100_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.brake_command_101_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.steering_command_102_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.gear_command_103_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.park_command_104_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.throttle_report_500_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.brake_report_501_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.steering_report_502_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.gear_report_503_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.park_report_504_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.vcu_report_505_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.wheelspeed_report_506_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.ultr_sensor_1_507_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.ultr_sensor_2_508_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.ultr_sensor_3_509_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.ultr_sensor_4_510_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.ultr_sensor_5_511_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Devkit, _impl_.bms_report_512_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::apollo::canbus::Throttle_command_100)},
  { 14, 25, -1, sizeof(::apollo::canbus::Brake_command_101)},
  { 30, 40, -1, sizeof(::apollo::canbus::Steering_command_102)},
  { 44, 53, -1, sizeof(::apollo::canbus::Gear_command_103)},
  { 56, 65, -1, sizeof(::apollo::canbus::Park_command_104)},
  { 68, 78, -1, sizeof(::apollo::canbus::Throttle_report_500)},
  { 82, 92, -1, sizeof(::apollo::canbus::Brake_report_501)},
  { 96, 107, -1, sizeof(::apollo::canbus::Steering_report_502)},
  { 112, 120, -1, sizeof(::apollo::canbus::Gear_report_503)},
  { 122, 130, -1, sizeof(::apollo::canbus::Park_report_504)},
  { 132, 144, -1, sizeof(::apollo::canbus::Vcu_report_505)},
  { 150, 160, -1, sizeof(::apollo::canbus::Wheelspeed_report_506)},
  { 164, 174, -1, sizeof(::apollo::canbus::Ultr_sensor_1_507)},
  { 178, 188, -1, sizeof(::apollo::canbus::Ultr_sensor_2_508)},
  { 192, 202, -1, sizeof(::apollo::canbus::Ultr_sensor_3_509)},
  { 206, 216, -1, sizeof(::apollo::canbus::Ultr_sensor_4_510)},
  { 220, 230, -1, sizeof(::apollo::canbus::Ultr_sensor_5_511)},
  { 234, 243, -1, sizeof(::apollo::canbus::Bms_report_512)},
  { 246, 270, -1, sizeof(::apollo::canbus::Devkit)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::canbus::_Throttle_command_100_default_instance_._instance,
  &::apollo::canbus::_Brake_command_101_default_instance_._instance,
  &::apollo::canbus::_Steering_command_102_default_instance_._instance,
  &::apollo::canbus::_Gear_command_103_default_instance_._instance,
  &::apollo::canbus::_Park_command_104_default_instance_._instance,
  &::apollo::canbus::_Throttle_report_500_default_instance_._instance,
  &::apollo::canbus::_Brake_report_501_default_instance_._instance,
  &::apollo::canbus::_Steering_report_502_default_instance_._instance,
  &::apollo::canbus::_Gear_report_503_default_instance_._instance,
  &::apollo::canbus::_Park_report_504_default_instance_._instance,
  &::apollo::canbus::_Vcu_report_505_default_instance_._instance,
  &::apollo::canbus::_Wheelspeed_report_506_default_instance_._instance,
  &::apollo::canbus::_Ultr_sensor_1_507_default_instance_._instance,
  &::apollo::canbus::_Ultr_sensor_2_508_default_instance_._instance,
  &::apollo::canbus::_Ultr_sensor_3_509_default_instance_._instance,
  &::apollo::canbus::_Ultr_sensor_4_510_default_instance_._instance,
  &::apollo::canbus::_Ultr_sensor_5_511_default_instance_._instance,
  &::apollo::canbus::_Bms_report_512_default_instance_._instance,
  &::apollo::canbus::_Devkit_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fcanbus_2fproto_2fdevkit_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!modules/canbus/proto/devkit.proto\022\rapo"
  "llo.canbus\"\210\002\n\024Throttle_command_100\022\024\n\014t"
  "hrottle_acc\030\001 \001(\001\022\024\n\014checksum_100\030\002 \001(\005\022"
  "\035\n\025throttle_pedal_target\030\003 \001(\001\022R\n\020thrott"
  "le_en_ctrl\030\004 \001(\01628.apollo.canbus.Throttl"
  "e_command_100.Throttle_en_ctrlType\"Q\n\024Th"
  "rottle_en_ctrlType\022\034\n\030THROTTLE_EN_CTRL_D"
  "ISABLE\020\000\022\033\n\027THROTTLE_EN_CTRL_ENABLE\020\001\"\200\003"
  "\n\021Brake_command_101\022\021\n\tbrake_dec\030\001 \001(\001\022\024"
  "\n\014checksum_101\030\002 \001(\005\022\032\n\022brake_pedal_targ"
  "et\030\003 \001(\001\022I\n\rbrake_en_ctrl\030\004 \001(\01622.apollo"
  ".canbus.Brake_command_101.Brake_en_ctrlT"
  "ype\022E\n\013aeb_en_ctrl\030\005 \001(\01620.apollo.canbus"
  ".Brake_command_101.Aeb_en_ctrlType\"J\n\017Ae"
  "b_en_ctrlType\022\033\n\027AEB_EN_CTRL_DISABLE_AEB"
  "\020\000\022\032\n\026AEB_EN_CTRL_ENABLE_AEB\020\001\"H\n\021Brake_"
  "en_ctrlType\022\031\n\025BRAKE_EN_CTRL_DISABLE\020\000\022\030"
  "\n\024BRAKE_EN_CTRL_ENABLE\020\001\"\371\001\n\024Steering_co"
  "mmand_102\022L\n\rsteer_en_ctrl\030\001 \001(\01625.apoll"
  "o.canbus.Steering_command_102.Steer_en_c"
  "trlType\022\032\n\022steer_angle_target\030\002 \001(\005\022\027\n\017s"
  "teer_angle_spd\030\003 \001(\005\022\024\n\014checksum_102\030\004 \001"
  "(\005\"H\n\021Steer_en_ctrlType\022\031\n\025STEER_EN_CTRL"
  "_DISABLE\020\000\022\030\n\024STEER_EN_CTRL_ENABLE\020\001\"\211\003\n"
  "\020Gear_command_103\022D\n\013gear_target\030\001 \001(\0162/"
  ".apollo.canbus.Gear_command_103.Gear_tar"
  "getType\022F\n\014gear_en_ctrl\030\002 \001(\01620.apollo.c"
  "anbus.Gear_command_103.Gear_en_ctrlType\022"
  "\024\n\014checksum_103\030\003 \001(\005\"\211\001\n\017Gear_targetTyp"
  "e\022\027\n\023GEAR_TARGET_INVALID\020\000\022\024\n\020GEAR_TARGE"
  "T_PARK\020\001\022\027\n\023GEAR_TARGET_REVERSE\020\002\022\027\n\023GEA"
  "R_TARGET_NEUTRAL\020\003\022\025\n\021GEAR_TARGET_DRIVE\020"
  "\004\"E\n\020Gear_en_ctrlType\022\030\n\024GEAR_EN_CTRL_DI"
  "SABLE\020\000\022\027\n\023GEAR_EN_CTRL_ENABLE\020\001\"\312\002\n\020Par"
  "k_command_104\022\024\n\014checksum_104\030\001 \001(\005\022D\n\013p"
  "ark_target\030\002 \001(\0162/.apollo.canbus.Park_co"
  "mmand_104.Park_targetType\022F\n\014park_en_ctr"
  "l\030\003 \001(\01620.apollo.canbus.Park_command_104"
  ".Park_en_ctrlType\"K\n\017Park_targetType\022\027\n\023"
  "PARK_TARGET_RELEASE\020\000\022\037\n\033PARK_TARGET_PAR"
  "KING_TRIGGER\020\001\"E\n\020Park_en_ctrlType\022\030\n\024PA"
  "RK_EN_CTRL_DISABLE\020\000\022\027\n\023PARK_EN_CTRL_ENA"
  "BLE\020\001\"\372\004\n\023Throttle_report_500\022\035\n\025throttl"
  "e_pedal_actual\030\001 \001(\001\022K\n\rthrottle_flt2\030\002 "
  "\001(\01624.apollo.canbus.Throttle_report_500."
  "Throttle_flt2Type\022K\n\rthrottle_flt1\030\003 \001(\016"
  "24.apollo.canbus.Throttle_report_500.Thr"
  "ottle_flt1Type\022S\n\021throttle_en_state\030\004 \001("
  "\01628.apollo.canbus.Throttle_report_500.Th"
  "rottle_en_stateType\"b\n\021Throttle_flt2Type"
  "\022\032\n\026THROTTLE_FLT2_NO_FAULT\020\000\0221\n-THROTTLE"
  "_FLT2_DRIVE_SYSTEM_COMUNICATION_FAULT\020\001\""
  "^\n\021Throttle_flt1Type\022\032\n\026THROTTLE_FLT1_NO"
  "_FAULT\020\000\022-\n)THROTTLE_FLT1_DRIVE_SYSTEM_H"
  "ARDWARE_FAULT\020\001\"\220\001\n\025Throttle_en_stateTyp"
  "e\022\034\n\030THROTTLE_EN_STATE_MANUAL\020\000\022\032\n\026THROT"
  "TLE_EN_STATE_AUTO\020\001\022\036\n\032THROTTLE_EN_STATE"
  "_TAKEOVER\020\002\022\035\n\031THROTTLE_EN_STATE_STANDBY"
  "\020\003\"\270\004\n\020Brake_report_501\022\032\n\022brake_pedal_a"
  "ctual\030\001 \001(\001\022B\n\nbrake_flt2\030\002 \001(\0162..apollo"
  ".canbus.Brake_report_501.Brake_flt2Type\022"
  "B\n\nbrake_flt1\030\003 \001(\0162..apollo.canbus.Brak"
  "e_report_501.Brake_flt1Type\022J\n\016brake_en_"
  "state\030\004 \001(\01622.apollo.canbus.Brake_report"
  "_501.Brake_en_stateType\"Y\n\016Brake_flt2Typ"
  "e\022\027\n\023BRAKE_FLT2_NO_FAULT\020\000\022.\n*BRAKE_FLT2"
  "_BRAKE_SYSTEM_COMUNICATION_FAULT\020\001\"U\n\016Br"
  "ake_flt1Type\022\027\n\023BRAKE_FLT1_NO_FAULT\020\000\022*\n"
  "&BRAKE_FLT1_BRAKE_SYSTEM_HARDWARE_FAULT\020"
  "\001\"\201\001\n\022Brake_en_stateType\022\031\n\025BRAKE_EN_STA"
  "TE_MANUAL\020\000\022\027\n\023BRAKE_EN_STATE_AUTO\020\001\022\033\n\027"
  "BRAKE_EN_STATE_TAKEOVER\020\002\022\032\n\026BRAKE_EN_ST"
  "ATE_STANDBY\020\003\"\344\004\n\023Steering_report_502\022\036\n"
  "\026steer_angle_spd_actual\030\001 \001(\005\022E\n\nsteer_f"
  "lt2\030\002 \001(\01621.apollo.canbus.Steering_repor"
  "t_502.Steer_flt2Type\022E\n\nsteer_flt1\030\003 \001(\016"
  "21.apollo.canbus.Steering_report_502.Ste"
  "er_flt1Type\022M\n\016steer_en_state\030\004 \001(\01625.ap"
  "ollo.canbus.Steering_report_502.Steer_en"
  "_stateType\022\032\n\022steer_angle_actual\030\005 \001(\005\"Y"
  "\n\016Steer_flt2Type\022\027\n\023STEER_FLT2_NO_FAULT\020"
  "\000\022.\n*STEER_FLT2_STEER_SYSTEM_COMUNICATIO"
  "N_FAULT\020\001\"U\n\016Steer_flt1Type\022\027\n\023STEER_FLT"
  "1_NO_FAULT\020\000\022*\n&STEER_FLT1_STEER_SYSTEM_"
  "HARDWARE_FAULT\020\001\"\201\001\n\022Steer_en_stateType\022"
  "\031\n\025STEER_EN_STATE_MANUAL\020\000\022\027\n\023STEER_EN_S"
  "TATE_AUTO\020\001\022\033\n\027STEER_EN_STATE_TAKEOVER\020\002"
  "\022\032\n\026STEER_EN_STATE_STANDBY\020\003\"\334\002\n\017Gear_re"
  "port_503\022=\n\010gear_flt\030\001 \001(\0162+.apollo.canb"
  "us.Gear_report_503.Gear_fltType\022C\n\013gear_"
  "actual\030\002 \001(\0162..apollo.canbus.Gear_report"
  "_503.Gear_actualType\"9\n\014Gear_fltType\022\025\n\021"
  "GEAR_FLT_NO_FAULT\020\000\022\022\n\016GEAR_FLT_FAULT\020\001\""
  "\211\001\n\017Gear_actualType\022\027\n\023GEAR_ACTUAL_INVAL"
  "ID\020\000\022\024\n\020GEAR_ACTUAL_PARK\020\001\022\027\n\023GEAR_ACTUA"
  "L_REVERSE\020\002\022\027\n\023GEAR_ACTUAL_NEUTRAL\020\003\022\025\n\021"
  "GEAR_ACTUAL_DRIVE\020\004\"\254\002\n\017Park_report_504\022"
  "I\n\016parking_actual\030\001 \001(\01621.apollo.canbus."
  "Park_report_504.Parking_actualType\022=\n\010pa"
  "rk_flt\030\002 \001(\0162+.apollo.canbus.Park_report"
  "_504.Park_fltType\"T\n\022Parking_actualType\022"
  "\032\n\026PARKING_ACTUAL_RELEASE\020\000\022\"\n\036PARKING_A"
  "CTUAL_PARKING_TRIGGER\020\001\"9\n\014Park_fltType\022"
  "\025\n\021PARK_FLT_NO_FAULT\020\000\022\022\n\016PARK_FLT_FAULT"
  "\020\001\"\372\005\n\016Vcu_report_505\022P\n\022vehicle_mode_st"
  "ate\030\001 \001(\01624.apollo.canbus.Vcu_report_505"
  ".Vehicle_mode_stateType\022L\n\020frontcrash_st"
  "ate\030\002 \001(\01622.apollo.canbus.Vcu_report_505"
  ".Frontcrash_stateType\022J\n\017backcrash_state"
  "\030\003 \001(\01621.apollo.canbus.Vcu_report_505.Ba"
  "ckcrash_stateType\022>\n\taeb_state\030\004 \001(\0162+.a"
  "pollo.canbus.Vcu_report_505.Aeb_stateTyp"
  "e\022\013\n\003acc\030\005 \001(\001\022\r\n\005speed\030\006 \001(\001\"\261\001\n\026Vehicl"
  "e_mode_stateType\022)\n%VEHICLE_MODE_STATE_M"
  "ANUAL_REMOTE_MODE\020\000\022 \n\034VEHICLE_MODE_STAT"
  "E_AUTO_MODE\020\001\022%\n!VEHICLE_MODE_STATE_EMER"
  "GENCY_MODE\020\002\022#\n\037VEHICLE_MODE_STATE_STAND"
  "BY_MODE\020\003\"W\n\024Frontcrash_stateType\022\035\n\031FRO"
  "NTCRASH_STATE_NO_EVENT\020\000\022 \n\034FRONTCRASH_S"
  "TATE_CRASH_EVENT\020\001\"T\n\023Backcrash_stateTyp"
  "e\022\034\n\030BACKCRASH_STATE_NO_EVENT\020\000\022\037\n\033BACKC"
  "RASH_STATE_CRASH_EVENT\020\001\"=\n\rAeb_stateTyp"
  "e\022\026\n\022AEB_STATE_INACTIVE\020\000\022\024\n\020AEB_STATE_A"
  "CTIVE\020\001\"G\n\025Wheelspeed_report_506\022\n\n\002rr\030\001"
  " \001(\001\022\n\n\002rl\030\002 \001(\001\022\n\n\002fr\030\003 \001(\001\022\n\n\002fl\030\004 \001(\001"
  "\"\201\001\n\021Ultr_sensor_1_507\022\031\n\021uiuss9_tof_dir"
  "ect\030\001 \001(\001\022\031\n\021uiuss8_tof_direct\030\002 \001(\001\022\032\n\022"
  "uiuss11_tof_direct\030\003 \001(\001\022\032\n\022uiuss10_tof_"
  "direct\030\004 \001(\001\"\211\001\n\021Ultr_sensor_2_508\022\033\n\023ui"
  "uss9_tof_indirect\030\001 \001(\001\022\033\n\023uiuss8_tof_in"
  "direct\030\002 \001(\001\022\034\n\024uiuss11_tof_indirect\030\003 \001"
  "(\001\022\034\n\024uiuss10_tof_indirect\030\004 \001(\001\"\177\n\021Ultr"
  "_sensor_3_509\022\031\n\021uiuss5_tof_direct\030\001 \001(\001"
  "\022\031\n\021uiuss4_tof_direct\030\002 \001(\001\022\031\n\021uiuss3_to"
  "f_direct\030\003 \001(\001\022\031\n\021uiuss2_tof_direct\030\004 \001("
  "\001\"\207\001\n\021Ultr_sensor_4_510\022\033\n\023uiuss5_tof_in"
  "direct\030\001 \001(\001\022\033\n\023uiuss4_tof_indirect\030\002 \001("
  "\001\022\033\n\023uiuss3_tof_indirect\030\003 \001(\001\022\033\n\023uiuss2"
  "_tof_indirect\030\004 \001(\001\"\177\n\021Ultr_sensor_5_511"
  "\022\031\n\021uiuss7_tof_direct\030\001 \001(\001\022\031\n\021uiuss6_to"
  "f_direct\030\002 \001(\001\022\031\n\021uiuss1_tof_direct\030\003 \001("
  "\001\022\031\n\021uiuss0_tof_direct\030\004 \001(\001\"W\n\016Bms_repo"
  "rt_512\022\027\n\017battery_current\030\001 \001(\001\022\027\n\017batte"
  "ry_voltage\030\002 \001(\001\022\023\n\013battery_soc\030\003 \001(\005\"\324\010"
  "\n\006Devkit\022A\n\024throttle_command_100\030\001 \001(\0132#"
  ".apollo.canbus.Throttle_command_100\022;\n\021b"
  "rake_command_101\030\002 \001(\0132 .apollo.canbus.B"
  "rake_command_101\022A\n\024steering_command_102"
  "\030\003 \001(\0132#.apollo.canbus.Steering_command_"
  "102\0229\n\020gear_command_103\030\004 \001(\0132\037.apollo.c"
  "anbus.Gear_command_103\0229\n\020park_command_1"
  "04\030\005 \001(\0132\037.apollo.canbus.Park_command_10"
  "4\022\?\n\023throttle_report_500\030\006 \001(\0132\".apollo."
  "canbus.Throttle_report_500\0229\n\020brake_repo"
  "rt_501\030\007 \001(\0132\037.apollo.canbus.Brake_repor"
  "t_501\022\?\n\023steering_report_502\030\010 \001(\0132\".apo"
  "llo.canbus.Steering_report_502\0227\n\017gear_r"
  "eport_503\030\t \001(\0132\036.apollo.canbus.Gear_rep"
  "ort_503\0227\n\017park_report_504\030\n \001(\0132\036.apoll"
  "o.canbus.Park_report_504\0225\n\016vcu_report_5"
  "05\030\013 \001(\0132\035.apollo.canbus.Vcu_report_505\022"
  "C\n\025wheelspeed_report_506\030\014 \001(\0132$.apollo."
  "canbus.Wheelspeed_report_506\022;\n\021ultr_sen"
  "sor_1_507\030\r \001(\0132 .apollo.canbus.Ultr_sen"
  "sor_1_507\022;\n\021ultr_sensor_2_508\030\016 \001(\0132 .a"
  "pollo.canbus.Ultr_sensor_2_508\022;\n\021ultr_s"
  "ensor_3_509\030\017 \001(\0132 .apollo.canbus.Ultr_s"
  "ensor_3_509\022;\n\021ultr_sensor_4_510\030\020 \001(\0132 "
  ".apollo.canbus.Ultr_sensor_4_510\022;\n\021ultr"
  "_sensor_5_511\030\021 \001(\0132 .apollo.canbus.Ultr"
  "_sensor_5_511\0225\n\016bms_report_512\030\022 \001(\0132\035."
  "apollo.canbus.Bms_report_512"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto = {
    false, false, 6868, descriptor_table_protodef_modules_2fcanbus_2fproto_2fdevkit_2eproto,
    "modules/canbus/proto/devkit.proto",
    &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once, nullptr, 0, 19,
    schemas, file_default_instances, TableStruct_modules_2fcanbus_2fproto_2fdevkit_2eproto::offsets,
    file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto, file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto,
    file_level_service_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter() {
  return &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fcanbus_2fproto_2fdevkit_2eproto(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
namespace apollo {
namespace canbus {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Throttle_command_100_Throttle_en_ctrlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[0];
}
bool Throttle_command_100_Throttle_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Throttle_command_100_Throttle_en_ctrlType Throttle_command_100::THROTTLE_EN_CTRL_DISABLE;
constexpr Throttle_command_100_Throttle_en_ctrlType Throttle_command_100::THROTTLE_EN_CTRL_ENABLE;
constexpr Throttle_command_100_Throttle_en_ctrlType Throttle_command_100::Throttle_en_ctrlType_MIN;
constexpr Throttle_command_100_Throttle_en_ctrlType Throttle_command_100::Throttle_en_ctrlType_MAX;
constexpr int Throttle_command_100::Throttle_en_ctrlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brake_command_101_Aeb_en_ctrlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[1];
}
bool Brake_command_101_Aeb_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Brake_command_101_Aeb_en_ctrlType Brake_command_101::AEB_EN_CTRL_DISABLE_AEB;
constexpr Brake_command_101_Aeb_en_ctrlType Brake_command_101::AEB_EN_CTRL_ENABLE_AEB;
constexpr Brake_command_101_Aeb_en_ctrlType Brake_command_101::Aeb_en_ctrlType_MIN;
constexpr Brake_command_101_Aeb_en_ctrlType Brake_command_101::Aeb_en_ctrlType_MAX;
constexpr int Brake_command_101::Aeb_en_ctrlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brake_command_101_Brake_en_ctrlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[2];
}
bool Brake_command_101_Brake_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Brake_command_101_Brake_en_ctrlType Brake_command_101::BRAKE_EN_CTRL_DISABLE;
constexpr Brake_command_101_Brake_en_ctrlType Brake_command_101::BRAKE_EN_CTRL_ENABLE;
constexpr Brake_command_101_Brake_en_ctrlType Brake_command_101::Brake_en_ctrlType_MIN;
constexpr Brake_command_101_Brake_en_ctrlType Brake_command_101::Brake_en_ctrlType_MAX;
constexpr int Brake_command_101::Brake_en_ctrlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Steering_command_102_Steer_en_ctrlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[3];
}
bool Steering_command_102_Steer_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Steering_command_102_Steer_en_ctrlType Steering_command_102::STEER_EN_CTRL_DISABLE;
constexpr Steering_command_102_Steer_en_ctrlType Steering_command_102::STEER_EN_CTRL_ENABLE;
constexpr Steering_command_102_Steer_en_ctrlType Steering_command_102::Steer_en_ctrlType_MIN;
constexpr Steering_command_102_Steer_en_ctrlType Steering_command_102::Steer_en_ctrlType_MAX;
constexpr int Steering_command_102::Steer_en_ctrlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Gear_command_103_Gear_targetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[4];
}
bool Gear_command_103_Gear_targetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Gear_command_103_Gear_targetType Gear_command_103::GEAR_TARGET_INVALID;
constexpr Gear_command_103_Gear_targetType Gear_command_103::GEAR_TARGET_PARK;
constexpr Gear_command_103_Gear_targetType Gear_command_103::GEAR_TARGET_REVERSE;
constexpr Gear_command_103_Gear_targetType Gear_command_103::GEAR_TARGET_NEUTRAL;
constexpr Gear_command_103_Gear_targetType Gear_command_103::GEAR_TARGET_DRIVE;
constexpr Gear_command_103_Gear_targetType Gear_command_103::Gear_targetType_MIN;
constexpr Gear_command_103_Gear_targetType Gear_command_103::Gear_targetType_MAX;
constexpr int Gear_command_103::Gear_targetType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Gear_command_103_Gear_en_ctrlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[5];
}
bool Gear_command_103_Gear_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Gear_command_103_Gear_en_ctrlType Gear_command_103::GEAR_EN_CTRL_DISABLE;
constexpr Gear_command_103_Gear_en_ctrlType Gear_command_103::GEAR_EN_CTRL_ENABLE;
constexpr Gear_command_103_Gear_en_ctrlType Gear_command_103::Gear_en_ctrlType_MIN;
constexpr Gear_command_103_Gear_en_ctrlType Gear_command_103::Gear_en_ctrlType_MAX;
constexpr int Gear_command_103::Gear_en_ctrlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Park_command_104_Park_targetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[6];
}
bool Park_command_104_Park_targetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Park_command_104_Park_targetType Park_command_104::PARK_TARGET_RELEASE;
constexpr Park_command_104_Park_targetType Park_command_104::PARK_TARGET_PARKING_TRIGGER;
constexpr Park_command_104_Park_targetType Park_command_104::Park_targetType_MIN;
constexpr Park_command_104_Park_targetType Park_command_104::Park_targetType_MAX;
constexpr int Park_command_104::Park_targetType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Park_command_104_Park_en_ctrlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[7];
}
bool Park_command_104_Park_en_ctrlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Park_command_104_Park_en_ctrlType Park_command_104::PARK_EN_CTRL_DISABLE;
constexpr Park_command_104_Park_en_ctrlType Park_command_104::PARK_EN_CTRL_ENABLE;
constexpr Park_command_104_Park_en_ctrlType Park_command_104::Park_en_ctrlType_MIN;
constexpr Park_command_104_Park_en_ctrlType Park_command_104::Park_en_ctrlType_MAX;
constexpr int Park_command_104::Park_en_ctrlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Throttle_report_500_Throttle_flt2Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[8];
}
bool Throttle_report_500_Throttle_flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Throttle_report_500_Throttle_flt2Type Throttle_report_500::THROTTLE_FLT2_NO_FAULT;
constexpr Throttle_report_500_Throttle_flt2Type Throttle_report_500::THROTTLE_FLT2_DRIVE_SYSTEM_COMUNICATION_FAULT;
constexpr Throttle_report_500_Throttle_flt2Type Throttle_report_500::Throttle_flt2Type_MIN;
constexpr Throttle_report_500_Throttle_flt2Type Throttle_report_500::Throttle_flt2Type_MAX;
constexpr int Throttle_report_500::Throttle_flt2Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Throttle_report_500_Throttle_flt1Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[9];
}
bool Throttle_report_500_Throttle_flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Throttle_report_500_Throttle_flt1Type Throttle_report_500::THROTTLE_FLT1_NO_FAULT;
constexpr Throttle_report_500_Throttle_flt1Type Throttle_report_500::THROTTLE_FLT1_DRIVE_SYSTEM_HARDWARE_FAULT;
constexpr Throttle_report_500_Throttle_flt1Type Throttle_report_500::Throttle_flt1Type_MIN;
constexpr Throttle_report_500_Throttle_flt1Type Throttle_report_500::Throttle_flt1Type_MAX;
constexpr int Throttle_report_500::Throttle_flt1Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Throttle_report_500_Throttle_en_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[10];
}
bool Throttle_report_500_Throttle_en_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Throttle_report_500_Throttle_en_stateType Throttle_report_500::THROTTLE_EN_STATE_MANUAL;
constexpr Throttle_report_500_Throttle_en_stateType Throttle_report_500::THROTTLE_EN_STATE_AUTO;
constexpr Throttle_report_500_Throttle_en_stateType Throttle_report_500::THROTTLE_EN_STATE_TAKEOVER;
constexpr Throttle_report_500_Throttle_en_stateType Throttle_report_500::THROTTLE_EN_STATE_STANDBY;
constexpr Throttle_report_500_Throttle_en_stateType Throttle_report_500::Throttle_en_stateType_MIN;
constexpr Throttle_report_500_Throttle_en_stateType Throttle_report_500::Throttle_en_stateType_MAX;
constexpr int Throttle_report_500::Throttle_en_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brake_report_501_Brake_flt2Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[11];
}
bool Brake_report_501_Brake_flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Brake_report_501_Brake_flt2Type Brake_report_501::BRAKE_FLT2_NO_FAULT;
constexpr Brake_report_501_Brake_flt2Type Brake_report_501::BRAKE_FLT2_BRAKE_SYSTEM_COMUNICATION_FAULT;
constexpr Brake_report_501_Brake_flt2Type Brake_report_501::Brake_flt2Type_MIN;
constexpr Brake_report_501_Brake_flt2Type Brake_report_501::Brake_flt2Type_MAX;
constexpr int Brake_report_501::Brake_flt2Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brake_report_501_Brake_flt1Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[12];
}
bool Brake_report_501_Brake_flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Brake_report_501_Brake_flt1Type Brake_report_501::BRAKE_FLT1_NO_FAULT;
constexpr Brake_report_501_Brake_flt1Type Brake_report_501::BRAKE_FLT1_BRAKE_SYSTEM_HARDWARE_FAULT;
constexpr Brake_report_501_Brake_flt1Type Brake_report_501::Brake_flt1Type_MIN;
constexpr Brake_report_501_Brake_flt1Type Brake_report_501::Brake_flt1Type_MAX;
constexpr int Brake_report_501::Brake_flt1Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brake_report_501_Brake_en_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[13];
}
bool Brake_report_501_Brake_en_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Brake_report_501_Brake_en_stateType Brake_report_501::BRAKE_EN_STATE_MANUAL;
constexpr Brake_report_501_Brake_en_stateType Brake_report_501::BRAKE_EN_STATE_AUTO;
constexpr Brake_report_501_Brake_en_stateType Brake_report_501::BRAKE_EN_STATE_TAKEOVER;
constexpr Brake_report_501_Brake_en_stateType Brake_report_501::BRAKE_EN_STATE_STANDBY;
constexpr Brake_report_501_Brake_en_stateType Brake_report_501::Brake_en_stateType_MIN;
constexpr Brake_report_501_Brake_en_stateType Brake_report_501::Brake_en_stateType_MAX;
constexpr int Brake_report_501::Brake_en_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Steering_report_502_Steer_flt2Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[14];
}
bool Steering_report_502_Steer_flt2Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Steering_report_502_Steer_flt2Type Steering_report_502::STEER_FLT2_NO_FAULT;
constexpr Steering_report_502_Steer_flt2Type Steering_report_502::STEER_FLT2_STEER_SYSTEM_COMUNICATION_FAULT;
constexpr Steering_report_502_Steer_flt2Type Steering_report_502::Steer_flt2Type_MIN;
constexpr Steering_report_502_Steer_flt2Type Steering_report_502::Steer_flt2Type_MAX;
constexpr int Steering_report_502::Steer_flt2Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Steering_report_502_Steer_flt1Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[15];
}
bool Steering_report_502_Steer_flt1Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Steering_report_502_Steer_flt1Type Steering_report_502::STEER_FLT1_NO_FAULT;
constexpr Steering_report_502_Steer_flt1Type Steering_report_502::STEER_FLT1_STEER_SYSTEM_HARDWARE_FAULT;
constexpr Steering_report_502_Steer_flt1Type Steering_report_502::Steer_flt1Type_MIN;
constexpr Steering_report_502_Steer_flt1Type Steering_report_502::Steer_flt1Type_MAX;
constexpr int Steering_report_502::Steer_flt1Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Steering_report_502_Steer_en_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[16];
}
bool Steering_report_502_Steer_en_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Steering_report_502_Steer_en_stateType Steering_report_502::STEER_EN_STATE_MANUAL;
constexpr Steering_report_502_Steer_en_stateType Steering_report_502::STEER_EN_STATE_AUTO;
constexpr Steering_report_502_Steer_en_stateType Steering_report_502::STEER_EN_STATE_TAKEOVER;
constexpr Steering_report_502_Steer_en_stateType Steering_report_502::STEER_EN_STATE_STANDBY;
constexpr Steering_report_502_Steer_en_stateType Steering_report_502::Steer_en_stateType_MIN;
constexpr Steering_report_502_Steer_en_stateType Steering_report_502::Steer_en_stateType_MAX;
constexpr int Steering_report_502::Steer_en_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Gear_report_503_Gear_fltType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[17];
}
bool Gear_report_503_Gear_fltType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Gear_report_503_Gear_fltType Gear_report_503::GEAR_FLT_NO_FAULT;
constexpr Gear_report_503_Gear_fltType Gear_report_503::GEAR_FLT_FAULT;
constexpr Gear_report_503_Gear_fltType Gear_report_503::Gear_fltType_MIN;
constexpr Gear_report_503_Gear_fltType Gear_report_503::Gear_fltType_MAX;
constexpr int Gear_report_503::Gear_fltType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Gear_report_503_Gear_actualType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[18];
}
bool Gear_report_503_Gear_actualType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Gear_report_503_Gear_actualType Gear_report_503::GEAR_ACTUAL_INVALID;
constexpr Gear_report_503_Gear_actualType Gear_report_503::GEAR_ACTUAL_PARK;
constexpr Gear_report_503_Gear_actualType Gear_report_503::GEAR_ACTUAL_REVERSE;
constexpr Gear_report_503_Gear_actualType Gear_report_503::GEAR_ACTUAL_NEUTRAL;
constexpr Gear_report_503_Gear_actualType Gear_report_503::GEAR_ACTUAL_DRIVE;
constexpr Gear_report_503_Gear_actualType Gear_report_503::Gear_actualType_MIN;
constexpr Gear_report_503_Gear_actualType Gear_report_503::Gear_actualType_MAX;
constexpr int Gear_report_503::Gear_actualType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Park_report_504_Parking_actualType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[19];
}
bool Park_report_504_Parking_actualType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Park_report_504_Parking_actualType Park_report_504::PARKING_ACTUAL_RELEASE;
constexpr Park_report_504_Parking_actualType Park_report_504::PARKING_ACTUAL_PARKING_TRIGGER;
constexpr Park_report_504_Parking_actualType Park_report_504::Parking_actualType_MIN;
constexpr Park_report_504_Parking_actualType Park_report_504::Parking_actualType_MAX;
constexpr int Park_report_504::Parking_actualType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Park_report_504_Park_fltType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[20];
}
bool Park_report_504_Park_fltType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Park_report_504_Park_fltType Park_report_504::PARK_FLT_NO_FAULT;
constexpr Park_report_504_Park_fltType Park_report_504::PARK_FLT_FAULT;
constexpr Park_report_504_Park_fltType Park_report_504::Park_fltType_MIN;
constexpr Park_report_504_Park_fltType Park_report_504::Park_fltType_MAX;
constexpr int Park_report_504::Park_fltType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcu_report_505_Vehicle_mode_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[21];
}
bool Vcu_report_505_Vehicle_mode_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Vcu_report_505_Vehicle_mode_stateType Vcu_report_505::VEHICLE_MODE_STATE_MANUAL_REMOTE_MODE;
constexpr Vcu_report_505_Vehicle_mode_stateType Vcu_report_505::VEHICLE_MODE_STATE_AUTO_MODE;
constexpr Vcu_report_505_Vehicle_mode_stateType Vcu_report_505::VEHICLE_MODE_STATE_EMERGENCY_MODE;
constexpr Vcu_report_505_Vehicle_mode_stateType Vcu_report_505::VEHICLE_MODE_STATE_STANDBY_MODE;
constexpr Vcu_report_505_Vehicle_mode_stateType Vcu_report_505::Vehicle_mode_stateType_MIN;
constexpr Vcu_report_505_Vehicle_mode_stateType Vcu_report_505::Vehicle_mode_stateType_MAX;
constexpr int Vcu_report_505::Vehicle_mode_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcu_report_505_Frontcrash_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[22];
}
bool Vcu_report_505_Frontcrash_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Vcu_report_505_Frontcrash_stateType Vcu_report_505::FRONTCRASH_STATE_NO_EVENT;
constexpr Vcu_report_505_Frontcrash_stateType Vcu_report_505::FRONTCRASH_STATE_CRASH_EVENT;
constexpr Vcu_report_505_Frontcrash_stateType Vcu_report_505::Frontcrash_stateType_MIN;
constexpr Vcu_report_505_Frontcrash_stateType Vcu_report_505::Frontcrash_stateType_MAX;
constexpr int Vcu_report_505::Frontcrash_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcu_report_505_Backcrash_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[23];
}
bool Vcu_report_505_Backcrash_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Vcu_report_505_Backcrash_stateType Vcu_report_505::BACKCRASH_STATE_NO_EVENT;
constexpr Vcu_report_505_Backcrash_stateType Vcu_report_505::BACKCRASH_STATE_CRASH_EVENT;
constexpr Vcu_report_505_Backcrash_stateType Vcu_report_505::Backcrash_stateType_MIN;
constexpr Vcu_report_505_Backcrash_stateType Vcu_report_505::Backcrash_stateType_MAX;
constexpr int Vcu_report_505::Backcrash_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcu_report_505_Aeb_stateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fdevkit_2eproto[24];
}
bool Vcu_report_505_Aeb_stateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Vcu_report_505_Aeb_stateType Vcu_report_505::AEB_STATE_INACTIVE;
constexpr Vcu_report_505_Aeb_stateType Vcu_report_505::AEB_STATE_ACTIVE;
constexpr Vcu_report_505_Aeb_stateType Vcu_report_505::Aeb_stateType_MIN;
constexpr Vcu_report_505_Aeb_stateType Vcu_report_505::Aeb_stateType_MAX;
constexpr int Vcu_report_505::Aeb_stateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Throttle_command_100::_Internal {
 public:
  using HasBits = decltype(std::declval<Throttle_command_100>()._impl_._has_bits_);
  static void set_has_throttle_acc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_checksum_100(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_throttle_pedal_target(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_throttle_en_ctrl(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Throttle_command_100::Throttle_command_100(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Throttle_command_100)
}
Throttle_command_100::Throttle_command_100(const Throttle_command_100& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.throttle_acc_){}
    , decltype(_impl_.throttle_pedal_target_){}
    , decltype(_impl_.checksum_100_){}
    , decltype(_impl_.throttle_en_ctrl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.throttle_acc_, &from._impl_.throttle_acc_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.throttle_en_ctrl_) -
    reinterpret_cast<char*>(&_impl_.throttle_acc_)) + sizeof(_impl_.throttle_en_ctrl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Throttle_command_100)
}

inline void Throttle_command_100::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.throttle_acc_){0}
    , decltype(_impl_.throttle_pedal_target_){0}
    , decltype(_impl_.checksum_100_){0}
    , decltype(_impl_.throttle_en_ctrl_){0}
  };
}

Throttle_command_100::~Throttle_command_100() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Throttle_command_100)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Throttle_command_100::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Throttle_command_100::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Throttle_command_100::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Throttle_command_100)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.throttle_acc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.throttle_en_ctrl_) -
        reinterpret_cast<char*>(&_impl_.throttle_acc_)) + sizeof(_impl_.throttle_en_ctrl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Throttle_command_100::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double throttle_acc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_throttle_acc(&has_bits);
          _impl_.throttle_acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional int32 checksum_100 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_checksum_100(&has_bits);
          _impl_.checksum_100_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double throttle_pedal_target = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_throttle_pedal_target(&has_bits);
          _impl_.throttle_pedal_target_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Throttle_command_100.Throttle_en_ctrlType throttle_en_ctrl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Throttle_command_100_Throttle_en_ctrlType_IsValid(val))) {
            _internal_set_throttle_en_ctrl(static_cast<::apollo::canbus::Throttle_command_100_Throttle_en_ctrlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Throttle_command_100::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Throttle_command_100)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double throttle_acc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_throttle_acc(), target);
  }

  // optional int32 checksum_100 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_checksum_100(), target);
  }

  // optional double throttle_pedal_target = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_throttle_pedal_target(), target);
  }

  // optional .apollo.canbus.Throttle_command_100.Throttle_en_ctrlType throttle_en_ctrl = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_throttle_en_ctrl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Throttle_command_100)
  return target;
}

size_t Throttle_command_100::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Throttle_command_100)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double throttle_acc = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double throttle_pedal_target = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 checksum_100 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checksum_100());
    }

    // optional .apollo.canbus.Throttle_command_100.Throttle_en_ctrlType throttle_en_ctrl = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_throttle_en_ctrl());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Throttle_command_100::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Throttle_command_100::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Throttle_command_100::GetClassData() const { return &_class_data_; }

void Throttle_command_100::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Throttle_command_100 *>(to)->MergeFrom(
      static_cast<const Throttle_command_100 &>(from));
}


void Throttle_command_100::MergeFrom(const Throttle_command_100& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Throttle_command_100)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.throttle_acc_ = from._impl_.throttle_acc_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.throttle_pedal_target_ = from._impl_.throttle_pedal_target_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.checksum_100_ = from._impl_.checksum_100_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.throttle_en_ctrl_ = from._impl_.throttle_en_ctrl_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Throttle_command_100::CopyFrom(const Throttle_command_100& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Throttle_command_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttle_command_100::IsInitialized() const {
  return true;
}

void Throttle_command_100::InternalSwap(Throttle_command_100* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Throttle_command_100, _impl_.throttle_en_ctrl_)
      + sizeof(Throttle_command_100::_impl_.throttle_en_ctrl_)
      - PROTOBUF_FIELD_OFFSET(Throttle_command_100, _impl_.throttle_acc_)>(
          reinterpret_cast<char*>(&_impl_.throttle_acc_),
          reinterpret_cast<char*>(&other->_impl_.throttle_acc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Throttle_command_100::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[0]);
}

// ===================================================================

class Brake_command_101::_Internal {
 public:
  using HasBits = decltype(std::declval<Brake_command_101>()._impl_._has_bits_);
  static void set_has_brake_dec(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_checksum_101(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_brake_pedal_target(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_brake_en_ctrl(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_aeb_en_ctrl(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Brake_command_101::Brake_command_101(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Brake_command_101)
}
Brake_command_101::Brake_command_101(const Brake_command_101& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.brake_dec_){}
    , decltype(_impl_.brake_pedal_target_){}
    , decltype(_impl_.checksum_101_){}
    , decltype(_impl_.brake_en_ctrl_){}
    , decltype(_impl_.aeb_en_ctrl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.brake_dec_, &from._impl_.brake_dec_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.aeb_en_ctrl_) -
    reinterpret_cast<char*>(&_impl_.brake_dec_)) + sizeof(_impl_.aeb_en_ctrl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Brake_command_101)
}

inline void Brake_command_101::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.brake_dec_){0}
    , decltype(_impl_.brake_pedal_target_){0}
    , decltype(_impl_.checksum_101_){0}
    , decltype(_impl_.brake_en_ctrl_){0}
    , decltype(_impl_.aeb_en_ctrl_){0}
  };
}

Brake_command_101::~Brake_command_101() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Brake_command_101)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Brake_command_101::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Brake_command_101::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Brake_command_101::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Brake_command_101)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.brake_dec_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.aeb_en_ctrl_) -
        reinterpret_cast<char*>(&_impl_.brake_dec_)) + sizeof(_impl_.aeb_en_ctrl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Brake_command_101::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double brake_dec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_brake_dec(&has_bits);
          _impl_.brake_dec_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional int32 checksum_101 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_checksum_101(&has_bits);
          _impl_.checksum_101_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double brake_pedal_target = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_brake_pedal_target(&has_bits);
          _impl_.brake_pedal_target_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_command_101.Brake_en_ctrlType brake_en_ctrl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brake_command_101_Brake_en_ctrlType_IsValid(val))) {
            _internal_set_brake_en_ctrl(static_cast<::apollo::canbus::Brake_command_101_Brake_en_ctrlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_command_101.Aeb_en_ctrlType aeb_en_ctrl = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brake_command_101_Aeb_en_ctrlType_IsValid(val))) {
            _internal_set_aeb_en_ctrl(static_cast<::apollo::canbus::Brake_command_101_Aeb_en_ctrlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Brake_command_101::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Brake_command_101)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double brake_dec = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_brake_dec(), target);
  }

  // optional int32 checksum_101 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_checksum_101(), target);
  }

  // optional double brake_pedal_target = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_brake_pedal_target(), target);
  }

  // optional .apollo.canbus.Brake_command_101.Brake_en_ctrlType brake_en_ctrl = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_brake_en_ctrl(), target);
  }

  // optional .apollo.canbus.Brake_command_101.Aeb_en_ctrlType aeb_en_ctrl = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_aeb_en_ctrl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Brake_command_101)
  return target;
}

size_t Brake_command_101::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Brake_command_101)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional double brake_dec = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double brake_pedal_target = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 checksum_101 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checksum_101());
    }

    // optional .apollo.canbus.Brake_command_101.Brake_en_ctrlType brake_en_ctrl = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_brake_en_ctrl());
    }

    // optional .apollo.canbus.Brake_command_101.Aeb_en_ctrlType aeb_en_ctrl = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_aeb_en_ctrl());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Brake_command_101::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Brake_command_101::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Brake_command_101::GetClassData() const { return &_class_data_; }

void Brake_command_101::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Brake_command_101 *>(to)->MergeFrom(
      static_cast<const Brake_command_101 &>(from));
}


void Brake_command_101::MergeFrom(const Brake_command_101& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Brake_command_101)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.brake_dec_ = from._impl_.brake_dec_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.brake_pedal_target_ = from._impl_.brake_pedal_target_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.checksum_101_ = from._impl_.checksum_101_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.brake_en_ctrl_ = from._impl_.brake_en_ctrl_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.aeb_en_ctrl_ = from._impl_.aeb_en_ctrl_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Brake_command_101::CopyFrom(const Brake_command_101& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Brake_command_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brake_command_101::IsInitialized() const {
  return true;
}

void Brake_command_101::InternalSwap(Brake_command_101* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Brake_command_101, _impl_.aeb_en_ctrl_)
      + sizeof(Brake_command_101::_impl_.aeb_en_ctrl_)
      - PROTOBUF_FIELD_OFFSET(Brake_command_101, _impl_.brake_dec_)>(
          reinterpret_cast<char*>(&_impl_.brake_dec_),
          reinterpret_cast<char*>(&other->_impl_.brake_dec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Brake_command_101::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[1]);
}

// ===================================================================

class Steering_command_102::_Internal {
 public:
  using HasBits = decltype(std::declval<Steering_command_102>()._impl_._has_bits_);
  static void set_has_steer_en_ctrl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steer_angle_target(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_steer_angle_spd(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_checksum_102(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Steering_command_102::Steering_command_102(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Steering_command_102)
}
Steering_command_102::Steering_command_102(const Steering_command_102& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.steer_en_ctrl_){}
    , decltype(_impl_.steer_angle_target_){}
    , decltype(_impl_.steer_angle_spd_){}
    , decltype(_impl_.checksum_102_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.steer_en_ctrl_, &from._impl_.steer_en_ctrl_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.checksum_102_) -
    reinterpret_cast<char*>(&_impl_.steer_en_ctrl_)) + sizeof(_impl_.checksum_102_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Steering_command_102)
}

inline void Steering_command_102::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.steer_en_ctrl_){0}
    , decltype(_impl_.steer_angle_target_){0}
    , decltype(_impl_.steer_angle_spd_){0}
    , decltype(_impl_.checksum_102_){0}
  };
}

Steering_command_102::~Steering_command_102() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Steering_command_102)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Steering_command_102::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Steering_command_102::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Steering_command_102::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Steering_command_102)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.steer_en_ctrl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.checksum_102_) -
        reinterpret_cast<char*>(&_impl_.steer_en_ctrl_)) + sizeof(_impl_.checksum_102_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Steering_command_102::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.canbus.Steering_command_102.Steer_en_ctrlType steer_en_ctrl = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Steering_command_102_Steer_en_ctrlType_IsValid(val))) {
            _internal_set_steer_en_ctrl(static_cast<::apollo::canbus::Steering_command_102_Steer_en_ctrlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional int32 steer_angle_target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_steer_angle_target(&has_bits);
          _impl_.steer_angle_target_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 steer_angle_spd = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_steer_angle_spd(&has_bits);
          _impl_.steer_angle_spd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 checksum_102 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_checksum_102(&has_bits);
          _impl_.checksum_102_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Steering_command_102::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Steering_command_102)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.canbus.Steering_command_102.Steer_en_ctrlType steer_en_ctrl = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_steer_en_ctrl(), target);
  }

  // optional int32 steer_angle_target = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_steer_angle_target(), target);
  }

  // optional int32 steer_angle_spd = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_steer_angle_spd(), target);
  }

  // optional int32 checksum_102 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_checksum_102(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Steering_command_102)
  return target;
}

size_t Steering_command_102::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Steering_command_102)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .apollo.canbus.Steering_command_102.Steer_en_ctrlType steer_en_ctrl = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_steer_en_ctrl());
    }

    // optional int32 steer_angle_target = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_steer_angle_target());
    }

    // optional int32 steer_angle_spd = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_steer_angle_spd());
    }

    // optional int32 checksum_102 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checksum_102());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Steering_command_102::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Steering_command_102::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Steering_command_102::GetClassData() const { return &_class_data_; }

void Steering_command_102::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Steering_command_102 *>(to)->MergeFrom(
      static_cast<const Steering_command_102 &>(from));
}


void Steering_command_102::MergeFrom(const Steering_command_102& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Steering_command_102)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.steer_en_ctrl_ = from._impl_.steer_en_ctrl_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.steer_angle_target_ = from._impl_.steer_angle_target_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.steer_angle_spd_ = from._impl_.steer_angle_spd_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.checksum_102_ = from._impl_.checksum_102_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Steering_command_102::CopyFrom(const Steering_command_102& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Steering_command_102)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steering_command_102::IsInitialized() const {
  return true;
}

void Steering_command_102::InternalSwap(Steering_command_102* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Steering_command_102, _impl_.checksum_102_)
      + sizeof(Steering_command_102::_impl_.checksum_102_)
      - PROTOBUF_FIELD_OFFSET(Steering_command_102, _impl_.steer_en_ctrl_)>(
          reinterpret_cast<char*>(&_impl_.steer_en_ctrl_),
          reinterpret_cast<char*>(&other->_impl_.steer_en_ctrl_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Steering_command_102::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[2]);
}

// ===================================================================

class Gear_command_103::_Internal {
 public:
  using HasBits = decltype(std::declval<Gear_command_103>()._impl_._has_bits_);
  static void set_has_gear_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gear_en_ctrl(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_checksum_103(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Gear_command_103::Gear_command_103(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Gear_command_103)
}
Gear_command_103::Gear_command_103(const Gear_command_103& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.gear_target_){}
    , decltype(_impl_.gear_en_ctrl_){}
    , decltype(_impl_.checksum_103_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.gear_target_, &from._impl_.gear_target_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.checksum_103_) -
    reinterpret_cast<char*>(&_impl_.gear_target_)) + sizeof(_impl_.checksum_103_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Gear_command_103)
}

inline void Gear_command_103::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.gear_target_){0}
    , decltype(_impl_.gear_en_ctrl_){0}
    , decltype(_impl_.checksum_103_){0}
  };
}

Gear_command_103::~Gear_command_103() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Gear_command_103)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Gear_command_103::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Gear_command_103::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Gear_command_103::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Gear_command_103)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.gear_target_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.checksum_103_) -
        reinterpret_cast<char*>(&_impl_.gear_target_)) + sizeof(_impl_.checksum_103_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Gear_command_103::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.canbus.Gear_command_103.Gear_targetType gear_target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Gear_command_103_Gear_targetType_IsValid(val))) {
            _internal_set_gear_target(static_cast<::apollo::canbus::Gear_command_103_Gear_targetType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Gear_command_103.Gear_en_ctrlType gear_en_ctrl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Gear_command_103_Gear_en_ctrlType_IsValid(val))) {
            _internal_set_gear_en_ctrl(static_cast<::apollo::canbus::Gear_command_103_Gear_en_ctrlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional int32 checksum_103 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_checksum_103(&has_bits);
          _impl_.checksum_103_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Gear_command_103::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Gear_command_103)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.canbus.Gear_command_103.Gear_targetType gear_target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_gear_target(), target);
  }

  // optional .apollo.canbus.Gear_command_103.Gear_en_ctrlType gear_en_ctrl = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_gear_en_ctrl(), target);
  }

  // optional int32 checksum_103 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_checksum_103(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Gear_command_103)
  return target;
}

size_t Gear_command_103::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Gear_command_103)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .apollo.canbus.Gear_command_103.Gear_targetType gear_target = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_gear_target());
    }

    // optional .apollo.canbus.Gear_command_103.Gear_en_ctrlType gear_en_ctrl = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_gear_en_ctrl());
    }

    // optional int32 checksum_103 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checksum_103());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Gear_command_103::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Gear_command_103::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Gear_command_103::GetClassData() const { return &_class_data_; }

void Gear_command_103::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Gear_command_103 *>(to)->MergeFrom(
      static_cast<const Gear_command_103 &>(from));
}


void Gear_command_103::MergeFrom(const Gear_command_103& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Gear_command_103)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.gear_target_ = from._impl_.gear_target_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.gear_en_ctrl_ = from._impl_.gear_en_ctrl_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.checksum_103_ = from._impl_.checksum_103_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Gear_command_103::CopyFrom(const Gear_command_103& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Gear_command_103)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_command_103::IsInitialized() const {
  return true;
}

void Gear_command_103::InternalSwap(Gear_command_103* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Gear_command_103, _impl_.checksum_103_)
      + sizeof(Gear_command_103::_impl_.checksum_103_)
      - PROTOBUF_FIELD_OFFSET(Gear_command_103, _impl_.gear_target_)>(
          reinterpret_cast<char*>(&_impl_.gear_target_),
          reinterpret_cast<char*>(&other->_impl_.gear_target_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Gear_command_103::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[3]);
}

// ===================================================================

class Park_command_104::_Internal {
 public:
  using HasBits = decltype(std::declval<Park_command_104>()._impl_._has_bits_);
  static void set_has_checksum_104(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_park_target(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_park_en_ctrl(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Park_command_104::Park_command_104(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Park_command_104)
}
Park_command_104::Park_command_104(const Park_command_104& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.checksum_104_){}
    , decltype(_impl_.park_target_){}
    , decltype(_impl_.park_en_ctrl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.checksum_104_, &from._impl_.checksum_104_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.park_en_ctrl_) -
    reinterpret_cast<char*>(&_impl_.checksum_104_)) + sizeof(_impl_.park_en_ctrl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Park_command_104)
}

inline void Park_command_104::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.checksum_104_){0}
    , decltype(_impl_.park_target_){0}
    , decltype(_impl_.park_en_ctrl_){0}
  };
}

Park_command_104::~Park_command_104() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Park_command_104)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Park_command_104::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Park_command_104::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Park_command_104::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Park_command_104)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.checksum_104_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.park_en_ctrl_) -
        reinterpret_cast<char*>(&_impl_.checksum_104_)) + sizeof(_impl_.park_en_ctrl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Park_command_104::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 checksum_104 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_checksum_104(&has_bits);
          _impl_.checksum_104_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Park_command_104.Park_targetType park_target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Park_command_104_Park_targetType_IsValid(val))) {
            _internal_set_park_target(static_cast<::apollo::canbus::Park_command_104_Park_targetType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Park_command_104.Park_en_ctrlType park_en_ctrl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Park_command_104_Park_en_ctrlType_IsValid(val))) {
            _internal_set_park_en_ctrl(static_cast<::apollo::canbus::Park_command_104_Park_en_ctrlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Park_command_104::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Park_command_104)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 checksum_104 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_checksum_104(), target);
  }

  // optional .apollo.canbus.Park_command_104.Park_targetType park_target = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_park_target(), target);
  }

  // optional .apollo.canbus.Park_command_104.Park_en_ctrlType park_en_ctrl = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_park_en_ctrl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Park_command_104)
  return target;
}

size_t Park_command_104::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Park_command_104)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 checksum_104 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checksum_104());
    }

    // optional .apollo.canbus.Park_command_104.Park_targetType park_target = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_park_target());
    }

    // optional .apollo.canbus.Park_command_104.Park_en_ctrlType park_en_ctrl = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_park_en_ctrl());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Park_command_104::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Park_command_104::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Park_command_104::GetClassData() const { return &_class_data_; }

void Park_command_104::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Park_command_104 *>(to)->MergeFrom(
      static_cast<const Park_command_104 &>(from));
}


void Park_command_104::MergeFrom(const Park_command_104& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Park_command_104)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.checksum_104_ = from._impl_.checksum_104_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.park_target_ = from._impl_.park_target_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.park_en_ctrl_ = from._impl_.park_en_ctrl_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Park_command_104::CopyFrom(const Park_command_104& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Park_command_104)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Park_command_104::IsInitialized() const {
  return true;
}

void Park_command_104::InternalSwap(Park_command_104* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Park_command_104, _impl_.park_en_ctrl_)
      + sizeof(Park_command_104::_impl_.park_en_ctrl_)
      - PROTOBUF_FIELD_OFFSET(Park_command_104, _impl_.checksum_104_)>(
          reinterpret_cast<char*>(&_impl_.checksum_104_),
          reinterpret_cast<char*>(&other->_impl_.checksum_104_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Park_command_104::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[4]);
}

// ===================================================================

class Throttle_report_500::_Internal {
 public:
  using HasBits = decltype(std::declval<Throttle_report_500>()._impl_._has_bits_);
  static void set_has_throttle_pedal_actual(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_throttle_flt2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_throttle_flt1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_throttle_en_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Throttle_report_500::Throttle_report_500(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Throttle_report_500)
}
Throttle_report_500::Throttle_report_500(const Throttle_report_500& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.throttle_pedal_actual_){}
    , decltype(_impl_.throttle_flt2_){}
    , decltype(_impl_.throttle_flt1_){}
    , decltype(_impl_.throttle_en_state_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.throttle_pedal_actual_, &from._impl_.throttle_pedal_actual_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.throttle_en_state_) -
    reinterpret_cast<char*>(&_impl_.throttle_pedal_actual_)) + sizeof(_impl_.throttle_en_state_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Throttle_report_500)
}

inline void Throttle_report_500::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.throttle_pedal_actual_){0}
    , decltype(_impl_.throttle_flt2_){0}
    , decltype(_impl_.throttle_flt1_){0}
    , decltype(_impl_.throttle_en_state_){0}
  };
}

Throttle_report_500::~Throttle_report_500() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Throttle_report_500)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Throttle_report_500::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Throttle_report_500::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Throttle_report_500::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Throttle_report_500)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.throttle_pedal_actual_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.throttle_en_state_) -
        reinterpret_cast<char*>(&_impl_.throttle_pedal_actual_)) + sizeof(_impl_.throttle_en_state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Throttle_report_500::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double throttle_pedal_actual = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_throttle_pedal_actual(&has_bits);
          _impl_.throttle_pedal_actual_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Throttle_report_500.Throttle_flt2Type throttle_flt2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Throttle_report_500_Throttle_flt2Type_IsValid(val))) {
            _internal_set_throttle_flt2(static_cast<::apollo::canbus::Throttle_report_500_Throttle_flt2Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Throttle_report_500.Throttle_flt1Type throttle_flt1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Throttle_report_500_Throttle_flt1Type_IsValid(val))) {
            _internal_set_throttle_flt1(static_cast<::apollo::canbus::Throttle_report_500_Throttle_flt1Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Throttle_report_500.Throttle_en_stateType throttle_en_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Throttle_report_500_Throttle_en_stateType_IsValid(val))) {
            _internal_set_throttle_en_state(static_cast<::apollo::canbus::Throttle_report_500_Throttle_en_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Throttle_report_500::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Throttle_report_500)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double throttle_pedal_actual = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_throttle_pedal_actual(), target);
  }

  // optional .apollo.canbus.Throttle_report_500.Throttle_flt2Type throttle_flt2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_throttle_flt2(), target);
  }

  // optional .apollo.canbus.Throttle_report_500.Throttle_flt1Type throttle_flt1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_throttle_flt1(), target);
  }

  // optional .apollo.canbus.Throttle_report_500.Throttle_en_stateType throttle_en_state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_throttle_en_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Throttle_report_500)
  return target;
}

size_t Throttle_report_500::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Throttle_report_500)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double throttle_pedal_actual = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Throttle_report_500.Throttle_flt2Type throttle_flt2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_throttle_flt2());
    }

    // optional .apollo.canbus.Throttle_report_500.Throttle_flt1Type throttle_flt1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_throttle_flt1());
    }

    // optional .apollo.canbus.Throttle_report_500.Throttle_en_stateType throttle_en_state = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_throttle_en_state());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Throttle_report_500::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Throttle_report_500::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Throttle_report_500::GetClassData() const { return &_class_data_; }

void Throttle_report_500::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Throttle_report_500 *>(to)->MergeFrom(
      static_cast<const Throttle_report_500 &>(from));
}


void Throttle_report_500::MergeFrom(const Throttle_report_500& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Throttle_report_500)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.throttle_pedal_actual_ = from._impl_.throttle_pedal_actual_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.throttle_flt2_ = from._impl_.throttle_flt2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.throttle_flt1_ = from._impl_.throttle_flt1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.throttle_en_state_ = from._impl_.throttle_en_state_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Throttle_report_500::CopyFrom(const Throttle_report_500& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Throttle_report_500)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Throttle_report_500::IsInitialized() const {
  return true;
}

void Throttle_report_500::InternalSwap(Throttle_report_500* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Throttle_report_500, _impl_.throttle_en_state_)
      + sizeof(Throttle_report_500::_impl_.throttle_en_state_)
      - PROTOBUF_FIELD_OFFSET(Throttle_report_500, _impl_.throttle_pedal_actual_)>(
          reinterpret_cast<char*>(&_impl_.throttle_pedal_actual_),
          reinterpret_cast<char*>(&other->_impl_.throttle_pedal_actual_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Throttle_report_500::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[5]);
}

// ===================================================================

class Brake_report_501::_Internal {
 public:
  using HasBits = decltype(std::declval<Brake_report_501>()._impl_._has_bits_);
  static void set_has_brake_pedal_actual(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_brake_flt2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_brake_flt1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_brake_en_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Brake_report_501::Brake_report_501(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Brake_report_501)
}
Brake_report_501::Brake_report_501(const Brake_report_501& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.brake_pedal_actual_){}
    , decltype(_impl_.brake_flt2_){}
    , decltype(_impl_.brake_flt1_){}
    , decltype(_impl_.brake_en_state_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.brake_pedal_actual_, &from._impl_.brake_pedal_actual_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.brake_en_state_) -
    reinterpret_cast<char*>(&_impl_.brake_pedal_actual_)) + sizeof(_impl_.brake_en_state_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Brake_report_501)
}

inline void Brake_report_501::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.brake_pedal_actual_){0}
    , decltype(_impl_.brake_flt2_){0}
    , decltype(_impl_.brake_flt1_){0}
    , decltype(_impl_.brake_en_state_){0}
  };
}

Brake_report_501::~Brake_report_501() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Brake_report_501)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Brake_report_501::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Brake_report_501::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Brake_report_501::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Brake_report_501)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.brake_pedal_actual_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.brake_en_state_) -
        reinterpret_cast<char*>(&_impl_.brake_pedal_actual_)) + sizeof(_impl_.brake_en_state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Brake_report_501::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double brake_pedal_actual = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_brake_pedal_actual(&has_bits);
          _impl_.brake_pedal_actual_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_report_501.Brake_flt2Type brake_flt2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brake_report_501_Brake_flt2Type_IsValid(val))) {
            _internal_set_brake_flt2(static_cast<::apollo::canbus::Brake_report_501_Brake_flt2Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_report_501.Brake_flt1Type brake_flt1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brake_report_501_Brake_flt1Type_IsValid(val))) {
            _internal_set_brake_flt1(static_cast<::apollo::canbus::Brake_report_501_Brake_flt1Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_report_501.Brake_en_stateType brake_en_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brake_report_501_Brake_en_stateType_IsValid(val))) {
            _internal_set_brake_en_state(static_cast<::apollo::canbus::Brake_report_501_Brake_en_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Brake_report_501::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Brake_report_501)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double brake_pedal_actual = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_brake_pedal_actual(), target);
  }

  // optional .apollo.canbus.Brake_report_501.Brake_flt2Type brake_flt2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_brake_flt2(), target);
  }

  // optional .apollo.canbus.Brake_report_501.Brake_flt1Type brake_flt1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_brake_flt1(), target);
  }

  // optional .apollo.canbus.Brake_report_501.Brake_en_stateType brake_en_state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_brake_en_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Brake_report_501)
  return target;
}

size_t Brake_report_501::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Brake_report_501)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double brake_pedal_actual = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Brake_report_501.Brake_flt2Type brake_flt2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_brake_flt2());
    }

    // optional .apollo.canbus.Brake_report_501.Brake_flt1Type brake_flt1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_brake_flt1());
    }

    // optional .apollo.canbus.Brake_report_501.Brake_en_stateType brake_en_state = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_brake_en_state());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Brake_report_501::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Brake_report_501::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Brake_report_501::GetClassData() const { return &_class_data_; }

void Brake_report_501::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Brake_report_501 *>(to)->MergeFrom(
      static_cast<const Brake_report_501 &>(from));
}


void Brake_report_501::MergeFrom(const Brake_report_501& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Brake_report_501)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.brake_pedal_actual_ = from._impl_.brake_pedal_actual_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.brake_flt2_ = from._impl_.brake_flt2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.brake_flt1_ = from._impl_.brake_flt1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.brake_en_state_ = from._impl_.brake_en_state_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Brake_report_501::CopyFrom(const Brake_report_501& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Brake_report_501)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brake_report_501::IsInitialized() const {
  return true;
}

void Brake_report_501::InternalSwap(Brake_report_501* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Brake_report_501, _impl_.brake_en_state_)
      + sizeof(Brake_report_501::_impl_.brake_en_state_)
      - PROTOBUF_FIELD_OFFSET(Brake_report_501, _impl_.brake_pedal_actual_)>(
          reinterpret_cast<char*>(&_impl_.brake_pedal_actual_),
          reinterpret_cast<char*>(&other->_impl_.brake_pedal_actual_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Brake_report_501::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[6]);
}

// ===================================================================

class Steering_report_502::_Internal {
 public:
  using HasBits = decltype(std::declval<Steering_report_502>()._impl_._has_bits_);
  static void set_has_steer_angle_spd_actual(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steer_flt2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_steer_flt1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_steer_en_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_steer_angle_actual(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Steering_report_502::Steering_report_502(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Steering_report_502)
}
Steering_report_502::Steering_report_502(const Steering_report_502& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.steer_angle_spd_actual_){}
    , decltype(_impl_.steer_flt2_){}
    , decltype(_impl_.steer_flt1_){}
    , decltype(_impl_.steer_en_state_){}
    , decltype(_impl_.steer_angle_actual_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.steer_angle_spd_actual_, &from._impl_.steer_angle_spd_actual_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.steer_angle_actual_) -
    reinterpret_cast<char*>(&_impl_.steer_angle_spd_actual_)) + sizeof(_impl_.steer_angle_actual_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Steering_report_502)
}

inline void Steering_report_502::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.steer_angle_spd_actual_){0}
    , decltype(_impl_.steer_flt2_){0}
    , decltype(_impl_.steer_flt1_){0}
    , decltype(_impl_.steer_en_state_){0}
    , decltype(_impl_.steer_angle_actual_){0}
  };
}

Steering_report_502::~Steering_report_502() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Steering_report_502)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Steering_report_502::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Steering_report_502::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Steering_report_502::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Steering_report_502)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.steer_angle_spd_actual_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.steer_angle_actual_) -
        reinterpret_cast<char*>(&_impl_.steer_angle_spd_actual_)) + sizeof(_impl_.steer_angle_actual_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Steering_report_502::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 steer_angle_spd_actual = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_steer_angle_spd_actual(&has_bits);
          _impl_.steer_angle_spd_actual_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Steering_report_502.Steer_flt2Type steer_flt2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Steering_report_502_Steer_flt2Type_IsValid(val))) {
            _internal_set_steer_flt2(static_cast<::apollo::canbus::Steering_report_502_Steer_flt2Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Steering_report_502.Steer_flt1Type steer_flt1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Steering_report_502_Steer_flt1Type_IsValid(val))) {
            _internal_set_steer_flt1(static_cast<::apollo::canbus::Steering_report_502_Steer_flt1Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Steering_report_502.Steer_en_stateType steer_en_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Steering_report_502_Steer_en_stateType_IsValid(val))) {
            _internal_set_steer_en_state(static_cast<::apollo::canbus::Steering_report_502_Steer_en_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional int32 steer_angle_actual = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_steer_angle_actual(&has_bits);
          _impl_.steer_angle_actual_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Steering_report_502::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Steering_report_502)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 steer_angle_spd_actual = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_steer_angle_spd_actual(), target);
  }

  // optional .apollo.canbus.Steering_report_502.Steer_flt2Type steer_flt2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_steer_flt2(), target);
  }

  // optional .apollo.canbus.Steering_report_502.Steer_flt1Type steer_flt1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_steer_flt1(), target);
  }

  // optional .apollo.canbus.Steering_report_502.Steer_en_stateType steer_en_state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_steer_en_state(), target);
  }

  // optional int32 steer_angle_actual = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_steer_angle_actual(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Steering_report_502)
  return target;
}

size_t Steering_report_502::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Steering_report_502)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 steer_angle_spd_actual = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_steer_angle_spd_actual());
    }

    // optional .apollo.canbus.Steering_report_502.Steer_flt2Type steer_flt2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_steer_flt2());
    }

    // optional .apollo.canbus.Steering_report_502.Steer_flt1Type steer_flt1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_steer_flt1());
    }

    // optional .apollo.canbus.Steering_report_502.Steer_en_stateType steer_en_state = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_steer_en_state());
    }

    // optional int32 steer_angle_actual = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_steer_angle_actual());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Steering_report_502::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Steering_report_502::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Steering_report_502::GetClassData() const { return &_class_data_; }

void Steering_report_502::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Steering_report_502 *>(to)->MergeFrom(
      static_cast<const Steering_report_502 &>(from));
}


void Steering_report_502::MergeFrom(const Steering_report_502& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Steering_report_502)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.steer_angle_spd_actual_ = from._impl_.steer_angle_spd_actual_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.steer_flt2_ = from._impl_.steer_flt2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.steer_flt1_ = from._impl_.steer_flt1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.steer_en_state_ = from._impl_.steer_en_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.steer_angle_actual_ = from._impl_.steer_angle_actual_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Steering_report_502::CopyFrom(const Steering_report_502& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Steering_report_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steering_report_502::IsInitialized() const {
  return true;
}

void Steering_report_502::InternalSwap(Steering_report_502* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Steering_report_502, _impl_.steer_angle_actual_)
      + sizeof(Steering_report_502::_impl_.steer_angle_actual_)
      - PROTOBUF_FIELD_OFFSET(Steering_report_502, _impl_.steer_angle_spd_actual_)>(
          reinterpret_cast<char*>(&_impl_.steer_angle_spd_actual_),
          reinterpret_cast<char*>(&other->_impl_.steer_angle_spd_actual_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Steering_report_502::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[7]);
}

// ===================================================================

class Gear_report_503::_Internal {
 public:
  using HasBits = decltype(std::declval<Gear_report_503>()._impl_._has_bits_);
  static void set_has_gear_flt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gear_actual(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Gear_report_503::Gear_report_503(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Gear_report_503)
}
Gear_report_503::Gear_report_503(const Gear_report_503& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.gear_flt_){}
    , decltype(_impl_.gear_actual_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.gear_flt_, &from._impl_.gear_flt_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.gear_actual_) -
    reinterpret_cast<char*>(&_impl_.gear_flt_)) + sizeof(_impl_.gear_actual_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Gear_report_503)
}

inline void Gear_report_503::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.gear_flt_){0}
    , decltype(_impl_.gear_actual_){0}
  };
}

Gear_report_503::~Gear_report_503() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Gear_report_503)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Gear_report_503::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Gear_report_503::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Gear_report_503::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Gear_report_503)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.gear_flt_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.gear_actual_) -
        reinterpret_cast<char*>(&_impl_.gear_flt_)) + sizeof(_impl_.gear_actual_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Gear_report_503::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.canbus.Gear_report_503.Gear_fltType gear_flt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Gear_report_503_Gear_fltType_IsValid(val))) {
            _internal_set_gear_flt(static_cast<::apollo::canbus::Gear_report_503_Gear_fltType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Gear_report_503.Gear_actualType gear_actual = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Gear_report_503_Gear_actualType_IsValid(val))) {
            _internal_set_gear_actual(static_cast<::apollo::canbus::Gear_report_503_Gear_actualType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Gear_report_503::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Gear_report_503)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.canbus.Gear_report_503.Gear_fltType gear_flt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_gear_flt(), target);
  }

  // optional .apollo.canbus.Gear_report_503.Gear_actualType gear_actual = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_gear_actual(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Gear_report_503)
  return target;
}

size_t Gear_report_503::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Gear_report_503)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.canbus.Gear_report_503.Gear_fltType gear_flt = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_gear_flt());
    }

    // optional .apollo.canbus.Gear_report_503.Gear_actualType gear_actual = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_gear_actual());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Gear_report_503::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Gear_report_503::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Gear_report_503::GetClassData() const { return &_class_data_; }

void Gear_report_503::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Gear_report_503 *>(to)->MergeFrom(
      static_cast<const Gear_report_503 &>(from));
}


void Gear_report_503::MergeFrom(const Gear_report_503& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Gear_report_503)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.gear_flt_ = from._impl_.gear_flt_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.gear_actual_ = from._impl_.gear_actual_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Gear_report_503::CopyFrom(const Gear_report_503& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Gear_report_503)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_report_503::IsInitialized() const {
  return true;
}

void Gear_report_503::InternalSwap(Gear_report_503* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Gear_report_503, _impl_.gear_actual_)
      + sizeof(Gear_report_503::_impl_.gear_actual_)
      - PROTOBUF_FIELD_OFFSET(Gear_report_503, _impl_.gear_flt_)>(
          reinterpret_cast<char*>(&_impl_.gear_flt_),
          reinterpret_cast<char*>(&other->_impl_.gear_flt_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Gear_report_503::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[8]);
}

// ===================================================================

class Park_report_504::_Internal {
 public:
  using HasBits = decltype(std::declval<Park_report_504>()._impl_._has_bits_);
  static void set_has_parking_actual(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_park_flt(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Park_report_504::Park_report_504(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Park_report_504)
}
Park_report_504::Park_report_504(const Park_report_504& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parking_actual_){}
    , decltype(_impl_.park_flt_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.parking_actual_, &from._impl_.parking_actual_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.park_flt_) -
    reinterpret_cast<char*>(&_impl_.parking_actual_)) + sizeof(_impl_.park_flt_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Park_report_504)
}

inline void Park_report_504::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parking_actual_){0}
    , decltype(_impl_.park_flt_){0}
  };
}

Park_report_504::~Park_report_504() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Park_report_504)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Park_report_504::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Park_report_504::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Park_report_504::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Park_report_504)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.parking_actual_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.park_flt_) -
        reinterpret_cast<char*>(&_impl_.parking_actual_)) + sizeof(_impl_.park_flt_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Park_report_504::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.canbus.Park_report_504.Parking_actualType parking_actual = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Park_report_504_Parking_actualType_IsValid(val))) {
            _internal_set_parking_actual(static_cast<::apollo::canbus::Park_report_504_Parking_actualType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Park_report_504.Park_fltType park_flt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Park_report_504_Park_fltType_IsValid(val))) {
            _internal_set_park_flt(static_cast<::apollo::canbus::Park_report_504_Park_fltType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Park_report_504::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Park_report_504)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.canbus.Park_report_504.Parking_actualType parking_actual = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_parking_actual(), target);
  }

  // optional .apollo.canbus.Park_report_504.Park_fltType park_flt = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_park_flt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Park_report_504)
  return target;
}

size_t Park_report_504::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Park_report_504)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.canbus.Park_report_504.Parking_actualType parking_actual = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_parking_actual());
    }

    // optional .apollo.canbus.Park_report_504.Park_fltType park_flt = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_park_flt());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Park_report_504::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Park_report_504::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Park_report_504::GetClassData() const { return &_class_data_; }

void Park_report_504::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Park_report_504 *>(to)->MergeFrom(
      static_cast<const Park_report_504 &>(from));
}


void Park_report_504::MergeFrom(const Park_report_504& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Park_report_504)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.parking_actual_ = from._impl_.parking_actual_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.park_flt_ = from._impl_.park_flt_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Park_report_504::CopyFrom(const Park_report_504& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Park_report_504)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Park_report_504::IsInitialized() const {
  return true;
}

void Park_report_504::InternalSwap(Park_report_504* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Park_report_504, _impl_.park_flt_)
      + sizeof(Park_report_504::_impl_.park_flt_)
      - PROTOBUF_FIELD_OFFSET(Park_report_504, _impl_.parking_actual_)>(
          reinterpret_cast<char*>(&_impl_.parking_actual_),
          reinterpret_cast<char*>(&other->_impl_.parking_actual_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Park_report_504::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[9]);
}

// ===================================================================

class Vcu_report_505::_Internal {
 public:
  using HasBits = decltype(std::declval<Vcu_report_505>()._impl_._has_bits_);
  static void set_has_vehicle_mode_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_frontcrash_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_backcrash_state(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_aeb_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_acc(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Vcu_report_505::Vcu_report_505(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Vcu_report_505)
}
Vcu_report_505::Vcu_report_505(const Vcu_report_505& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.vehicle_mode_state_){}
    , decltype(_impl_.frontcrash_state_){}
    , decltype(_impl_.backcrash_state_){}
    , decltype(_impl_.aeb_state_){}
    , decltype(_impl_.acc_){}
    , decltype(_impl_.speed_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.vehicle_mode_state_, &from._impl_.vehicle_mode_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.speed_) -
    reinterpret_cast<char*>(&_impl_.vehicle_mode_state_)) + sizeof(_impl_.speed_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcu_report_505)
}

inline void Vcu_report_505::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.vehicle_mode_state_){0}
    , decltype(_impl_.frontcrash_state_){0}
    , decltype(_impl_.backcrash_state_){0}
    , decltype(_impl_.aeb_state_){0}
    , decltype(_impl_.acc_){0}
    , decltype(_impl_.speed_){0}
  };
}

Vcu_report_505::~Vcu_report_505() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcu_report_505)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Vcu_report_505::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Vcu_report_505::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Vcu_report_505::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcu_report_505)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.vehicle_mode_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.speed_) -
        reinterpret_cast<char*>(&_impl_.vehicle_mode_state_)) + sizeof(_impl_.speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vcu_report_505::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.canbus.Vcu_report_505.Vehicle_mode_stateType vehicle_mode_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcu_report_505_Vehicle_mode_stateType_IsValid(val))) {
            _internal_set_vehicle_mode_state(static_cast<::apollo::canbus::Vcu_report_505_Vehicle_mode_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcu_report_505.Frontcrash_stateType frontcrash_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcu_report_505_Frontcrash_stateType_IsValid(val))) {
            _internal_set_frontcrash_state(static_cast<::apollo::canbus::Vcu_report_505_Frontcrash_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcu_report_505.Backcrash_stateType backcrash_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcu_report_505_Backcrash_stateType_IsValid(val))) {
            _internal_set_backcrash_state(static_cast<::apollo::canbus::Vcu_report_505_Backcrash_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcu_report_505.Aeb_stateType aeb_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcu_report_505_Aeb_stateType_IsValid(val))) {
            _internal_set_aeb_state(static_cast<::apollo::canbus::Vcu_report_505_Aeb_stateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional double acc = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _Internal::set_has_acc(&has_bits);
          _impl_.acc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 49)) {
          _Internal::set_has_speed(&has_bits);
          _impl_.speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Vcu_report_505::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcu_report_505)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.canbus.Vcu_report_505.Vehicle_mode_stateType vehicle_mode_state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_vehicle_mode_state(), target);
  }

  // optional .apollo.canbus.Vcu_report_505.Frontcrash_stateType frontcrash_state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_frontcrash_state(), target);
  }

  // optional .apollo.canbus.Vcu_report_505.Backcrash_stateType backcrash_state = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_backcrash_state(), target);
  }

  // optional .apollo.canbus.Vcu_report_505.Aeb_stateType aeb_state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_aeb_state(), target);
  }

  // optional double acc = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_acc(), target);
  }

  // optional double speed = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(6, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcu_report_505)
  return target;
}

size_t Vcu_report_505::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcu_report_505)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .apollo.canbus.Vcu_report_505.Vehicle_mode_stateType vehicle_mode_state = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_vehicle_mode_state());
    }

    // optional .apollo.canbus.Vcu_report_505.Frontcrash_stateType frontcrash_state = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_frontcrash_state());
    }

    // optional .apollo.canbus.Vcu_report_505.Backcrash_stateType backcrash_state = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_backcrash_state());
    }

    // optional .apollo.canbus.Vcu_report_505.Aeb_stateType aeb_state = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_aeb_state());
    }

    // optional double acc = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional double speed = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Vcu_report_505::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Vcu_report_505::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Vcu_report_505::GetClassData() const { return &_class_data_; }

void Vcu_report_505::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Vcu_report_505 *>(to)->MergeFrom(
      static_cast<const Vcu_report_505 &>(from));
}


void Vcu_report_505::MergeFrom(const Vcu_report_505& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcu_report_505)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.vehicle_mode_state_ = from._impl_.vehicle_mode_state_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.frontcrash_state_ = from._impl_.frontcrash_state_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.backcrash_state_ = from._impl_.backcrash_state_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.aeb_state_ = from._impl_.aeb_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.acc_ = from._impl_.acc_;
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.speed_ = from._impl_.speed_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Vcu_report_505::CopyFrom(const Vcu_report_505& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcu_report_505)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcu_report_505::IsInitialized() const {
  return true;
}

void Vcu_report_505::InternalSwap(Vcu_report_505* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vcu_report_505, _impl_.speed_)
      + sizeof(Vcu_report_505::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(Vcu_report_505, _impl_.vehicle_mode_state_)>(
          reinterpret_cast<char*>(&_impl_.vehicle_mode_state_),
          reinterpret_cast<char*>(&other->_impl_.vehicle_mode_state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vcu_report_505::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[10]);
}

// ===================================================================

class Wheelspeed_report_506::_Internal {
 public:
  using HasBits = decltype(std::declval<Wheelspeed_report_506>()._impl_._has_bits_);
  static void set_has_rr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rl(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fr(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_fl(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Wheelspeed_report_506::Wheelspeed_report_506(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Wheelspeed_report_506)
}
Wheelspeed_report_506::Wheelspeed_report_506(const Wheelspeed_report_506& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rr_){}
    , decltype(_impl_.rl_){}
    , decltype(_impl_.fr_){}
    , decltype(_impl_.fl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.rr_, &from._impl_.rr_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.fl_) -
    reinterpret_cast<char*>(&_impl_.rr_)) + sizeof(_impl_.fl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Wheelspeed_report_506)
}

inline void Wheelspeed_report_506::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rr_){0}
    , decltype(_impl_.rl_){0}
    , decltype(_impl_.fr_){0}
    , decltype(_impl_.fl_){0}
  };
}

Wheelspeed_report_506::~Wheelspeed_report_506() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Wheelspeed_report_506)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Wheelspeed_report_506::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Wheelspeed_report_506::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Wheelspeed_report_506::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Wheelspeed_report_506)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.rr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.fl_) -
        reinterpret_cast<char*>(&_impl_.rr_)) + sizeof(_impl_.fl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Wheelspeed_report_506::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double rr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_rr(&has_bits);
          _impl_.rr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double rl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_rl(&has_bits);
          _impl_.rl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double fr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_fr(&has_bits);
          _impl_.fr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double fl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_fl(&has_bits);
          _impl_.fl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Wheelspeed_report_506::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Wheelspeed_report_506)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double rr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_rr(), target);
  }

  // optional double rl = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_rl(), target);
  }

  // optional double fr = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_fr(), target);
  }

  // optional double fl = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_fl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Wheelspeed_report_506)
  return target;
}

size_t Wheelspeed_report_506::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Wheelspeed_report_506)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double rr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double rl = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double fr = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double fl = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Wheelspeed_report_506::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Wheelspeed_report_506::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Wheelspeed_report_506::GetClassData() const { return &_class_data_; }

void Wheelspeed_report_506::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Wheelspeed_report_506 *>(to)->MergeFrom(
      static_cast<const Wheelspeed_report_506 &>(from));
}


void Wheelspeed_report_506::MergeFrom(const Wheelspeed_report_506& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Wheelspeed_report_506)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.rr_ = from._impl_.rr_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.rl_ = from._impl_.rl_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.fr_ = from._impl_.fr_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.fl_ = from._impl_.fl_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Wheelspeed_report_506::CopyFrom(const Wheelspeed_report_506& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Wheelspeed_report_506)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wheelspeed_report_506::IsInitialized() const {
  return true;
}

void Wheelspeed_report_506::InternalSwap(Wheelspeed_report_506* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Wheelspeed_report_506, _impl_.fl_)
      + sizeof(Wheelspeed_report_506::_impl_.fl_)
      - PROTOBUF_FIELD_OFFSET(Wheelspeed_report_506, _impl_.rr_)>(
          reinterpret_cast<char*>(&_impl_.rr_),
          reinterpret_cast<char*>(&other->_impl_.rr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Wheelspeed_report_506::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[11]);
}

// ===================================================================

class Ultr_sensor_1_507::_Internal {
 public:
  using HasBits = decltype(std::declval<Ultr_sensor_1_507>()._impl_._has_bits_);
  static void set_has_uiuss9_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uiuss8_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiuss11_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uiuss10_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Ultr_sensor_1_507::Ultr_sensor_1_507(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Ultr_sensor_1_507)
}
Ultr_sensor_1_507::Ultr_sensor_1_507(const Ultr_sensor_1_507& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss9_tof_direct_){}
    , decltype(_impl_.uiuss8_tof_direct_){}
    , decltype(_impl_.uiuss11_tof_direct_){}
    , decltype(_impl_.uiuss10_tof_direct_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uiuss9_tof_direct_, &from._impl_.uiuss9_tof_direct_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uiuss10_tof_direct_) -
    reinterpret_cast<char*>(&_impl_.uiuss9_tof_direct_)) + sizeof(_impl_.uiuss10_tof_direct_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ultr_sensor_1_507)
}

inline void Ultr_sensor_1_507::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss9_tof_direct_){0}
    , decltype(_impl_.uiuss8_tof_direct_){0}
    , decltype(_impl_.uiuss11_tof_direct_){0}
    , decltype(_impl_.uiuss10_tof_direct_){0}
  };
}

Ultr_sensor_1_507::~Ultr_sensor_1_507() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ultr_sensor_1_507)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ultr_sensor_1_507::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ultr_sensor_1_507::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ultr_sensor_1_507::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ultr_sensor_1_507)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.uiuss9_tof_direct_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uiuss10_tof_direct_) -
        reinterpret_cast<char*>(&_impl_.uiuss9_tof_direct_)) + sizeof(_impl_.uiuss10_tof_direct_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ultr_sensor_1_507::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double uiuss9_tof_direct = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_uiuss9_tof_direct(&has_bits);
          _impl_.uiuss9_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss8_tof_direct = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_uiuss8_tof_direct(&has_bits);
          _impl_.uiuss8_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss11_tof_direct = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_uiuss11_tof_direct(&has_bits);
          _impl_.uiuss11_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss10_tof_direct = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_uiuss10_tof_direct(&has_bits);
          _impl_.uiuss10_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ultr_sensor_1_507::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ultr_sensor_1_507)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double uiuss9_tof_direct = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_uiuss9_tof_direct(), target);
  }

  // optional double uiuss8_tof_direct = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_uiuss8_tof_direct(), target);
  }

  // optional double uiuss11_tof_direct = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_uiuss11_tof_direct(), target);
  }

  // optional double uiuss10_tof_direct = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_uiuss10_tof_direct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ultr_sensor_1_507)
  return target;
}

size_t Ultr_sensor_1_507::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ultr_sensor_1_507)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double uiuss9_tof_direct = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double uiuss8_tof_direct = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double uiuss11_tof_direct = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double uiuss10_tof_direct = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ultr_sensor_1_507::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ultr_sensor_1_507::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ultr_sensor_1_507::GetClassData() const { return &_class_data_; }

void Ultr_sensor_1_507::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Ultr_sensor_1_507 *>(to)->MergeFrom(
      static_cast<const Ultr_sensor_1_507 &>(from));
}


void Ultr_sensor_1_507::MergeFrom(const Ultr_sensor_1_507& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ultr_sensor_1_507)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uiuss9_tof_direct_ = from._impl_.uiuss9_tof_direct_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.uiuss8_tof_direct_ = from._impl_.uiuss8_tof_direct_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.uiuss11_tof_direct_ = from._impl_.uiuss11_tof_direct_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.uiuss10_tof_direct_ = from._impl_.uiuss10_tof_direct_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ultr_sensor_1_507::CopyFrom(const Ultr_sensor_1_507& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ultr_sensor_1_507)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ultr_sensor_1_507::IsInitialized() const {
  return true;
}

void Ultr_sensor_1_507::InternalSwap(Ultr_sensor_1_507* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ultr_sensor_1_507, _impl_.uiuss10_tof_direct_)
      + sizeof(Ultr_sensor_1_507::_impl_.uiuss10_tof_direct_)
      - PROTOBUF_FIELD_OFFSET(Ultr_sensor_1_507, _impl_.uiuss9_tof_direct_)>(
          reinterpret_cast<char*>(&_impl_.uiuss9_tof_direct_),
          reinterpret_cast<char*>(&other->_impl_.uiuss9_tof_direct_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ultr_sensor_1_507::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[12]);
}

// ===================================================================

class Ultr_sensor_2_508::_Internal {
 public:
  using HasBits = decltype(std::declval<Ultr_sensor_2_508>()._impl_._has_bits_);
  static void set_has_uiuss9_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uiuss8_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiuss11_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uiuss10_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Ultr_sensor_2_508::Ultr_sensor_2_508(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Ultr_sensor_2_508)
}
Ultr_sensor_2_508::Ultr_sensor_2_508(const Ultr_sensor_2_508& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss9_tof_indirect_){}
    , decltype(_impl_.uiuss8_tof_indirect_){}
    , decltype(_impl_.uiuss11_tof_indirect_){}
    , decltype(_impl_.uiuss10_tof_indirect_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uiuss9_tof_indirect_, &from._impl_.uiuss9_tof_indirect_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uiuss10_tof_indirect_) -
    reinterpret_cast<char*>(&_impl_.uiuss9_tof_indirect_)) + sizeof(_impl_.uiuss10_tof_indirect_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ultr_sensor_2_508)
}

inline void Ultr_sensor_2_508::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss9_tof_indirect_){0}
    , decltype(_impl_.uiuss8_tof_indirect_){0}
    , decltype(_impl_.uiuss11_tof_indirect_){0}
    , decltype(_impl_.uiuss10_tof_indirect_){0}
  };
}

Ultr_sensor_2_508::~Ultr_sensor_2_508() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ultr_sensor_2_508)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ultr_sensor_2_508::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ultr_sensor_2_508::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ultr_sensor_2_508::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ultr_sensor_2_508)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.uiuss9_tof_indirect_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uiuss10_tof_indirect_) -
        reinterpret_cast<char*>(&_impl_.uiuss9_tof_indirect_)) + sizeof(_impl_.uiuss10_tof_indirect_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ultr_sensor_2_508::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double uiuss9_tof_indirect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_uiuss9_tof_indirect(&has_bits);
          _impl_.uiuss9_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss8_tof_indirect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_uiuss8_tof_indirect(&has_bits);
          _impl_.uiuss8_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss11_tof_indirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_uiuss11_tof_indirect(&has_bits);
          _impl_.uiuss11_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss10_tof_indirect = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_uiuss10_tof_indirect(&has_bits);
          _impl_.uiuss10_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ultr_sensor_2_508::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ultr_sensor_2_508)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double uiuss9_tof_indirect = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_uiuss9_tof_indirect(), target);
  }

  // optional double uiuss8_tof_indirect = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_uiuss8_tof_indirect(), target);
  }

  // optional double uiuss11_tof_indirect = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_uiuss11_tof_indirect(), target);
  }

  // optional double uiuss10_tof_indirect = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_uiuss10_tof_indirect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ultr_sensor_2_508)
  return target;
}

size_t Ultr_sensor_2_508::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ultr_sensor_2_508)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double uiuss9_tof_indirect = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double uiuss8_tof_indirect = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double uiuss11_tof_indirect = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double uiuss10_tof_indirect = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ultr_sensor_2_508::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ultr_sensor_2_508::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ultr_sensor_2_508::GetClassData() const { return &_class_data_; }

void Ultr_sensor_2_508::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Ultr_sensor_2_508 *>(to)->MergeFrom(
      static_cast<const Ultr_sensor_2_508 &>(from));
}


void Ultr_sensor_2_508::MergeFrom(const Ultr_sensor_2_508& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ultr_sensor_2_508)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uiuss9_tof_indirect_ = from._impl_.uiuss9_tof_indirect_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.uiuss8_tof_indirect_ = from._impl_.uiuss8_tof_indirect_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.uiuss11_tof_indirect_ = from._impl_.uiuss11_tof_indirect_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.uiuss10_tof_indirect_ = from._impl_.uiuss10_tof_indirect_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ultr_sensor_2_508::CopyFrom(const Ultr_sensor_2_508& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ultr_sensor_2_508)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ultr_sensor_2_508::IsInitialized() const {
  return true;
}

void Ultr_sensor_2_508::InternalSwap(Ultr_sensor_2_508* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ultr_sensor_2_508, _impl_.uiuss10_tof_indirect_)
      + sizeof(Ultr_sensor_2_508::_impl_.uiuss10_tof_indirect_)
      - PROTOBUF_FIELD_OFFSET(Ultr_sensor_2_508, _impl_.uiuss9_tof_indirect_)>(
          reinterpret_cast<char*>(&_impl_.uiuss9_tof_indirect_),
          reinterpret_cast<char*>(&other->_impl_.uiuss9_tof_indirect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ultr_sensor_2_508::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[13]);
}

// ===================================================================

class Ultr_sensor_3_509::_Internal {
 public:
  using HasBits = decltype(std::declval<Ultr_sensor_3_509>()._impl_._has_bits_);
  static void set_has_uiuss5_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uiuss4_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiuss3_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uiuss2_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Ultr_sensor_3_509::Ultr_sensor_3_509(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Ultr_sensor_3_509)
}
Ultr_sensor_3_509::Ultr_sensor_3_509(const Ultr_sensor_3_509& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss5_tof_direct_){}
    , decltype(_impl_.uiuss4_tof_direct_){}
    , decltype(_impl_.uiuss3_tof_direct_){}
    , decltype(_impl_.uiuss2_tof_direct_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uiuss5_tof_direct_, &from._impl_.uiuss5_tof_direct_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uiuss2_tof_direct_) -
    reinterpret_cast<char*>(&_impl_.uiuss5_tof_direct_)) + sizeof(_impl_.uiuss2_tof_direct_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ultr_sensor_3_509)
}

inline void Ultr_sensor_3_509::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss5_tof_direct_){0}
    , decltype(_impl_.uiuss4_tof_direct_){0}
    , decltype(_impl_.uiuss3_tof_direct_){0}
    , decltype(_impl_.uiuss2_tof_direct_){0}
  };
}

Ultr_sensor_3_509::~Ultr_sensor_3_509() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ultr_sensor_3_509)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ultr_sensor_3_509::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ultr_sensor_3_509::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ultr_sensor_3_509::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ultr_sensor_3_509)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.uiuss5_tof_direct_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uiuss2_tof_direct_) -
        reinterpret_cast<char*>(&_impl_.uiuss5_tof_direct_)) + sizeof(_impl_.uiuss2_tof_direct_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ultr_sensor_3_509::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double uiuss5_tof_direct = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_uiuss5_tof_direct(&has_bits);
          _impl_.uiuss5_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss4_tof_direct = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_uiuss4_tof_direct(&has_bits);
          _impl_.uiuss4_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss3_tof_direct = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_uiuss3_tof_direct(&has_bits);
          _impl_.uiuss3_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss2_tof_direct = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_uiuss2_tof_direct(&has_bits);
          _impl_.uiuss2_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ultr_sensor_3_509::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ultr_sensor_3_509)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double uiuss5_tof_direct = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_uiuss5_tof_direct(), target);
  }

  // optional double uiuss4_tof_direct = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_uiuss4_tof_direct(), target);
  }

  // optional double uiuss3_tof_direct = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_uiuss3_tof_direct(), target);
  }

  // optional double uiuss2_tof_direct = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_uiuss2_tof_direct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ultr_sensor_3_509)
  return target;
}

size_t Ultr_sensor_3_509::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ultr_sensor_3_509)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double uiuss5_tof_direct = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double uiuss4_tof_direct = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double uiuss3_tof_direct = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double uiuss2_tof_direct = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ultr_sensor_3_509::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ultr_sensor_3_509::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ultr_sensor_3_509::GetClassData() const { return &_class_data_; }

void Ultr_sensor_3_509::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Ultr_sensor_3_509 *>(to)->MergeFrom(
      static_cast<const Ultr_sensor_3_509 &>(from));
}


void Ultr_sensor_3_509::MergeFrom(const Ultr_sensor_3_509& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ultr_sensor_3_509)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uiuss5_tof_direct_ = from._impl_.uiuss5_tof_direct_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.uiuss4_tof_direct_ = from._impl_.uiuss4_tof_direct_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.uiuss3_tof_direct_ = from._impl_.uiuss3_tof_direct_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.uiuss2_tof_direct_ = from._impl_.uiuss2_tof_direct_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ultr_sensor_3_509::CopyFrom(const Ultr_sensor_3_509& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ultr_sensor_3_509)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ultr_sensor_3_509::IsInitialized() const {
  return true;
}

void Ultr_sensor_3_509::InternalSwap(Ultr_sensor_3_509* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ultr_sensor_3_509, _impl_.uiuss2_tof_direct_)
      + sizeof(Ultr_sensor_3_509::_impl_.uiuss2_tof_direct_)
      - PROTOBUF_FIELD_OFFSET(Ultr_sensor_3_509, _impl_.uiuss5_tof_direct_)>(
          reinterpret_cast<char*>(&_impl_.uiuss5_tof_direct_),
          reinterpret_cast<char*>(&other->_impl_.uiuss5_tof_direct_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ultr_sensor_3_509::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[14]);
}

// ===================================================================

class Ultr_sensor_4_510::_Internal {
 public:
  using HasBits = decltype(std::declval<Ultr_sensor_4_510>()._impl_._has_bits_);
  static void set_has_uiuss5_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uiuss4_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiuss3_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uiuss2_tof_indirect(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Ultr_sensor_4_510::Ultr_sensor_4_510(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Ultr_sensor_4_510)
}
Ultr_sensor_4_510::Ultr_sensor_4_510(const Ultr_sensor_4_510& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss5_tof_indirect_){}
    , decltype(_impl_.uiuss4_tof_indirect_){}
    , decltype(_impl_.uiuss3_tof_indirect_){}
    , decltype(_impl_.uiuss2_tof_indirect_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uiuss5_tof_indirect_, &from._impl_.uiuss5_tof_indirect_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uiuss2_tof_indirect_) -
    reinterpret_cast<char*>(&_impl_.uiuss5_tof_indirect_)) + sizeof(_impl_.uiuss2_tof_indirect_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ultr_sensor_4_510)
}

inline void Ultr_sensor_4_510::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss5_tof_indirect_){0}
    , decltype(_impl_.uiuss4_tof_indirect_){0}
    , decltype(_impl_.uiuss3_tof_indirect_){0}
    , decltype(_impl_.uiuss2_tof_indirect_){0}
  };
}

Ultr_sensor_4_510::~Ultr_sensor_4_510() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ultr_sensor_4_510)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ultr_sensor_4_510::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ultr_sensor_4_510::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ultr_sensor_4_510::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ultr_sensor_4_510)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.uiuss5_tof_indirect_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uiuss2_tof_indirect_) -
        reinterpret_cast<char*>(&_impl_.uiuss5_tof_indirect_)) + sizeof(_impl_.uiuss2_tof_indirect_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ultr_sensor_4_510::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double uiuss5_tof_indirect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_uiuss5_tof_indirect(&has_bits);
          _impl_.uiuss5_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss4_tof_indirect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_uiuss4_tof_indirect(&has_bits);
          _impl_.uiuss4_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss3_tof_indirect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_uiuss3_tof_indirect(&has_bits);
          _impl_.uiuss3_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss2_tof_indirect = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_uiuss2_tof_indirect(&has_bits);
          _impl_.uiuss2_tof_indirect_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ultr_sensor_4_510::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ultr_sensor_4_510)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double uiuss5_tof_indirect = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_uiuss5_tof_indirect(), target);
  }

  // optional double uiuss4_tof_indirect = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_uiuss4_tof_indirect(), target);
  }

  // optional double uiuss3_tof_indirect = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_uiuss3_tof_indirect(), target);
  }

  // optional double uiuss2_tof_indirect = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_uiuss2_tof_indirect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ultr_sensor_4_510)
  return target;
}

size_t Ultr_sensor_4_510::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ultr_sensor_4_510)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double uiuss5_tof_indirect = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double uiuss4_tof_indirect = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double uiuss3_tof_indirect = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double uiuss2_tof_indirect = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ultr_sensor_4_510::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ultr_sensor_4_510::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ultr_sensor_4_510::GetClassData() const { return &_class_data_; }

void Ultr_sensor_4_510::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Ultr_sensor_4_510 *>(to)->MergeFrom(
      static_cast<const Ultr_sensor_4_510 &>(from));
}


void Ultr_sensor_4_510::MergeFrom(const Ultr_sensor_4_510& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ultr_sensor_4_510)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uiuss5_tof_indirect_ = from._impl_.uiuss5_tof_indirect_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.uiuss4_tof_indirect_ = from._impl_.uiuss4_tof_indirect_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.uiuss3_tof_indirect_ = from._impl_.uiuss3_tof_indirect_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.uiuss2_tof_indirect_ = from._impl_.uiuss2_tof_indirect_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ultr_sensor_4_510::CopyFrom(const Ultr_sensor_4_510& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ultr_sensor_4_510)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ultr_sensor_4_510::IsInitialized() const {
  return true;
}

void Ultr_sensor_4_510::InternalSwap(Ultr_sensor_4_510* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ultr_sensor_4_510, _impl_.uiuss2_tof_indirect_)
      + sizeof(Ultr_sensor_4_510::_impl_.uiuss2_tof_indirect_)
      - PROTOBUF_FIELD_OFFSET(Ultr_sensor_4_510, _impl_.uiuss5_tof_indirect_)>(
          reinterpret_cast<char*>(&_impl_.uiuss5_tof_indirect_),
          reinterpret_cast<char*>(&other->_impl_.uiuss5_tof_indirect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ultr_sensor_4_510::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[15]);
}

// ===================================================================

class Ultr_sensor_5_511::_Internal {
 public:
  using HasBits = decltype(std::declval<Ultr_sensor_5_511>()._impl_._has_bits_);
  static void set_has_uiuss7_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uiuss6_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiuss1_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uiuss0_tof_direct(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Ultr_sensor_5_511::Ultr_sensor_5_511(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Ultr_sensor_5_511)
}
Ultr_sensor_5_511::Ultr_sensor_5_511(const Ultr_sensor_5_511& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss7_tof_direct_){}
    , decltype(_impl_.uiuss6_tof_direct_){}
    , decltype(_impl_.uiuss1_tof_direct_){}
    , decltype(_impl_.uiuss0_tof_direct_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uiuss7_tof_direct_, &from._impl_.uiuss7_tof_direct_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uiuss0_tof_direct_) -
    reinterpret_cast<char*>(&_impl_.uiuss7_tof_direct_)) + sizeof(_impl_.uiuss0_tof_direct_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ultr_sensor_5_511)
}

inline void Ultr_sensor_5_511::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uiuss7_tof_direct_){0}
    , decltype(_impl_.uiuss6_tof_direct_){0}
    , decltype(_impl_.uiuss1_tof_direct_){0}
    , decltype(_impl_.uiuss0_tof_direct_){0}
  };
}

Ultr_sensor_5_511::~Ultr_sensor_5_511() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ultr_sensor_5_511)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ultr_sensor_5_511::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ultr_sensor_5_511::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ultr_sensor_5_511::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ultr_sensor_5_511)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.uiuss7_tof_direct_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.uiuss0_tof_direct_) -
        reinterpret_cast<char*>(&_impl_.uiuss7_tof_direct_)) + sizeof(_impl_.uiuss0_tof_direct_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ultr_sensor_5_511::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double uiuss7_tof_direct = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_uiuss7_tof_direct(&has_bits);
          _impl_.uiuss7_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss6_tof_direct = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_uiuss6_tof_direct(&has_bits);
          _impl_.uiuss6_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss1_tof_direct = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_uiuss1_tof_direct(&has_bits);
          _impl_.uiuss1_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double uiuss0_tof_direct = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_uiuss0_tof_direct(&has_bits);
          _impl_.uiuss0_tof_direct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ultr_sensor_5_511::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ultr_sensor_5_511)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double uiuss7_tof_direct = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_uiuss7_tof_direct(), target);
  }

  // optional double uiuss6_tof_direct = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_uiuss6_tof_direct(), target);
  }

  // optional double uiuss1_tof_direct = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_uiuss1_tof_direct(), target);
  }

  // optional double uiuss0_tof_direct = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_uiuss0_tof_direct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ultr_sensor_5_511)
  return target;
}

size_t Ultr_sensor_5_511::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ultr_sensor_5_511)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double uiuss7_tof_direct = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double uiuss6_tof_direct = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double uiuss1_tof_direct = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double uiuss0_tof_direct = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ultr_sensor_5_511::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Ultr_sensor_5_511::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ultr_sensor_5_511::GetClassData() const { return &_class_data_; }

void Ultr_sensor_5_511::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Ultr_sensor_5_511 *>(to)->MergeFrom(
      static_cast<const Ultr_sensor_5_511 &>(from));
}


void Ultr_sensor_5_511::MergeFrom(const Ultr_sensor_5_511& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ultr_sensor_5_511)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uiuss7_tof_direct_ = from._impl_.uiuss7_tof_direct_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.uiuss6_tof_direct_ = from._impl_.uiuss6_tof_direct_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.uiuss1_tof_direct_ = from._impl_.uiuss1_tof_direct_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.uiuss0_tof_direct_ = from._impl_.uiuss0_tof_direct_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ultr_sensor_5_511::CopyFrom(const Ultr_sensor_5_511& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ultr_sensor_5_511)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ultr_sensor_5_511::IsInitialized() const {
  return true;
}

void Ultr_sensor_5_511::InternalSwap(Ultr_sensor_5_511* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ultr_sensor_5_511, _impl_.uiuss0_tof_direct_)
      + sizeof(Ultr_sensor_5_511::_impl_.uiuss0_tof_direct_)
      - PROTOBUF_FIELD_OFFSET(Ultr_sensor_5_511, _impl_.uiuss7_tof_direct_)>(
          reinterpret_cast<char*>(&_impl_.uiuss7_tof_direct_),
          reinterpret_cast<char*>(&other->_impl_.uiuss7_tof_direct_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ultr_sensor_5_511::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[16]);
}

// ===================================================================

class Bms_report_512::_Internal {
 public:
  using HasBits = decltype(std::declval<Bms_report_512>()._impl_._has_bits_);
  static void set_has_battery_current(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_battery_voltage(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_battery_soc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Bms_report_512::Bms_report_512(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Bms_report_512)
}
Bms_report_512::Bms_report_512(const Bms_report_512& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.battery_current_){}
    , decltype(_impl_.battery_voltage_){}
    , decltype(_impl_.battery_soc_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.battery_current_, &from._impl_.battery_current_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.battery_soc_) -
    reinterpret_cast<char*>(&_impl_.battery_current_)) + sizeof(_impl_.battery_soc_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Bms_report_512)
}

inline void Bms_report_512::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.battery_current_){0}
    , decltype(_impl_.battery_voltage_){0}
    , decltype(_impl_.battery_soc_){0}
  };
}

Bms_report_512::~Bms_report_512() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Bms_report_512)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Bms_report_512::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Bms_report_512::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Bms_report_512::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Bms_report_512)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.battery_current_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.battery_soc_) -
        reinterpret_cast<char*>(&_impl_.battery_current_)) + sizeof(_impl_.battery_soc_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bms_report_512::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double battery_current = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_battery_current(&has_bits);
          _impl_.battery_current_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double battery_voltage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_battery_voltage(&has_bits);
          _impl_.battery_voltage_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional int32 battery_soc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_battery_soc(&has_bits);
          _impl_.battery_soc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Bms_report_512::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Bms_report_512)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double battery_current = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_battery_current(), target);
  }

  // optional double battery_voltage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_battery_voltage(), target);
  }

  // optional int32 battery_soc = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_battery_soc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Bms_report_512)
  return target;
}

size_t Bms_report_512::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Bms_report_512)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double battery_current = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double battery_voltage = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 battery_soc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_battery_soc());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Bms_report_512::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Bms_report_512::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Bms_report_512::GetClassData() const { return &_class_data_; }

void Bms_report_512::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Bms_report_512 *>(to)->MergeFrom(
      static_cast<const Bms_report_512 &>(from));
}


void Bms_report_512::MergeFrom(const Bms_report_512& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Bms_report_512)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.battery_current_ = from._impl_.battery_current_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.battery_voltage_ = from._impl_.battery_voltage_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.battery_soc_ = from._impl_.battery_soc_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Bms_report_512::CopyFrom(const Bms_report_512& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Bms_report_512)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bms_report_512::IsInitialized() const {
  return true;
}

void Bms_report_512::InternalSwap(Bms_report_512* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Bms_report_512, _impl_.battery_soc_)
      + sizeof(Bms_report_512::_impl_.battery_soc_)
      - PROTOBUF_FIELD_OFFSET(Bms_report_512, _impl_.battery_current_)>(
          reinterpret_cast<char*>(&_impl_.battery_current_),
          reinterpret_cast<char*>(&other->_impl_.battery_current_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Bms_report_512::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[17]);
}

// ===================================================================

class Devkit::_Internal {
 public:
  using HasBits = decltype(std::declval<Devkit>()._impl_._has_bits_);
  static const ::apollo::canbus::Throttle_command_100& throttle_command_100(const Devkit* msg);
  static void set_has_throttle_command_100(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::canbus::Brake_command_101& brake_command_101(const Devkit* msg);
  static void set_has_brake_command_101(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::canbus::Steering_command_102& steering_command_102(const Devkit* msg);
  static void set_has_steering_command_102(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::canbus::Gear_command_103& gear_command_103(const Devkit* msg);
  static void set_has_gear_command_103(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::canbus::Park_command_104& park_command_104(const Devkit* msg);
  static void set_has_park_command_104(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::apollo::canbus::Throttle_report_500& throttle_report_500(const Devkit* msg);
  static void set_has_throttle_report_500(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::apollo::canbus::Brake_report_501& brake_report_501(const Devkit* msg);
  static void set_has_brake_report_501(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::apollo::canbus::Steering_report_502& steering_report_502(const Devkit* msg);
  static void set_has_steering_report_502(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::apollo::canbus::Gear_report_503& gear_report_503(const Devkit* msg);
  static void set_has_gear_report_503(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::apollo::canbus::Park_report_504& park_report_504(const Devkit* msg);
  static void set_has_park_report_504(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::apollo::canbus::Vcu_report_505& vcu_report_505(const Devkit* msg);
  static void set_has_vcu_report_505(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::apollo::canbus::Wheelspeed_report_506& wheelspeed_report_506(const Devkit* msg);
  static void set_has_wheelspeed_report_506(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::apollo::canbus::Ultr_sensor_1_507& ultr_sensor_1_507(const Devkit* msg);
  static void set_has_ultr_sensor_1_507(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::apollo::canbus::Ultr_sensor_2_508& ultr_sensor_2_508(const Devkit* msg);
  static void set_has_ultr_sensor_2_508(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::apollo::canbus::Ultr_sensor_3_509& ultr_sensor_3_509(const Devkit* msg);
  static void set_has_ultr_sensor_3_509(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::apollo::canbus::Ultr_sensor_4_510& ultr_sensor_4_510(const Devkit* msg);
  static void set_has_ultr_sensor_4_510(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::apollo::canbus::Ultr_sensor_5_511& ultr_sensor_5_511(const Devkit* msg);
  static void set_has_ultr_sensor_5_511(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::apollo::canbus::Bms_report_512& bms_report_512(const Devkit* msg);
  static void set_has_bms_report_512(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
};

const ::apollo::canbus::Throttle_command_100&
Devkit::_Internal::throttle_command_100(const Devkit* msg) {
  return *msg->_impl_.throttle_command_100_;
}
const ::apollo::canbus::Brake_command_101&
Devkit::_Internal::brake_command_101(const Devkit* msg) {
  return *msg->_impl_.brake_command_101_;
}
const ::apollo::canbus::Steering_command_102&
Devkit::_Internal::steering_command_102(const Devkit* msg) {
  return *msg->_impl_.steering_command_102_;
}
const ::apollo::canbus::Gear_command_103&
Devkit::_Internal::gear_command_103(const Devkit* msg) {
  return *msg->_impl_.gear_command_103_;
}
const ::apollo::canbus::Park_command_104&
Devkit::_Internal::park_command_104(const Devkit* msg) {
  return *msg->_impl_.park_command_104_;
}
const ::apollo::canbus::Throttle_report_500&
Devkit::_Internal::throttle_report_500(const Devkit* msg) {
  return *msg->_impl_.throttle_report_500_;
}
const ::apollo::canbus::Brake_report_501&
Devkit::_Internal::brake_report_501(const Devkit* msg) {
  return *msg->_impl_.brake_report_501_;
}
const ::apollo::canbus::Steering_report_502&
Devkit::_Internal::steering_report_502(const Devkit* msg) {
  return *msg->_impl_.steering_report_502_;
}
const ::apollo::canbus::Gear_report_503&
Devkit::_Internal::gear_report_503(const Devkit* msg) {
  return *msg->_impl_.gear_report_503_;
}
const ::apollo::canbus::Park_report_504&
Devkit::_Internal::park_report_504(const Devkit* msg) {
  return *msg->_impl_.park_report_504_;
}
const ::apollo::canbus::Vcu_report_505&
Devkit::_Internal::vcu_report_505(const Devkit* msg) {
  return *msg->_impl_.vcu_report_505_;
}
const ::apollo::canbus::Wheelspeed_report_506&
Devkit::_Internal::wheelspeed_report_506(const Devkit* msg) {
  return *msg->_impl_.wheelspeed_report_506_;
}
const ::apollo::canbus::Ultr_sensor_1_507&
Devkit::_Internal::ultr_sensor_1_507(const Devkit* msg) {
  return *msg->_impl_.ultr_sensor_1_507_;
}
const ::apollo::canbus::Ultr_sensor_2_508&
Devkit::_Internal::ultr_sensor_2_508(const Devkit* msg) {
  return *msg->_impl_.ultr_sensor_2_508_;
}
const ::apollo::canbus::Ultr_sensor_3_509&
Devkit::_Internal::ultr_sensor_3_509(const Devkit* msg) {
  return *msg->_impl_.ultr_sensor_3_509_;
}
const ::apollo::canbus::Ultr_sensor_4_510&
Devkit::_Internal::ultr_sensor_4_510(const Devkit* msg) {
  return *msg->_impl_.ultr_sensor_4_510_;
}
const ::apollo::canbus::Ultr_sensor_5_511&
Devkit::_Internal::ultr_sensor_5_511(const Devkit* msg) {
  return *msg->_impl_.ultr_sensor_5_511_;
}
const ::apollo::canbus::Bms_report_512&
Devkit::_Internal::bms_report_512(const Devkit* msg) {
  return *msg->_impl_.bms_report_512_;
}
Devkit::Devkit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Devkit)
}
Devkit::Devkit(const Devkit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.throttle_command_100_){nullptr}
    , decltype(_impl_.brake_command_101_){nullptr}
    , decltype(_impl_.steering_command_102_){nullptr}
    , decltype(_impl_.gear_command_103_){nullptr}
    , decltype(_impl_.park_command_104_){nullptr}
    , decltype(_impl_.throttle_report_500_){nullptr}
    , decltype(_impl_.brake_report_501_){nullptr}
    , decltype(_impl_.steering_report_502_){nullptr}
    , decltype(_impl_.gear_report_503_){nullptr}
    , decltype(_impl_.park_report_504_){nullptr}
    , decltype(_impl_.vcu_report_505_){nullptr}
    , decltype(_impl_.wheelspeed_report_506_){nullptr}
    , decltype(_impl_.ultr_sensor_1_507_){nullptr}
    , decltype(_impl_.ultr_sensor_2_508_){nullptr}
    , decltype(_impl_.ultr_sensor_3_509_){nullptr}
    , decltype(_impl_.ultr_sensor_4_510_){nullptr}
    , decltype(_impl_.ultr_sensor_5_511_){nullptr}
    , decltype(_impl_.bms_report_512_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_throttle_command_100()) {
    _impl_.throttle_command_100_ = new ::apollo::canbus::Throttle_command_100(*from._impl_.throttle_command_100_);
  }
  if (from._internal_has_brake_command_101()) {
    _impl_.brake_command_101_ = new ::apollo::canbus::Brake_command_101(*from._impl_.brake_command_101_);
  }
  if (from._internal_has_steering_command_102()) {
    _impl_.steering_command_102_ = new ::apollo::canbus::Steering_command_102(*from._impl_.steering_command_102_);
  }
  if (from._internal_has_gear_command_103()) {
    _impl_.gear_command_103_ = new ::apollo::canbus::Gear_command_103(*from._impl_.gear_command_103_);
  }
  if (from._internal_has_park_command_104()) {
    _impl_.park_command_104_ = new ::apollo::canbus::Park_command_104(*from._impl_.park_command_104_);
  }
  if (from._internal_has_throttle_report_500()) {
    _impl_.throttle_report_500_ = new ::apollo::canbus::Throttle_report_500(*from._impl_.throttle_report_500_);
  }
  if (from._internal_has_brake_report_501()) {
    _impl_.brake_report_501_ = new ::apollo::canbus::Brake_report_501(*from._impl_.brake_report_501_);
  }
  if (from._internal_has_steering_report_502()) {
    _impl_.steering_report_502_ = new ::apollo::canbus::Steering_report_502(*from._impl_.steering_report_502_);
  }
  if (from._internal_has_gear_report_503()) {
    _impl_.gear_report_503_ = new ::apollo::canbus::Gear_report_503(*from._impl_.gear_report_503_);
  }
  if (from._internal_has_park_report_504()) {
    _impl_.park_report_504_ = new ::apollo::canbus::Park_report_504(*from._impl_.park_report_504_);
  }
  if (from._internal_has_vcu_report_505()) {
    _impl_.vcu_report_505_ = new ::apollo::canbus::Vcu_report_505(*from._impl_.vcu_report_505_);
  }
  if (from._internal_has_wheelspeed_report_506()) {
    _impl_.wheelspeed_report_506_ = new ::apollo::canbus::Wheelspeed_report_506(*from._impl_.wheelspeed_report_506_);
  }
  if (from._internal_has_ultr_sensor_1_507()) {
    _impl_.ultr_sensor_1_507_ = new ::apollo::canbus::Ultr_sensor_1_507(*from._impl_.ultr_sensor_1_507_);
  }
  if (from._internal_has_ultr_sensor_2_508()) {
    _impl_.ultr_sensor_2_508_ = new ::apollo::canbus::Ultr_sensor_2_508(*from._impl_.ultr_sensor_2_508_);
  }
  if (from._internal_has_ultr_sensor_3_509()) {
    _impl_.ultr_sensor_3_509_ = new ::apollo::canbus::Ultr_sensor_3_509(*from._impl_.ultr_sensor_3_509_);
  }
  if (from._internal_has_ultr_sensor_4_510()) {
    _impl_.ultr_sensor_4_510_ = new ::apollo::canbus::Ultr_sensor_4_510(*from._impl_.ultr_sensor_4_510_);
  }
  if (from._internal_has_ultr_sensor_5_511()) {
    _impl_.ultr_sensor_5_511_ = new ::apollo::canbus::Ultr_sensor_5_511(*from._impl_.ultr_sensor_5_511_);
  }
  if (from._internal_has_bms_report_512()) {
    _impl_.bms_report_512_ = new ::apollo::canbus::Bms_report_512(*from._impl_.bms_report_512_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Devkit)
}

inline void Devkit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.throttle_command_100_){nullptr}
    , decltype(_impl_.brake_command_101_){nullptr}
    , decltype(_impl_.steering_command_102_){nullptr}
    , decltype(_impl_.gear_command_103_){nullptr}
    , decltype(_impl_.park_command_104_){nullptr}
    , decltype(_impl_.throttle_report_500_){nullptr}
    , decltype(_impl_.brake_report_501_){nullptr}
    , decltype(_impl_.steering_report_502_){nullptr}
    , decltype(_impl_.gear_report_503_){nullptr}
    , decltype(_impl_.park_report_504_){nullptr}
    , decltype(_impl_.vcu_report_505_){nullptr}
    , decltype(_impl_.wheelspeed_report_506_){nullptr}
    , decltype(_impl_.ultr_sensor_1_507_){nullptr}
    , decltype(_impl_.ultr_sensor_2_508_){nullptr}
    , decltype(_impl_.ultr_sensor_3_509_){nullptr}
    , decltype(_impl_.ultr_sensor_4_510_){nullptr}
    , decltype(_impl_.ultr_sensor_5_511_){nullptr}
    , decltype(_impl_.bms_report_512_){nullptr}
  };
}

Devkit::~Devkit() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Devkit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Devkit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.throttle_command_100_;
  if (this != internal_default_instance()) delete _impl_.brake_command_101_;
  if (this != internal_default_instance()) delete _impl_.steering_command_102_;
  if (this != internal_default_instance()) delete _impl_.gear_command_103_;
  if (this != internal_default_instance()) delete _impl_.park_command_104_;
  if (this != internal_default_instance()) delete _impl_.throttle_report_500_;
  if (this != internal_default_instance()) delete _impl_.brake_report_501_;
  if (this != internal_default_instance()) delete _impl_.steering_report_502_;
  if (this != internal_default_instance()) delete _impl_.gear_report_503_;
  if (this != internal_default_instance()) delete _impl_.park_report_504_;
  if (this != internal_default_instance()) delete _impl_.vcu_report_505_;
  if (this != internal_default_instance()) delete _impl_.wheelspeed_report_506_;
  if (this != internal_default_instance()) delete _impl_.ultr_sensor_1_507_;
  if (this != internal_default_instance()) delete _impl_.ultr_sensor_2_508_;
  if (this != internal_default_instance()) delete _impl_.ultr_sensor_3_509_;
  if (this != internal_default_instance()) delete _impl_.ultr_sensor_4_510_;
  if (this != internal_default_instance()) delete _impl_.ultr_sensor_5_511_;
  if (this != internal_default_instance()) delete _impl_.bms_report_512_;
}

void Devkit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Devkit::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Devkit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.throttle_command_100_ != nullptr);
      _impl_.throttle_command_100_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.brake_command_101_ != nullptr);
      _impl_.brake_command_101_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.steering_command_102_ != nullptr);
      _impl_.steering_command_102_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.gear_command_103_ != nullptr);
      _impl_.gear_command_103_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.park_command_104_ != nullptr);
      _impl_.park_command_104_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.throttle_report_500_ != nullptr);
      _impl_.throttle_report_500_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.brake_report_501_ != nullptr);
      _impl_.brake_report_501_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.steering_report_502_ != nullptr);
      _impl_.steering_report_502_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.gear_report_503_ != nullptr);
      _impl_.gear_report_503_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.park_report_504_ != nullptr);
      _impl_.park_report_504_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.vcu_report_505_ != nullptr);
      _impl_.vcu_report_505_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.wheelspeed_report_506_ != nullptr);
      _impl_.wheelspeed_report_506_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.ultr_sensor_1_507_ != nullptr);
      _impl_.ultr_sensor_1_507_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.ultr_sensor_2_508_ != nullptr);
      _impl_.ultr_sensor_2_508_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.ultr_sensor_3_509_ != nullptr);
      _impl_.ultr_sensor_3_509_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.ultr_sensor_4_510_ != nullptr);
      _impl_.ultr_sensor_4_510_->Clear();
    }
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.ultr_sensor_5_511_ != nullptr);
      _impl_.ultr_sensor_5_511_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.bms_report_512_ != nullptr);
      _impl_.bms_report_512_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Devkit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.canbus.Throttle_command_100 throttle_command_100 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_throttle_command_100(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_command_101 brake_command_101 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_brake_command_101(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Steering_command_102 steering_command_102 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_steering_command_102(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Gear_command_103 gear_command_103 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_gear_command_103(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Park_command_104 park_command_104 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_park_command_104(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Throttle_report_500 throttle_report_500 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_throttle_report_500(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brake_report_501 brake_report_501 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_brake_report_501(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Steering_report_502 steering_report_502 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_steering_report_502(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Gear_report_503 gear_report_503 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_gear_report_503(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Park_report_504 park_report_504 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_park_report_504(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcu_report_505 vcu_report_505 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_vcu_report_505(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Wheelspeed_report_506 wheelspeed_report_506 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_wheelspeed_report_506(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ultr_sensor_1_507 ultr_sensor_1_507 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_ultr_sensor_1_507(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ultr_sensor_2_508 ultr_sensor_2_508 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_ultr_sensor_2_508(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ultr_sensor_3_509 ultr_sensor_3_509 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_ultr_sensor_3_509(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ultr_sensor_4_510 ultr_sensor_4_510 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_ultr_sensor_4_510(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ultr_sensor_5_511 ultr_sensor_5_511 = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_ultr_sensor_5_511(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bms_report_512 bms_report_512 = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_bms_report_512(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Devkit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Devkit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.canbus.Throttle_command_100 throttle_command_100 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::throttle_command_100(this),
        _Internal::throttle_command_100(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Brake_command_101 brake_command_101 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::brake_command_101(this),
        _Internal::brake_command_101(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Steering_command_102 steering_command_102 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::steering_command_102(this),
        _Internal::steering_command_102(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Gear_command_103 gear_command_103 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::gear_command_103(this),
        _Internal::gear_command_103(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Park_command_104 park_command_104 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::park_command_104(this),
        _Internal::park_command_104(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Throttle_report_500 throttle_report_500 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::throttle_report_500(this),
        _Internal::throttle_report_500(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Brake_report_501 brake_report_501 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::brake_report_501(this),
        _Internal::brake_report_501(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Steering_report_502 steering_report_502 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::steering_report_502(this),
        _Internal::steering_report_502(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Gear_report_503 gear_report_503 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::gear_report_503(this),
        _Internal::gear_report_503(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Park_report_504 park_report_504 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::park_report_504(this),
        _Internal::park_report_504(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Vcu_report_505 vcu_report_505 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::vcu_report_505(this),
        _Internal::vcu_report_505(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Wheelspeed_report_506 wheelspeed_report_506 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::wheelspeed_report_506(this),
        _Internal::wheelspeed_report_506(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Ultr_sensor_1_507 ultr_sensor_1_507 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::ultr_sensor_1_507(this),
        _Internal::ultr_sensor_1_507(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Ultr_sensor_2_508 ultr_sensor_2_508 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::ultr_sensor_2_508(this),
        _Internal::ultr_sensor_2_508(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Ultr_sensor_3_509 ultr_sensor_3_509 = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::ultr_sensor_3_509(this),
        _Internal::ultr_sensor_3_509(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Ultr_sensor_4_510 ultr_sensor_4_510 = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::ultr_sensor_4_510(this),
        _Internal::ultr_sensor_4_510(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Ultr_sensor_5_511 ultr_sensor_5_511 = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::ultr_sensor_5_511(this),
        _Internal::ultr_sensor_5_511(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Bms_report_512 bms_report_512 = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::bms_report_512(this),
        _Internal::bms_report_512(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Devkit)
  return target;
}

size_t Devkit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Devkit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Throttle_command_100 throttle_command_100 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.throttle_command_100_);
    }

    // optional .apollo.canbus.Brake_command_101 brake_command_101 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.brake_command_101_);
    }

    // optional .apollo.canbus.Steering_command_102 steering_command_102 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.steering_command_102_);
    }

    // optional .apollo.canbus.Gear_command_103 gear_command_103 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.gear_command_103_);
    }

    // optional .apollo.canbus.Park_command_104 park_command_104 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.park_command_104_);
    }

    // optional .apollo.canbus.Throttle_report_500 throttle_report_500 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.throttle_report_500_);
    }

    // optional .apollo.canbus.Brake_report_501 brake_report_501 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.brake_report_501_);
    }

    // optional .apollo.canbus.Steering_report_502 steering_report_502 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.steering_report_502_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .apollo.canbus.Gear_report_503 gear_report_503 = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.gear_report_503_);
    }

    // optional .apollo.canbus.Park_report_504 park_report_504 = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.park_report_504_);
    }

    // optional .apollo.canbus.Vcu_report_505 vcu_report_505 = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vcu_report_505_);
    }

    // optional .apollo.canbus.Wheelspeed_report_506 wheelspeed_report_506 = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.wheelspeed_report_506_);
    }

    // optional .apollo.canbus.Ultr_sensor_1_507 ultr_sensor_1_507 = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ultr_sensor_1_507_);
    }

    // optional .apollo.canbus.Ultr_sensor_2_508 ultr_sensor_2_508 = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ultr_sensor_2_508_);
    }

    // optional .apollo.canbus.Ultr_sensor_3_509 ultr_sensor_3_509 = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ultr_sensor_3_509_);
    }

    // optional .apollo.canbus.Ultr_sensor_4_510 ultr_sensor_4_510 = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ultr_sensor_4_510_);
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional .apollo.canbus.Ultr_sensor_5_511 ultr_sensor_5_511 = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ultr_sensor_5_511_);
    }

    // optional .apollo.canbus.Bms_report_512 bms_report_512 = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bms_report_512_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Devkit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Devkit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Devkit::GetClassData() const { return &_class_data_; }

void Devkit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Devkit *>(to)->MergeFrom(
      static_cast<const Devkit &>(from));
}


void Devkit::MergeFrom(const Devkit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Devkit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_throttle_command_100()->::apollo::canbus::Throttle_command_100::MergeFrom(from._internal_throttle_command_100());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_brake_command_101()->::apollo::canbus::Brake_command_101::MergeFrom(from._internal_brake_command_101());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_steering_command_102()->::apollo::canbus::Steering_command_102::MergeFrom(from._internal_steering_command_102());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_gear_command_103()->::apollo::canbus::Gear_command_103::MergeFrom(from._internal_gear_command_103());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_park_command_104()->::apollo::canbus::Park_command_104::MergeFrom(from._internal_park_command_104());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_throttle_report_500()->::apollo::canbus::Throttle_report_500::MergeFrom(from._internal_throttle_report_500());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_brake_report_501()->::apollo::canbus::Brake_report_501::MergeFrom(from._internal_brake_report_501());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_steering_report_502()->::apollo::canbus::Steering_report_502::MergeFrom(from._internal_steering_report_502());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_gear_report_503()->::apollo::canbus::Gear_report_503::MergeFrom(from._internal_gear_report_503());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_park_report_504()->::apollo::canbus::Park_report_504::MergeFrom(from._internal_park_report_504());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_vcu_report_505()->::apollo::canbus::Vcu_report_505::MergeFrom(from._internal_vcu_report_505());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_wheelspeed_report_506()->::apollo::canbus::Wheelspeed_report_506::MergeFrom(from._internal_wheelspeed_report_506());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_ultr_sensor_1_507()->::apollo::canbus::Ultr_sensor_1_507::MergeFrom(from._internal_ultr_sensor_1_507());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_ultr_sensor_2_508()->::apollo::canbus::Ultr_sensor_2_508::MergeFrom(from._internal_ultr_sensor_2_508());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_ultr_sensor_3_509()->::apollo::canbus::Ultr_sensor_3_509::MergeFrom(from._internal_ultr_sensor_3_509());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_ultr_sensor_4_510()->::apollo::canbus::Ultr_sensor_4_510::MergeFrom(from._internal_ultr_sensor_4_510());
    }
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_ultr_sensor_5_511()->::apollo::canbus::Ultr_sensor_5_511::MergeFrom(from._internal_ultr_sensor_5_511());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_bms_report_512()->::apollo::canbus::Bms_report_512::MergeFrom(from._internal_bms_report_512());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Devkit::CopyFrom(const Devkit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Devkit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Devkit::IsInitialized() const {
  return true;
}

void Devkit::InternalSwap(Devkit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Devkit, _impl_.bms_report_512_)
      + sizeof(Devkit::_impl_.bms_report_512_)
      - PROTOBUF_FIELD_OFFSET(Devkit, _impl_.throttle_command_100_)>(
          reinterpret_cast<char*>(&_impl_.throttle_command_100_),
          reinterpret_cast<char*>(&other->_impl_.throttle_command_100_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Devkit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_getter, &descriptor_table_modules_2fcanbus_2fproto_2fdevkit_2eproto_once,
      file_level_metadata_modules_2fcanbus_2fproto_2fdevkit_2eproto[18]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::canbus::Throttle_command_100*
Arena::CreateMaybeMessage< ::apollo::canbus::Throttle_command_100 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Throttle_command_100 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Brake_command_101*
Arena::CreateMaybeMessage< ::apollo::canbus::Brake_command_101 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Brake_command_101 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Steering_command_102*
Arena::CreateMaybeMessage< ::apollo::canbus::Steering_command_102 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Steering_command_102 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Gear_command_103*
Arena::CreateMaybeMessage< ::apollo::canbus::Gear_command_103 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Gear_command_103 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Park_command_104*
Arena::CreateMaybeMessage< ::apollo::canbus::Park_command_104 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Park_command_104 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Throttle_report_500*
Arena::CreateMaybeMessage< ::apollo::canbus::Throttle_report_500 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Throttle_report_500 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Brake_report_501*
Arena::CreateMaybeMessage< ::apollo::canbus::Brake_report_501 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Brake_report_501 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Steering_report_502*
Arena::CreateMaybeMessage< ::apollo::canbus::Steering_report_502 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Steering_report_502 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Gear_report_503*
Arena::CreateMaybeMessage< ::apollo::canbus::Gear_report_503 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Gear_report_503 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Park_report_504*
Arena::CreateMaybeMessage< ::apollo::canbus::Park_report_504 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Park_report_504 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vcu_report_505*
Arena::CreateMaybeMessage< ::apollo::canbus::Vcu_report_505 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Vcu_report_505 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Wheelspeed_report_506*
Arena::CreateMaybeMessage< ::apollo::canbus::Wheelspeed_report_506 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Wheelspeed_report_506 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ultr_sensor_1_507*
Arena::CreateMaybeMessage< ::apollo::canbus::Ultr_sensor_1_507 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Ultr_sensor_1_507 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ultr_sensor_2_508*
Arena::CreateMaybeMessage< ::apollo::canbus::Ultr_sensor_2_508 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Ultr_sensor_2_508 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ultr_sensor_3_509*
Arena::CreateMaybeMessage< ::apollo::canbus::Ultr_sensor_3_509 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Ultr_sensor_3_509 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ultr_sensor_4_510*
Arena::CreateMaybeMessage< ::apollo::canbus::Ultr_sensor_4_510 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Ultr_sensor_4_510 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ultr_sensor_5_511*
Arena::CreateMaybeMessage< ::apollo::canbus::Ultr_sensor_5_511 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Ultr_sensor_5_511 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Bms_report_512*
Arena::CreateMaybeMessage< ::apollo::canbus::Bms_report_512 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Bms_report_512 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Devkit*
Arena::CreateMaybeMessage< ::apollo::canbus::Devkit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Devkit >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
