// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_obstacle.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/error_code.pb.h"
#include "modules/common/proto/header.pb.h"
#include "modules/common/proto/pnc_point.pb.h"
#include "modules/perception/proto/perception_obstacle.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto;
namespace apollo {
namespace prediction {
class PredictionObstacle;
struct PredictionObstacleDefaultTypeInternal;
extern PredictionObstacleDefaultTypeInternal _PredictionObstacle_default_instance_;
class PredictionObstacles;
struct PredictionObstaclesDefaultTypeInternal;
extern PredictionObstaclesDefaultTypeInternal _PredictionObstacles_default_instance_;
class Trajectory;
struct TrajectoryDefaultTypeInternal;
extern TrajectoryDefaultTypeInternal _Trajectory_default_instance_;
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::prediction::PredictionObstacle* Arena::CreateMaybeMessage<::apollo::prediction::PredictionObstacle>(Arena*);
template<> ::apollo::prediction::PredictionObstacles* Arena::CreateMaybeMessage<::apollo::prediction::PredictionObstacles>(Arena*);
template<> ::apollo::prediction::Trajectory* Arena::CreateMaybeMessage<::apollo::prediction::Trajectory>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace prediction {

// ===================================================================

class Trajectory final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.Trajectory) */ {
 public:
  inline Trajectory() : Trajectory(nullptr) {}
  ~Trajectory() override;
  explicit PROTOBUF_CONSTEXPR Trajectory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Trajectory(const Trajectory& from);
  Trajectory(Trajectory&& from) noexcept
    : Trajectory() {
    *this = ::std::move(from);
  }

  inline Trajectory& operator=(const Trajectory& from) {
    CopyFrom(from);
    return *this;
  }
  inline Trajectory& operator=(Trajectory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Trajectory& default_instance() {
    return *internal_default_instance();
  }
  static inline const Trajectory* internal_default_instance() {
    return reinterpret_cast<const Trajectory*>(
               &_Trajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Trajectory& a, Trajectory& b) {
    a.Swap(&b);
  }
  inline void Swap(Trajectory* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Trajectory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Trajectory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Trajectory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Trajectory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Trajectory& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trajectory* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.Trajectory";
  }
  protected:
  explicit Trajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryPointFieldNumber = 2,
    kProbabilityFieldNumber = 1,
  };
  // repeated .apollo.common.TrajectoryPoint trajectory_point = 2;
  int trajectory_point_size() const;
  private:
  int _internal_trajectory_point_size() const;
  public:
  void clear_trajectory_point();
  ::apollo::common::TrajectoryPoint* mutable_trajectory_point(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >*
      mutable_trajectory_point();
  private:
  const ::apollo::common::TrajectoryPoint& _internal_trajectory_point(int index) const;
  ::apollo::common::TrajectoryPoint* _internal_add_trajectory_point();
  public:
  const ::apollo::common::TrajectoryPoint& trajectory_point(int index) const;
  ::apollo::common::TrajectoryPoint* add_trajectory_point();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >&
      trajectory_point() const;

  // optional double probability = 1;
  bool has_probability() const;
  private:
  bool _internal_has_probability() const;
  public:
  void clear_probability();
  double probability() const;
  void set_probability(double value);
  private:
  double _internal_probability() const;
  void _internal_set_probability(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.Trajectory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint > trajectory_point_;
    double probability_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto;
};
// -------------------------------------------------------------------

class PredictionObstacle final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.PredictionObstacle) */ {
 public:
  inline PredictionObstacle() : PredictionObstacle(nullptr) {}
  ~PredictionObstacle() override;
  explicit PROTOBUF_CONSTEXPR PredictionObstacle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PredictionObstacle(const PredictionObstacle& from);
  PredictionObstacle(PredictionObstacle&& from) noexcept
    : PredictionObstacle() {
    *this = ::std::move(from);
  }

  inline PredictionObstacle& operator=(const PredictionObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionObstacle& operator=(PredictionObstacle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PredictionObstacle& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionObstacle* internal_default_instance() {
    return reinterpret_cast<const PredictionObstacle*>(
               &_PredictionObstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PredictionObstacle& a, PredictionObstacle& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionObstacle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionObstacle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionObstacle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PredictionObstacle>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PredictionObstacle& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PredictionObstacle& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionObstacle* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.PredictionObstacle";
  }
  protected:
  explicit PredictionObstacle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryFieldNumber = 4,
    kPerceptionObstacleFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kPredictedPeriodFieldNumber = 3,
  };
  // repeated .apollo.prediction.Trajectory trajectory = 4;
  int trajectory_size() const;
  private:
  int _internal_trajectory_size() const;
  public:
  void clear_trajectory();
  ::apollo::prediction::Trajectory* mutable_trajectory(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >*
      mutable_trajectory();
  private:
  const ::apollo::prediction::Trajectory& _internal_trajectory(int index) const;
  ::apollo::prediction::Trajectory* _internal_add_trajectory();
  public:
  const ::apollo::prediction::Trajectory& trajectory(int index) const;
  ::apollo::prediction::Trajectory* add_trajectory();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >&
      trajectory() const;

  // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  bool has_perception_obstacle() const;
  private:
  bool _internal_has_perception_obstacle() const;
  public:
  void clear_perception_obstacle();
  const ::apollo::perception::PerceptionObstacle& perception_obstacle() const;
  PROTOBUF_NODISCARD ::apollo::perception::PerceptionObstacle* release_perception_obstacle();
  ::apollo::perception::PerceptionObstacle* mutable_perception_obstacle();
  void set_allocated_perception_obstacle(::apollo::perception::PerceptionObstacle* perception_obstacle);
  private:
  const ::apollo::perception::PerceptionObstacle& _internal_perception_obstacle() const;
  ::apollo::perception::PerceptionObstacle* _internal_mutable_perception_obstacle();
  public:
  void unsafe_arena_set_allocated_perception_obstacle(
      ::apollo::perception::PerceptionObstacle* perception_obstacle);
  ::apollo::perception::PerceptionObstacle* unsafe_arena_release_perception_obstacle();

  // optional double timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  double timestamp() const;
  void set_timestamp(double value);
  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);
  public:

  // optional double predicted_period = 3;
  bool has_predicted_period() const;
  private:
  bool _internal_has_predicted_period() const;
  public:
  void clear_predicted_period();
  double predicted_period() const;
  void set_predicted_period(double value);
  private:
  double _internal_predicted_period() const;
  void _internal_set_predicted_period(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.PredictionObstacle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory > trajectory_;
    ::apollo::perception::PerceptionObstacle* perception_obstacle_;
    double timestamp_;
    double predicted_period_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto;
};
// -------------------------------------------------------------------

class PredictionObstacles final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.PredictionObstacles) */ {
 public:
  inline PredictionObstacles() : PredictionObstacles(nullptr) {}
  ~PredictionObstacles() override;
  explicit PROTOBUF_CONSTEXPR PredictionObstacles(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PredictionObstacles(const PredictionObstacles& from);
  PredictionObstacles(PredictionObstacles&& from) noexcept
    : PredictionObstacles() {
    *this = ::std::move(from);
  }

  inline PredictionObstacles& operator=(const PredictionObstacles& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionObstacles& operator=(PredictionObstacles&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PredictionObstacles& default_instance() {
    return *internal_default_instance();
  }
  static inline const PredictionObstacles* internal_default_instance() {
    return reinterpret_cast<const PredictionObstacles*>(
               &_PredictionObstacles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PredictionObstacles& a, PredictionObstacles& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionObstacles* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionObstacles* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PredictionObstacles* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PredictionObstacles>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PredictionObstacles& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PredictionObstacles& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionObstacles* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.PredictionObstacles";
  }
  protected:
  explicit PredictionObstacles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPredictionObstacleFieldNumber = 2,
    kHeaderFieldNumber = 1,
    kStartTimestampFieldNumber = 4,
    kEndTimestampFieldNumber = 5,
    kPerceptionErrorCodeFieldNumber = 3,
  };
  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  int prediction_obstacle_size() const;
  private:
  int _internal_prediction_obstacle_size() const;
  public:
  void clear_prediction_obstacle();
  ::apollo::prediction::PredictionObstacle* mutable_prediction_obstacle(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >*
      mutable_prediction_obstacle();
  private:
  const ::apollo::prediction::PredictionObstacle& _internal_prediction_obstacle(int index) const;
  ::apollo::prediction::PredictionObstacle* _internal_add_prediction_obstacle();
  public:
  const ::apollo::prediction::PredictionObstacle& prediction_obstacle(int index) const;
  ::apollo::prediction::PredictionObstacle* add_prediction_obstacle();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >&
      prediction_obstacle() const;

  // optional .apollo.common.Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::apollo::common::Header& header() const;
  PROTOBUF_NODISCARD ::apollo::common::Header* release_header();
  ::apollo::common::Header* mutable_header();
  void set_allocated_header(::apollo::common::Header* header);
  private:
  const ::apollo::common::Header& _internal_header() const;
  ::apollo::common::Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::apollo::common::Header* header);
  ::apollo::common::Header* unsafe_arena_release_header();

  // optional double start_timestamp = 4;
  bool has_start_timestamp() const;
  private:
  bool _internal_has_start_timestamp() const;
  public:
  void clear_start_timestamp();
  double start_timestamp() const;
  void set_start_timestamp(double value);
  private:
  double _internal_start_timestamp() const;
  void _internal_set_start_timestamp(double value);
  public:

  // optional double end_timestamp = 5;
  bool has_end_timestamp() const;
  private:
  bool _internal_has_end_timestamp() const;
  public:
  void clear_end_timestamp();
  double end_timestamp() const;
  void set_end_timestamp(double value);
  private:
  double _internal_end_timestamp() const;
  void _internal_set_end_timestamp(double value);
  public:

  // optional .apollo.common.ErrorCode perception_error_code = 3;
  bool has_perception_error_code() const;
  private:
  bool _internal_has_perception_error_code() const;
  public:
  void clear_perception_error_code();
  ::apollo::common::ErrorCode perception_error_code() const;
  void set_perception_error_code(::apollo::common::ErrorCode value);
  private:
  ::apollo::common::ErrorCode _internal_perception_error_code() const;
  void _internal_set_perception_error_code(::apollo::common::ErrorCode value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.PredictionObstacles)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionObstacle > prediction_obstacle_;
    ::apollo::common::Header* header_;
    double start_timestamp_;
    double end_timestamp_;
    int perception_error_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Trajectory

// optional double probability = 1;
inline bool Trajectory::_internal_has_probability() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Trajectory::has_probability() const {
  return _internal_has_probability();
}
inline void Trajectory::clear_probability() {
  _impl_.probability_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Trajectory::_internal_probability() const {
  return _impl_.probability_;
}
inline double Trajectory::probability() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Trajectory.probability)
  return _internal_probability();
}
inline void Trajectory::_internal_set_probability(double value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.probability_ = value;
}
inline void Trajectory::set_probability(double value) {
  _internal_set_probability(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Trajectory.probability)
}

// repeated .apollo.common.TrajectoryPoint trajectory_point = 2;
inline int Trajectory::_internal_trajectory_point_size() const {
  return _impl_.trajectory_point_.size();
}
inline int Trajectory::trajectory_point_size() const {
  return _internal_trajectory_point_size();
}
inline ::apollo::common::TrajectoryPoint* Trajectory::mutable_trajectory_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Trajectory.trajectory_point)
  return _impl_.trajectory_point_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >*
Trajectory::mutable_trajectory_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Trajectory.trajectory_point)
  return &_impl_.trajectory_point_;
}
inline const ::apollo::common::TrajectoryPoint& Trajectory::_internal_trajectory_point(int index) const {
  return _impl_.trajectory_point_.Get(index);
}
inline const ::apollo::common::TrajectoryPoint& Trajectory::trajectory_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Trajectory.trajectory_point)
  return _internal_trajectory_point(index);
}
inline ::apollo::common::TrajectoryPoint* Trajectory::_internal_add_trajectory_point() {
  return _impl_.trajectory_point_.Add();
}
inline ::apollo::common::TrajectoryPoint* Trajectory::add_trajectory_point() {
  ::apollo::common::TrajectoryPoint* _add = _internal_add_trajectory_point();
  // @@protoc_insertion_point(field_add:apollo.prediction.Trajectory.trajectory_point)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >&
Trajectory::trajectory_point() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Trajectory.trajectory_point)
  return _impl_.trajectory_point_;
}

// -------------------------------------------------------------------

// PredictionObstacle

// optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
inline bool PredictionObstacle::_internal_has_perception_obstacle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.perception_obstacle_ != nullptr);
  return value;
}
inline bool PredictionObstacle::has_perception_obstacle() const {
  return _internal_has_perception_obstacle();
}
inline const ::apollo::perception::PerceptionObstacle& PredictionObstacle::_internal_perception_obstacle() const {
  const ::apollo::perception::PerceptionObstacle* p = _impl_.perception_obstacle_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::perception::PerceptionObstacle&>(
      ::apollo::perception::_PerceptionObstacle_default_instance_);
}
inline const ::apollo::perception::PerceptionObstacle& PredictionObstacle::perception_obstacle() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.perception_obstacle)
  return _internal_perception_obstacle();
}
inline void PredictionObstacle::unsafe_arena_set_allocated_perception_obstacle(
    ::apollo::perception::PerceptionObstacle* perception_obstacle) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.perception_obstacle_);
  }
  _impl_.perception_obstacle_ = perception_obstacle;
  if (perception_obstacle) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.prediction.PredictionObstacle.perception_obstacle)
}
inline ::apollo::perception::PerceptionObstacle* PredictionObstacle::release_perception_obstacle() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::perception::PerceptionObstacle* temp = _impl_.perception_obstacle_;
  _impl_.perception_obstacle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::perception::PerceptionObstacle* PredictionObstacle::unsafe_arena_release_perception_obstacle() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionObstacle.perception_obstacle)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::perception::PerceptionObstacle* temp = _impl_.perception_obstacle_;
  _impl_.perception_obstacle_ = nullptr;
  return temp;
}
inline ::apollo::perception::PerceptionObstacle* PredictionObstacle::_internal_mutable_perception_obstacle() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.perception_obstacle_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::PerceptionObstacle>(GetArenaForAllocation());
    _impl_.perception_obstacle_ = p;
  }
  return _impl_.perception_obstacle_;
}
inline ::apollo::perception::PerceptionObstacle* PredictionObstacle::mutable_perception_obstacle() {
  ::apollo::perception::PerceptionObstacle* _msg = _internal_mutable_perception_obstacle();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacle.perception_obstacle)
  return _msg;
}
inline void PredictionObstacle::set_allocated_perception_obstacle(::apollo::perception::PerceptionObstacle* perception_obstacle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.perception_obstacle_);
  }
  if (perception_obstacle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(perception_obstacle));
    if (message_arena != submessage_arena) {
      perception_obstacle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, perception_obstacle, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.perception_obstacle_ = perception_obstacle;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionObstacle.perception_obstacle)
}

// optional double timestamp = 2;
inline bool PredictionObstacle::_internal_has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PredictionObstacle::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void PredictionObstacle::clear_timestamp() {
  _impl_.timestamp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double PredictionObstacle::_internal_timestamp() const {
  return _impl_.timestamp_;
}
inline double PredictionObstacle::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.timestamp)
  return _internal_timestamp();
}
inline void PredictionObstacle::_internal_set_timestamp(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.timestamp_ = value;
}
inline void PredictionObstacle::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacle.timestamp)
}

// optional double predicted_period = 3;
inline bool PredictionObstacle::_internal_has_predicted_period() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PredictionObstacle::has_predicted_period() const {
  return _internal_has_predicted_period();
}
inline void PredictionObstacle::clear_predicted_period() {
  _impl_.predicted_period_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double PredictionObstacle::_internal_predicted_period() const {
  return _impl_.predicted_period_;
}
inline double PredictionObstacle::predicted_period() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.predicted_period)
  return _internal_predicted_period();
}
inline void PredictionObstacle::_internal_set_predicted_period(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.predicted_period_ = value;
}
inline void PredictionObstacle::set_predicted_period(double value) {
  _internal_set_predicted_period(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacle.predicted_period)
}

// repeated .apollo.prediction.Trajectory trajectory = 4;
inline int PredictionObstacle::_internal_trajectory_size() const {
  return _impl_.trajectory_.size();
}
inline int PredictionObstacle::trajectory_size() const {
  return _internal_trajectory_size();
}
inline void PredictionObstacle::clear_trajectory() {
  _impl_.trajectory_.Clear();
}
inline ::apollo::prediction::Trajectory* PredictionObstacle::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacle.trajectory)
  return _impl_.trajectory_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >*
PredictionObstacle::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionObstacle.trajectory)
  return &_impl_.trajectory_;
}
inline const ::apollo::prediction::Trajectory& PredictionObstacle::_internal_trajectory(int index) const {
  return _impl_.trajectory_.Get(index);
}
inline const ::apollo::prediction::Trajectory& PredictionObstacle::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.trajectory)
  return _internal_trajectory(index);
}
inline ::apollo::prediction::Trajectory* PredictionObstacle::_internal_add_trajectory() {
  return _impl_.trajectory_.Add();
}
inline ::apollo::prediction::Trajectory* PredictionObstacle::add_trajectory() {
  ::apollo::prediction::Trajectory* _add = _internal_add_trajectory();
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionObstacle.trajectory)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >&
PredictionObstacle::trajectory() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionObstacle.trajectory)
  return _impl_.trajectory_;
}

// -------------------------------------------------------------------

// PredictionObstacles

// optional .apollo.common.Header header = 1;
inline bool PredictionObstacles::_internal_has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline bool PredictionObstacles::has_header() const {
  return _internal_has_header();
}
inline const ::apollo::common::Header& PredictionObstacles::_internal_header() const {
  const ::apollo::common::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::common::Header&>(
      ::apollo::common::_Header_default_instance_);
}
inline const ::apollo::common::Header& PredictionObstacles::header() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.header)
  return _internal_header();
}
inline void PredictionObstacles::unsafe_arena_set_allocated_header(
    ::apollo::common::Header* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = header;
  if (header) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.prediction.PredictionObstacles.header)
}
inline ::apollo::common::Header* PredictionObstacles::release_header() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::common::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::common::Header* PredictionObstacles::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionObstacles.header)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::common::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::apollo::common::Header* PredictionObstacles::_internal_mutable_header() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::common::Header>(GetArenaForAllocation());
    _impl_.header_ = p;
  }
  return _impl_.header_;
}
inline ::apollo::common::Header* PredictionObstacles::mutable_header() {
  ::apollo::common::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacles.header)
  return _msg;
}
inline void PredictionObstacles::set_allocated_header(::apollo::common::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.header_ = header;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionObstacles.header)
}

// repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
inline int PredictionObstacles::_internal_prediction_obstacle_size() const {
  return _impl_.prediction_obstacle_.size();
}
inline int PredictionObstacles::prediction_obstacle_size() const {
  return _internal_prediction_obstacle_size();
}
inline void PredictionObstacles::clear_prediction_obstacle() {
  _impl_.prediction_obstacle_.Clear();
}
inline ::apollo::prediction::PredictionObstacle* PredictionObstacles::mutable_prediction_obstacle(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return _impl_.prediction_obstacle_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >*
PredictionObstacles::mutable_prediction_obstacle() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return &_impl_.prediction_obstacle_;
}
inline const ::apollo::prediction::PredictionObstacle& PredictionObstacles::_internal_prediction_obstacle(int index) const {
  return _impl_.prediction_obstacle_.Get(index);
}
inline const ::apollo::prediction::PredictionObstacle& PredictionObstacles::prediction_obstacle(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return _internal_prediction_obstacle(index);
}
inline ::apollo::prediction::PredictionObstacle* PredictionObstacles::_internal_add_prediction_obstacle() {
  return _impl_.prediction_obstacle_.Add();
}
inline ::apollo::prediction::PredictionObstacle* PredictionObstacles::add_prediction_obstacle() {
  ::apollo::prediction::PredictionObstacle* _add = _internal_add_prediction_obstacle();
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >&
PredictionObstacles::prediction_obstacle() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return _impl_.prediction_obstacle_;
}

// optional .apollo.common.ErrorCode perception_error_code = 3;
inline bool PredictionObstacles::_internal_has_perception_error_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PredictionObstacles::has_perception_error_code() const {
  return _internal_has_perception_error_code();
}
inline void PredictionObstacles::clear_perception_error_code() {
  _impl_.perception_error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::apollo::common::ErrorCode PredictionObstacles::_internal_perception_error_code() const {
  return static_cast< ::apollo::common::ErrorCode >(_impl_.perception_error_code_);
}
inline ::apollo::common::ErrorCode PredictionObstacles::perception_error_code() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.perception_error_code)
  return _internal_perception_error_code();
}
inline void PredictionObstacles::_internal_set_perception_error_code(::apollo::common::ErrorCode value) {
  assert(::apollo::common::ErrorCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.perception_error_code_ = value;
}
inline void PredictionObstacles::set_perception_error_code(::apollo::common::ErrorCode value) {
  _internal_set_perception_error_code(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacles.perception_error_code)
}

// optional double start_timestamp = 4;
inline bool PredictionObstacles::_internal_has_start_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PredictionObstacles::has_start_timestamp() const {
  return _internal_has_start_timestamp();
}
inline void PredictionObstacles::clear_start_timestamp() {
  _impl_.start_timestamp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double PredictionObstacles::_internal_start_timestamp() const {
  return _impl_.start_timestamp_;
}
inline double PredictionObstacles::start_timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.start_timestamp)
  return _internal_start_timestamp();
}
inline void PredictionObstacles::_internal_set_start_timestamp(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.start_timestamp_ = value;
}
inline void PredictionObstacles::set_start_timestamp(double value) {
  _internal_set_start_timestamp(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacles.start_timestamp)
}

// optional double end_timestamp = 5;
inline bool PredictionObstacles::_internal_has_end_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PredictionObstacles::has_end_timestamp() const {
  return _internal_has_end_timestamp();
}
inline void PredictionObstacles::clear_end_timestamp() {
  _impl_.end_timestamp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double PredictionObstacles::_internal_end_timestamp() const {
  return _impl_.end_timestamp_;
}
inline double PredictionObstacles::end_timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.end_timestamp)
  return _internal_end_timestamp();
}
inline void PredictionObstacles::_internal_set_end_timestamp(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.end_timestamp_ = value;
}
inline void PredictionObstacles::set_end_timestamp(double value) {
  _internal_set_end_timestamp(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacles.end_timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fprediction_5fobstacle_2eproto
