// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/fnn_vehicle_model.proto

#include "modules/prediction/proto/fnn_vehicle_model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace prediction {
PROTOBUF_CONSTEXPR FnnVehicleModel::FnnVehicleModel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.layer_)*/{}
  , /*decltype(_impl_.samples_mean_)*/nullptr
  , /*decltype(_impl_.samples_std_)*/nullptr
  , /*decltype(_impl_.dim_input_)*/0
  , /*decltype(_impl_.num_layer_)*/0
  , /*decltype(_impl_.dim_output_)*/0} {}
struct FnnVehicleModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FnnVehicleModelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FnnVehicleModelDefaultTypeInternal() {}
  union {
    FnnVehicleModel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FnnVehicleModelDefaultTypeInternal _FnnVehicleModel_default_instance_;
}  // namespace prediction
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto = nullptr;

const uint32_t TableStruct_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_.dim_input_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_.samples_mean_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_.samples_std_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_.num_layer_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_.layer_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::FnnVehicleModel, _impl_.dim_output_),
  2,
  0,
  1,
  3,
  ~0u,
  4,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, -1, sizeof(::apollo::prediction::FnnVehicleModel)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::prediction::_FnnVehicleModel_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n0modules/prediction/proto/fnn_vehicle_m"
  "odel.proto\022\021apollo.prediction\032-modules/p"
  "rediction/proto/fnn_model_base.proto\"\325\001\n"
  "\017FnnVehicleModel\022\021\n\tdim_input\030\001 \001(\005\022/\n\014s"
  "amples_mean\030\002 \001(\0132\031.apollo.prediction.Ve"
  "ctor\022.\n\013samples_std\030\003 \001(\0132\031.apollo.predi"
  "ction.Vector\022\021\n\tnum_layer\030\004 \001(\005\022\'\n\005layer"
  "\030\005 \003(\0132\030.apollo.prediction.Layer\022\022\n\ndim_"
  "output\030\006 \001(\005"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_deps[1] = {
  &::descriptor_table_modules_2fprediction_2fproto_2ffnn_5fmodel_5fbase_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto = {
    false, false, 332, descriptor_table_protodef_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto,
    "modules/prediction/proto/fnn_vehicle_model.proto",
    &descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_once, descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto::offsets,
    file_level_metadata_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto, file_level_enum_descriptors_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto,
    file_level_service_descriptors_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_getter() {
  return &descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto(&descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto);
namespace apollo {
namespace prediction {

// ===================================================================

class FnnVehicleModel::_Internal {
 public:
  using HasBits = decltype(std::declval<FnnVehicleModel>()._impl_._has_bits_);
  static void set_has_dim_input(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::prediction::Vector& samples_mean(const FnnVehicleModel* msg);
  static void set_has_samples_mean(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::prediction::Vector& samples_std(const FnnVehicleModel* msg);
  static void set_has_samples_std(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_layer(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dim_output(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::apollo::prediction::Vector&
FnnVehicleModel::_Internal::samples_mean(const FnnVehicleModel* msg) {
  return *msg->_impl_.samples_mean_;
}
const ::apollo::prediction::Vector&
FnnVehicleModel::_Internal::samples_std(const FnnVehicleModel* msg) {
  return *msg->_impl_.samples_std_;
}
void FnnVehicleModel::clear_samples_mean() {
  if (_impl_.samples_mean_ != nullptr) _impl_.samples_mean_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void FnnVehicleModel::clear_samples_std() {
  if (_impl_.samples_std_ != nullptr) _impl_.samples_std_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void FnnVehicleModel::clear_layer() {
  _impl_.layer_.Clear();
}
FnnVehicleModel::FnnVehicleModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.prediction.FnnVehicleModel)
}
FnnVehicleModel::FnnVehicleModel(const FnnVehicleModel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.layer_){from._impl_.layer_}
    , decltype(_impl_.samples_mean_){nullptr}
    , decltype(_impl_.samples_std_){nullptr}
    , decltype(_impl_.dim_input_){}
    , decltype(_impl_.num_layer_){}
    , decltype(_impl_.dim_output_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_samples_mean()) {
    _impl_.samples_mean_ = new ::apollo::prediction::Vector(*from._impl_.samples_mean_);
  }
  if (from._internal_has_samples_std()) {
    _impl_.samples_std_ = new ::apollo::prediction::Vector(*from._impl_.samples_std_);
  }
  ::memcpy(&_impl_.dim_input_, &from._impl_.dim_input_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dim_output_) -
    reinterpret_cast<char*>(&_impl_.dim_input_)) + sizeof(_impl_.dim_output_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.FnnVehicleModel)
}

inline void FnnVehicleModel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.layer_){arena}
    , decltype(_impl_.samples_mean_){nullptr}
    , decltype(_impl_.samples_std_){nullptr}
    , decltype(_impl_.dim_input_){0}
    , decltype(_impl_.num_layer_){0}
    , decltype(_impl_.dim_output_){0}
  };
}

FnnVehicleModel::~FnnVehicleModel() {
  // @@protoc_insertion_point(destructor:apollo.prediction.FnnVehicleModel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FnnVehicleModel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.layer_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.samples_mean_;
  if (this != internal_default_instance()) delete _impl_.samples_std_;
}

void FnnVehicleModel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FnnVehicleModel::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.FnnVehicleModel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layer_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.samples_mean_ != nullptr);
      _impl_.samples_mean_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.samples_std_ != nullptr);
      _impl_.samples_std_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.dim_input_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.dim_output_) -
        reinterpret_cast<char*>(&_impl_.dim_input_)) + sizeof(_impl_.dim_output_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FnnVehicleModel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 dim_input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_dim_input(&has_bits);
          _impl_.dim_input_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.Vector samples_mean = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_samples_mean(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.Vector samples_std = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_samples_std(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 num_layer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_num_layer(&has_bits);
          _impl_.num_layer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.prediction.Layer layer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_layer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional int32 dim_output = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_dim_output(&has_bits);
          _impl_.dim_output_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FnnVehicleModel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.FnnVehicleModel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 dim_input = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_dim_input(), target);
  }

  // optional .apollo.prediction.Vector samples_mean = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::samples_mean(this),
        _Internal::samples_mean(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.prediction.Vector samples_std = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::samples_std(this),
        _Internal::samples_std(this).GetCachedSize(), target, stream);
  }

  // optional int32 num_layer = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_num_layer(), target);
  }

  // repeated .apollo.prediction.Layer layer = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layer_size()); i < n; i++) {
    const auto& repfield = this->_internal_layer(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 dim_output = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_dim_output(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.FnnVehicleModel)
  return target;
}

size_t FnnVehicleModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.FnnVehicleModel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.prediction.Layer layer = 5;
  total_size += 1UL * this->_internal_layer_size();
  for (const auto& msg : this->_impl_.layer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .apollo.prediction.Vector samples_mean = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.samples_mean_);
    }

    // optional .apollo.prediction.Vector samples_std = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.samples_std_);
    }

    // optional int32 dim_input = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_dim_input());
    }

    // optional int32 num_layer = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_layer());
    }

    // optional int32 dim_output = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_dim_output());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FnnVehicleModel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FnnVehicleModel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FnnVehicleModel::GetClassData() const { return &_class_data_; }

void FnnVehicleModel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FnnVehicleModel *>(to)->MergeFrom(
      static_cast<const FnnVehicleModel &>(from));
}


void FnnVehicleModel::MergeFrom(const FnnVehicleModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.FnnVehicleModel)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.layer_.MergeFrom(from._impl_.layer_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_samples_mean()->::apollo::prediction::Vector::MergeFrom(from._internal_samples_mean());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_samples_std()->::apollo::prediction::Vector::MergeFrom(from._internal_samples_std());
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.dim_input_ = from._impl_.dim_input_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.num_layer_ = from._impl_.num_layer_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.dim_output_ = from._impl_.dim_output_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FnnVehicleModel::CopyFrom(const FnnVehicleModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.FnnVehicleModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FnnVehicleModel::IsInitialized() const {
  return true;
}

void FnnVehicleModel::InternalSwap(FnnVehicleModel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.layer_.InternalSwap(&other->_impl_.layer_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FnnVehicleModel, _impl_.dim_output_)
      + sizeof(FnnVehicleModel::_impl_.dim_output_)
      - PROTOBUF_FIELD_OFFSET(FnnVehicleModel, _impl_.samples_mean_)>(
          reinterpret_cast<char*>(&_impl_.samples_mean_),
          reinterpret_cast<char*>(&other->_impl_.samples_mean_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FnnVehicleModel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_getter, &descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto_once,
      file_level_metadata_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::prediction::FnnVehicleModel*
Arena::CreateMaybeMessage< ::apollo::prediction::FnnVehicleModel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::prediction::FnnVehicleModel >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
