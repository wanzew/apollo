// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_point.proto

#include "modules/prediction/proto/prediction_point.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace prediction {
PROTOBUF_CONSTEXPR PredictionPathPoint::PredictionPathPoint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.velocity_heading_)*/0} {}
struct PredictionPathPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictionPathPointDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictionPathPointDefaultTypeInternal() {}
  union {
    PredictionPathPoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictionPathPointDefaultTypeInternal _PredictionPathPoint_default_instance_;
PROTOBUF_CONSTEXPR PredictionTrajectoryPoint::PredictionTrajectoryPoint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.path_point_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/0} {}
struct PredictionTrajectoryPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictionTrajectoryPointDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictionTrajectoryPointDefaultTypeInternal() {}
  union {
    PredictionTrajectoryPoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictionTrajectoryPointDefaultTypeInternal _PredictionTrajectoryPoint_default_instance_;
}  // namespace prediction
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = nullptr;

const uint32_t TableStruct_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _impl_.velocity_heading_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, _impl_.path_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, _impl_.timestamp_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::apollo::prediction::PredictionPathPoint)},
  { 12, 20, -1, sizeof(::apollo::prediction::PredictionTrajectoryPoint)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::prediction::_PredictionPathPoint_default_instance_._instance,
  &::apollo::prediction::_PredictionTrajectoryPoint_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/modules/prediction/proto/prediction_po"
  "int.proto\022\021apollo.prediction\"E\n\023Predicti"
  "onPathPoint\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\030\n\020vel"
  "ocity_heading\030\003 \001(\001\"j\n\031PredictionTraject"
  "oryPoint\022:\n\npath_point\030\001 \002(\0132&.apollo.pr"
  "ediction.PredictionPathPoint\022\021\n\ttimestam"
  "p\030\002 \002(\001"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = {
    false, false, 247, descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto,
    "modules/prediction/proto/prediction_point.proto",
    &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto::offsets,
    file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto, file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto,
    file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_getter() {
  return &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto);
namespace apollo {
namespace prediction {

// ===================================================================

class PredictionPathPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<PredictionPathPoint>()._impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_velocity_heading(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PredictionPathPoint::PredictionPathPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.prediction.PredictionPathPoint)
}
PredictionPathPoint::PredictionPathPoint(const PredictionPathPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.velocity_heading_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.velocity_heading_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.velocity_heading_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionPathPoint)
}

inline void PredictionPathPoint::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.velocity_heading_){0}
  };
}

PredictionPathPoint::~PredictionPathPoint() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionPathPoint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PredictionPathPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PredictionPathPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PredictionPathPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionPathPoint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.velocity_heading_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.velocity_heading_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionPathPoint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_x(&has_bits);
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // required double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_y(&has_bits);
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double velocity_heading = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_velocity_heading(&has_bits);
          _impl_.velocity_heading_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PredictionPathPoint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionPathPoint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // optional double velocity_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_velocity_heading(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionPathPoint)
  return target;
}

size_t PredictionPathPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.prediction.PredictionPathPoint)
  size_t total_size = 0;

  if (_internal_has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (_internal_has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t PredictionPathPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionPathPoint)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double velocity_heading = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PredictionPathPoint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PredictionPathPoint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PredictionPathPoint::GetClassData() const { return &_class_data_; }

void PredictionPathPoint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PredictionPathPoint *>(to)->MergeFrom(
      static_cast<const PredictionPathPoint &>(from));
}


void PredictionPathPoint::MergeFrom(const PredictionPathPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionPathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.velocity_heading_ = from._impl_.velocity_heading_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PredictionPathPoint::CopyFrom(const PredictionPathPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionPathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionPathPoint::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void PredictionPathPoint::InternalSwap(PredictionPathPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictionPathPoint, _impl_.velocity_heading_)
      + sizeof(PredictionPathPoint::_impl_.velocity_heading_)
      - PROTOBUF_FIELD_OFFSET(PredictionPathPoint, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionPathPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_getter, &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_once,
      file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto[0]);
}

// ===================================================================

class PredictionTrajectoryPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<PredictionTrajectoryPoint>()._impl_._has_bits_);
  static const ::apollo::prediction::PredictionPathPoint& path_point(const PredictionTrajectoryPoint* msg);
  static void set_has_path_point(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::apollo::prediction::PredictionPathPoint&
PredictionTrajectoryPoint::_Internal::path_point(const PredictionTrajectoryPoint* msg) {
  return *msg->_impl_.path_point_;
}
PredictionTrajectoryPoint::PredictionTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.prediction.PredictionTrajectoryPoint)
}
PredictionTrajectoryPoint::PredictionTrajectoryPoint(const PredictionTrajectoryPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.path_point_){nullptr}
    , decltype(_impl_.timestamp_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path_point()) {
    _impl_.path_point_ = new ::apollo::prediction::PredictionPathPoint(*from._impl_.path_point_);
  }
  _impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionTrajectoryPoint)
}

inline void PredictionTrajectoryPoint::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.path_point_){nullptr}
    , decltype(_impl_.timestamp_){0}
  };
}

PredictionTrajectoryPoint::~PredictionTrajectoryPoint() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionTrajectoryPoint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PredictionTrajectoryPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.path_point_;
}

void PredictionTrajectoryPoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PredictionTrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionTrajectoryPoint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.path_point_ != nullptr);
    _impl_.path_point_->Clear();
  }
  _impl_.timestamp_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionTrajectoryPoint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .apollo.prediction.PredictionPathPoint path_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path_point(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required double timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_timestamp(&has_bits);
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PredictionTrajectoryPoint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionTrajectoryPoint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .apollo.prediction.PredictionPathPoint path_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::path_point(this),
        _Internal::path_point(this).GetCachedSize(), target, stream);
  }

  // required double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionTrajectoryPoint)
  return target;
}

size_t PredictionTrajectoryPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.prediction.PredictionTrajectoryPoint)
  size_t total_size = 0;

  if (_internal_has_path_point()) {
    // required .apollo.prediction.PredictionPathPoint path_point = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.path_point_);
  }

  if (_internal_has_timestamp()) {
    // required double timestamp = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t PredictionTrajectoryPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionTrajectoryPoint)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .apollo.prediction.PredictionPathPoint path_point = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.path_point_);

    // required double timestamp = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PredictionTrajectoryPoint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PredictionTrajectoryPoint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PredictionTrajectoryPoint::GetClassData() const { return &_class_data_; }

void PredictionTrajectoryPoint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PredictionTrajectoryPoint *>(to)->MergeFrom(
      static_cast<const PredictionTrajectoryPoint &>(from));
}


void PredictionTrajectoryPoint::MergeFrom(const PredictionTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_path_point()->::apollo::prediction::PredictionPathPoint::MergeFrom(from._internal_path_point());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.timestamp_ = from._impl_.timestamp_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PredictionTrajectoryPoint::CopyFrom(const PredictionTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionTrajectoryPoint::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_path_point()) {
    if (!_impl_.path_point_->IsInitialized()) return false;
  }
  return true;
}

void PredictionTrajectoryPoint::InternalSwap(PredictionTrajectoryPoint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictionTrajectoryPoint, _impl_.timestamp_)
      + sizeof(PredictionTrajectoryPoint::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PredictionTrajectoryPoint, _impl_.path_point_)>(
          reinterpret_cast<char*>(&_impl_.path_point_),
          reinterpret_cast<char*>(&other->_impl_.path_point_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionTrajectoryPoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_getter, &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_once,
      file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::prediction::PredictionPathPoint*
Arena::CreateMaybeMessage< ::apollo::prediction::PredictionPathPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::prediction::PredictionPathPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::prediction::PredictionTrajectoryPoint*
Arena::CreateMaybeMessage< ::apollo::prediction::PredictionTrajectoryPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::prediction::PredictionTrajectoryPoint >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
