// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_conf.proto

#include "modules/prediction/proto/prediction_conf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace prediction {
PROTOBUF_CONSTEXPR ObstacleConf::ObstacleConf(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.obstacle_type_)*/0
  , /*decltype(_impl_.evaluator_type_)*/0
  , /*decltype(_impl_.predictor_type_)*/0
  , /*decltype(_impl_.interactive_tag_)*/1
  , /*decltype(_impl_.obstacle_status_)*/3
  , /*decltype(_impl_.priority_type_)*/1} {}
struct ObstacleConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObstacleConfDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObstacleConfDefaultTypeInternal() {}
  union {
    ObstacleConf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObstacleConfDefaultTypeInternal _ObstacleConf_default_instance_;
PROTOBUF_CONSTEXPR TopicConf::TopicConf(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.adccontainer_topic_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.container_topic_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.evaluator_topic_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.localization_topic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.perception_obstacle_topic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.perception_obstacles_topic_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.planning_trajectory_topic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.prediction_topic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.storytelling_topic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct TopicConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicConfDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicConfDefaultTypeInternal() {}
  union {
    TopicConf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicConfDefaultTypeInternal _TopicConf_default_instance_;
PROTOBUF_CONSTEXPR PredictionConf::PredictionConf(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.obstacle_conf_)*/{}
  , /*decltype(_impl_.topic_conf_)*/nullptr} {}
struct PredictionConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictionConfDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictionConfDefaultTypeInternal() {}
  union {
    PredictionConf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictionConfDefaultTypeInternal _PredictionConf_default_instance_;
}  // namespace prediction
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto = nullptr;

const uint32_t TableStruct_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_.obstacle_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_.obstacle_status_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_.priority_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_.interactive_tag_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_.evaluator_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::ObstacleConf, _impl_.predictor_type_),
  0,
  4,
  5,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.adccontainer_topic_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.container_topic_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.evaluator_topic_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.localization_topic_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.perception_obstacle_topic_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.perception_obstacles_topic_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.planning_trajectory_topic_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.prediction_topic_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TopicConf, _impl_.storytelling_topic_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionConf, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionConf, _impl_.topic_conf_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionConf, _impl_.obstacle_conf_),
  0,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, -1, sizeof(::apollo::prediction::ObstacleConf)},
  { 18, 33, -1, sizeof(::apollo::prediction::TopicConf)},
  { 42, 50, -1, sizeof(::apollo::prediction::PredictionConf)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::prediction::_ObstacleConf_default_instance_._instance,
  &::apollo::prediction::_TopicConf_default_instance_._instance,
  &::apollo::prediction::_PredictionConf_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.modules/prediction/proto/prediction_co"
  "nf.proto\022\021apollo.prediction\0322modules/per"
  "ception/proto/perception_obstacle.proto\032"
  "&modules/prediction/proto/feature.proto\""
  "\256\t\n\014ObstacleConf\022A\n\robstacle_type\030\001 \001(\0162"
  "*.apollo.perception.PerceptionObstacle.T"
  "ype\022S\n\017obstacle_status\030\002 \001(\0162..apollo.pr"
  "ediction.ObstacleConf.ObstacleStatus:\nST"
  "ATIONARY\022C\n\rpriority_type\030\005 \001(\0162,.apollo"
  ".prediction.ObstaclePriority.Priority\022Q\n"
  "\017interactive_tag\030\006 \001(\01628.apollo.predicti"
  "on.ObstacleInteractiveTag.InteractiveTag"
  "\022E\n\016evaluator_type\030\003 \001(\0162-.apollo.predic"
  "tion.ObstacleConf.EvaluatorType\022E\n\016predi"
  "ctor_type\030\004 \001(\0162-.apollo.prediction.Obst"
  "acleConf.PredictorType\"X\n\016ObstacleStatus"
  "\022\013\n\007ON_LANE\020\000\022\014\n\010OFF_LANE\020\001\022\016\n\nSTATIONAR"
  "Y\020\003\022\n\n\006MOVING\020\004\022\017\n\013IN_JUNCTION\020\005\"\204\003\n\rEva"
  "luatorType\022\021\n\rMLP_EVALUATOR\020\000\022\025\n\rRNN_EVA"
  "LUATOR\020\001\032\002\010\001\022\022\n\016COST_EVALUATOR\020\002\022\030\n\024CRUI"
  "SE_MLP_EVALUATOR\020\003\022\032\n\026JUNCTION_MLP_EVALU"
  "ATOR\020\004\022\037\n\033CYCLIST_KEEP_LANE_EVALUATOR\020\005\022"
  "\033\n\027LANE_SCANNING_EVALUATOR\020\006\022$\n PEDESTRI"
  "AN_INTERACTION_EVALUATOR\020\007\022\032\n\026JUNCTION_M"
  "AP_EVALUATOR\020\010\022\036\n\032LANE_AGGREGATING_EVALU"
  "ATOR\020\t\022\033\n\027SEMANTIC_LSTM_EVALUATOR\020\n\022)\n%J"
  "OINTLY_PREDICTION_PLANNING_EVALUATOR\020\013\022\027"
  "\n\023VECTORNET_EVALUATOR\020\014\"\376\001\n\rPredictorTyp"
  "e\022\033\n\027LANE_SEQUENCE_PREDICTOR\020\000\022\027\n\023FREE_M"
  "OVE_PREDICTOR\020\001\022\032\n\022REGIONAL_PREDICTOR\020\002\032"
  "\002\010\001\022\033\n\027MOVE_SEQUENCE_PREDICTOR\020\003\022\023\n\017EMPT"
  "Y_PREDICTOR\020\004\022\031\n\025SINGLE_LANE_PREDICTOR\020\005"
  "\022\026\n\022JUNCTION_PREDICTOR\020\006\022\033\n\027EXTRAPOLATIO"
  "N_PREDICTOR\020\007\022\031\n\025INTERACTION_PREDICTOR\020\010"
  "\"\251\002\n\tTopicConf\022\037\n\027adccontainer_topic_nam"
  "e\030\001 \001(\t\022\034\n\024container_topic_name\030\002 \001(\t\022\034\n"
  "\024evaluator_topic_name\030\003 \001(\t\022\032\n\022localizat"
  "ion_topic\030\004 \001(\t\022!\n\031perception_obstacle_t"
  "opic\030\005 \001(\t\022\'\n\037perception_obstacles_topic"
  "_name\030\006 \001(\t\022!\n\031planning_trajectory_topic"
  "\030\007 \001(\t\022\030\n\020prediction_topic\030\010 \001(\t\022\032\n\022stor"
  "ytelling_topic\030\t \001(\t\"z\n\016PredictionConf\0220"
  "\n\ntopic_conf\030\001 \001(\0132\034.apollo.prediction.T"
  "opicConf\0226\n\robstacle_conf\030\002 \003(\0132\037.apollo"
  ".prediction.ObstacleConf"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_deps[2] = {
  &::descriptor_table_modules_2fperception_2fproto_2fperception_5fobstacle_2eproto,
  &::descriptor_table_modules_2fprediction_2fproto_2ffeature_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto = {
    false, false, 1784, descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto,
    "modules/prediction/proto/prediction_conf.proto",
    &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_once, descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_deps, 2, 3,
    schemas, file_default_instances, TableStruct_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto::offsets,
    file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto, file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto,
    file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_getter() {
  return &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto);
namespace apollo {
namespace prediction {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObstacleConf_ObstacleStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto);
  return file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[0];
}
bool ObstacleConf_ObstacleStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ObstacleConf_ObstacleStatus ObstacleConf::ON_LANE;
constexpr ObstacleConf_ObstacleStatus ObstacleConf::OFF_LANE;
constexpr ObstacleConf_ObstacleStatus ObstacleConf::STATIONARY;
constexpr ObstacleConf_ObstacleStatus ObstacleConf::MOVING;
constexpr ObstacleConf_ObstacleStatus ObstacleConf::IN_JUNCTION;
constexpr ObstacleConf_ObstacleStatus ObstacleConf::ObstacleStatus_MIN;
constexpr ObstacleConf_ObstacleStatus ObstacleConf::ObstacleStatus_MAX;
constexpr int ObstacleConf::ObstacleStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObstacleConf_EvaluatorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto);
  return file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[1];
}
bool ObstacleConf_EvaluatorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ObstacleConf_EvaluatorType ObstacleConf::MLP_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::RNN_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::COST_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::CRUISE_MLP_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::JUNCTION_MLP_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::CYCLIST_KEEP_LANE_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::LANE_SCANNING_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::PEDESTRIAN_INTERACTION_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::JUNCTION_MAP_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::LANE_AGGREGATING_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::SEMANTIC_LSTM_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::JOINTLY_PREDICTION_PLANNING_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::VECTORNET_EVALUATOR;
constexpr ObstacleConf_EvaluatorType ObstacleConf::EvaluatorType_MIN;
constexpr ObstacleConf_EvaluatorType ObstacleConf::EvaluatorType_MAX;
constexpr int ObstacleConf::EvaluatorType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObstacleConf_PredictorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto);
  return file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[2];
}
bool ObstacleConf_PredictorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ObstacleConf_PredictorType ObstacleConf::LANE_SEQUENCE_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::FREE_MOVE_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::REGIONAL_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::MOVE_SEQUENCE_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::EMPTY_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::SINGLE_LANE_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::JUNCTION_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::EXTRAPOLATION_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::INTERACTION_PREDICTOR;
constexpr ObstacleConf_PredictorType ObstacleConf::PredictorType_MIN;
constexpr ObstacleConf_PredictorType ObstacleConf::PredictorType_MAX;
constexpr int ObstacleConf::PredictorType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ObstacleConf::_Internal {
 public:
  using HasBits = decltype(std::declval<ObstacleConf>()._impl_._has_bits_);
  static void set_has_obstacle_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_obstacle_status(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_priority_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_interactive_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_evaluator_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_predictor_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ObstacleConf::ObstacleConf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.prediction.ObstacleConf)
}
ObstacleConf::ObstacleConf(const ObstacleConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.obstacle_type_){}
    , decltype(_impl_.evaluator_type_){}
    , decltype(_impl_.predictor_type_){}
    , decltype(_impl_.interactive_tag_){}
    , decltype(_impl_.obstacle_status_){}
    , decltype(_impl_.priority_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.obstacle_type_, &from._impl_.obstacle_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.priority_type_) -
    reinterpret_cast<char*>(&_impl_.obstacle_type_)) + sizeof(_impl_.priority_type_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ObstacleConf)
}

inline void ObstacleConf::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.obstacle_type_){0}
    , decltype(_impl_.evaluator_type_){0}
    , decltype(_impl_.predictor_type_){0}
    , decltype(_impl_.interactive_tag_){1}
    , decltype(_impl_.obstacle_status_){3}
    , decltype(_impl_.priority_type_){1}
  };
}

ObstacleConf::~ObstacleConf() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ObstacleConf)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObstacleConf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ObstacleConf::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObstacleConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ObstacleConf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.obstacle_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.predictor_type_) -
        reinterpret_cast<char*>(&_impl_.obstacle_type_)) + sizeof(_impl_.predictor_type_));
    _impl_.interactive_tag_ = 1;
    _impl_.obstacle_status_ = 3;
    _impl_.priority_type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObstacleConf::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::PerceptionObstacle_Type_IsValid(val))) {
            _internal_set_obstacle_type(static_cast<::apollo::perception::PerceptionObstacle_Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::prediction::ObstacleConf_ObstacleStatus_IsValid(val))) {
            _internal_set_obstacle_status(static_cast<::apollo::prediction::ObstacleConf_ObstacleStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::prediction::ObstacleConf_EvaluatorType_IsValid(val))) {
            _internal_set_evaluator_type(static_cast<::apollo::prediction::ObstacleConf_EvaluatorType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::prediction::ObstacleConf_PredictorType_IsValid(val))) {
            _internal_set_predictor_type(static_cast<::apollo::prediction::ObstacleConf_PredictorType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::prediction::ObstaclePriority_Priority_IsValid(val))) {
            _internal_set_priority_type(static_cast<::apollo::prediction::ObstaclePriority_Priority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::prediction::ObstacleInteractiveTag_InteractiveTag_IsValid(val))) {
            _internal_set_interactive_tag(static_cast<::apollo::prediction::ObstacleInteractiveTag_InteractiveTag>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObstacleConf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ObstacleConf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_obstacle_type(), target);
  }

  // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_obstacle_status(), target);
  }

  // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_evaluator_type(), target);
  }

  // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_predictor_type(), target);
  }

  // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_priority_type(), target);
  }

  // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_interactive_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ObstacleConf)
  return target;
}

size_t ObstacleConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ObstacleConf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .apollo.perception.PerceptionObstacle.Type obstacle_type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_obstacle_type());
    }

    // optional .apollo.prediction.ObstacleConf.EvaluatorType evaluator_type = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_evaluator_type());
    }

    // optional .apollo.prediction.ObstacleConf.PredictorType predictor_type = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_predictor_type());
    }

    // optional .apollo.prediction.ObstacleInteractiveTag.InteractiveTag interactive_tag = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_interactive_tag());
    }

    // optional .apollo.prediction.ObstacleConf.ObstacleStatus obstacle_status = 2 [default = STATIONARY];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_obstacle_status());
    }

    // optional .apollo.prediction.ObstaclePriority.Priority priority_type = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_priority_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObstacleConf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ObstacleConf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObstacleConf::GetClassData() const { return &_class_data_; }

void ObstacleConf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ObstacleConf *>(to)->MergeFrom(
      static_cast<const ObstacleConf &>(from));
}


void ObstacleConf::MergeFrom(const ObstacleConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ObstacleConf)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.obstacle_type_ = from._impl_.obstacle_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.evaluator_type_ = from._impl_.evaluator_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.predictor_type_ = from._impl_.predictor_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.interactive_tag_ = from._impl_.interactive_tag_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.obstacle_status_ = from._impl_.obstacle_status_;
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.priority_type_ = from._impl_.priority_type_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObstacleConf::CopyFrom(const ObstacleConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ObstacleConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleConf::IsInitialized() const {
  return true;
}

void ObstacleConf::InternalSwap(ObstacleConf* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObstacleConf, _impl_.predictor_type_)
      + sizeof(ObstacleConf::_impl_.predictor_type_)
      - PROTOBUF_FIELD_OFFSET(ObstacleConf, _impl_.obstacle_type_)>(
          reinterpret_cast<char*>(&_impl_.obstacle_type_),
          reinterpret_cast<char*>(&other->_impl_.obstacle_type_));
  swap(_impl_.interactive_tag_, other->_impl_.interactive_tag_);
  swap(_impl_.obstacle_status_, other->_impl_.obstacle_status_);
  swap(_impl_.priority_type_, other->_impl_.priority_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObstacleConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_getter, &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_once,
      file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[0]);
}

// ===================================================================

class TopicConf::_Internal {
 public:
  using HasBits = decltype(std::declval<TopicConf>()._impl_._has_bits_);
  static void set_has_adccontainer_topic_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_container_topic_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_evaluator_topic_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_localization_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_perception_obstacle_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_perception_obstacles_topic_name(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_planning_trajectory_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_prediction_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_storytelling_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

TopicConf::TopicConf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.prediction.TopicConf)
}
TopicConf::TopicConf(const TopicConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.adccontainer_topic_name_){}
    , decltype(_impl_.container_topic_name_){}
    , decltype(_impl_.evaluator_topic_name_){}
    , decltype(_impl_.localization_topic_){}
    , decltype(_impl_.perception_obstacle_topic_){}
    , decltype(_impl_.perception_obstacles_topic_name_){}
    , decltype(_impl_.planning_trajectory_topic_){}
    , decltype(_impl_.prediction_topic_){}
    , decltype(_impl_.storytelling_topic_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.adccontainer_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.adccontainer_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_adccontainer_topic_name()) {
    _impl_.adccontainer_topic_name_.Set(from._internal_adccontainer_topic_name(), 
      GetArenaForAllocation());
  }
  _impl_.container_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_container_topic_name()) {
    _impl_.container_topic_name_.Set(from._internal_container_topic_name(), 
      GetArenaForAllocation());
  }
  _impl_.evaluator_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.evaluator_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_evaluator_topic_name()) {
    _impl_.evaluator_topic_name_.Set(from._internal_evaluator_topic_name(), 
      GetArenaForAllocation());
  }
  _impl_.localization_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.localization_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_localization_topic()) {
    _impl_.localization_topic_.Set(from._internal_localization_topic(), 
      GetArenaForAllocation());
  }
  _impl_.perception_obstacle_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.perception_obstacle_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_perception_obstacle_topic()) {
    _impl_.perception_obstacle_topic_.Set(from._internal_perception_obstacle_topic(), 
      GetArenaForAllocation());
  }
  _impl_.perception_obstacles_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.perception_obstacles_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_perception_obstacles_topic_name()) {
    _impl_.perception_obstacles_topic_name_.Set(from._internal_perception_obstacles_topic_name(), 
      GetArenaForAllocation());
  }
  _impl_.planning_trajectory_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.planning_trajectory_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_planning_trajectory_topic()) {
    _impl_.planning_trajectory_topic_.Set(from._internal_planning_trajectory_topic(), 
      GetArenaForAllocation());
  }
  _impl_.prediction_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prediction_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_prediction_topic()) {
    _impl_.prediction_topic_.Set(from._internal_prediction_topic(), 
      GetArenaForAllocation());
  }
  _impl_.storytelling_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.storytelling_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_storytelling_topic()) {
    _impl_.storytelling_topic_.Set(from._internal_storytelling_topic(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TopicConf)
}

inline void TopicConf::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.adccontainer_topic_name_){}
    , decltype(_impl_.container_topic_name_){}
    , decltype(_impl_.evaluator_topic_name_){}
    , decltype(_impl_.localization_topic_){}
    , decltype(_impl_.perception_obstacle_topic_){}
    , decltype(_impl_.perception_obstacles_topic_name_){}
    , decltype(_impl_.planning_trajectory_topic_){}
    , decltype(_impl_.prediction_topic_){}
    , decltype(_impl_.storytelling_topic_){}
  };
  _impl_.adccontainer_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.adccontainer_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.container_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.container_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.evaluator_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.evaluator_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.localization_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.localization_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.perception_obstacle_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.perception_obstacle_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.perception_obstacles_topic_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.perception_obstacles_topic_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.planning_trajectory_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.planning_trajectory_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prediction_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prediction_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.storytelling_topic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.storytelling_topic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TopicConf::~TopicConf() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TopicConf)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TopicConf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.adccontainer_topic_name_.Destroy();
  _impl_.container_topic_name_.Destroy();
  _impl_.evaluator_topic_name_.Destroy();
  _impl_.localization_topic_.Destroy();
  _impl_.perception_obstacle_topic_.Destroy();
  _impl_.perception_obstacles_topic_name_.Destroy();
  _impl_.planning_trajectory_topic_.Destroy();
  _impl_.prediction_topic_.Destroy();
  _impl_.storytelling_topic_.Destroy();
}

void TopicConf::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TopicConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TopicConf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.adccontainer_topic_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.container_topic_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.evaluator_topic_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.localization_topic_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.perception_obstacle_topic_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.perception_obstacles_topic_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.planning_trajectory_topic_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.prediction_topic_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.storytelling_topic_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TopicConf::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string adccontainer_topic_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_adccontainer_topic_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.adccontainer_topic_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string container_topic_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_container_topic_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.container_topic_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string evaluator_topic_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_evaluator_topic_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.evaluator_topic_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string localization_topic = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_localization_topic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.localization_topic");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string perception_obstacle_topic = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_perception_obstacle_topic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.perception_obstacle_topic");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string perception_obstacles_topic_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_perception_obstacles_topic_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.perception_obstacles_topic_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string planning_trajectory_topic = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_planning_trajectory_topic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.planning_trajectory_topic");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string prediction_topic = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_prediction_topic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.prediction_topic");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string storytelling_topic = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_storytelling_topic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.prediction.TopicConf.storytelling_topic");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TopicConf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TopicConf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string adccontainer_topic_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_adccontainer_topic_name().data(), static_cast<int>(this->_internal_adccontainer_topic_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.adccontainer_topic_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_adccontainer_topic_name(), target);
  }

  // optional string container_topic_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_container_topic_name().data(), static_cast<int>(this->_internal_container_topic_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.container_topic_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_container_topic_name(), target);
  }

  // optional string evaluator_topic_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_evaluator_topic_name().data(), static_cast<int>(this->_internal_evaluator_topic_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.evaluator_topic_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_evaluator_topic_name(), target);
  }

  // optional string localization_topic = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_localization_topic().data(), static_cast<int>(this->_internal_localization_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.localization_topic");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_localization_topic(), target);
  }

  // optional string perception_obstacle_topic = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_perception_obstacle_topic().data(), static_cast<int>(this->_internal_perception_obstacle_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.perception_obstacle_topic");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_perception_obstacle_topic(), target);
  }

  // optional string perception_obstacles_topic_name = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_perception_obstacles_topic_name().data(), static_cast<int>(this->_internal_perception_obstacles_topic_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.perception_obstacles_topic_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_perception_obstacles_topic_name(), target);
  }

  // optional string planning_trajectory_topic = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_planning_trajectory_topic().data(), static_cast<int>(this->_internal_planning_trajectory_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.planning_trajectory_topic");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_planning_trajectory_topic(), target);
  }

  // optional string prediction_topic = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_prediction_topic().data(), static_cast<int>(this->_internal_prediction_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.prediction_topic");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_prediction_topic(), target);
  }

  // optional string storytelling_topic = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_storytelling_topic().data(), static_cast<int>(this->_internal_storytelling_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TopicConf.storytelling_topic");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_storytelling_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TopicConf)
  return target;
}

size_t TopicConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TopicConf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string adccontainer_topic_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_adccontainer_topic_name());
    }

    // optional string container_topic_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_container_topic_name());
    }

    // optional string evaluator_topic_name = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_evaluator_topic_name());
    }

    // optional string localization_topic = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_localization_topic());
    }

    // optional string perception_obstacle_topic = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_perception_obstacle_topic());
    }

    // optional string perception_obstacles_topic_name = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_perception_obstacles_topic_name());
    }

    // optional string planning_trajectory_topic = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_planning_trajectory_topic());
    }

    // optional string prediction_topic = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_prediction_topic());
    }

  }
  // optional string storytelling_topic = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storytelling_topic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TopicConf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TopicConf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TopicConf::GetClassData() const { return &_class_data_; }

void TopicConf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TopicConf *>(to)->MergeFrom(
      static_cast<const TopicConf &>(from));
}


void TopicConf::MergeFrom(const TopicConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TopicConf)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_adccontainer_topic_name(from._internal_adccontainer_topic_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_container_topic_name(from._internal_container_topic_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_evaluator_topic_name(from._internal_evaluator_topic_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_localization_topic(from._internal_localization_topic());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_perception_obstacle_topic(from._internal_perception_obstacle_topic());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_perception_obstacles_topic_name(from._internal_perception_obstacles_topic_name());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_planning_trajectory_topic(from._internal_planning_trajectory_topic());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_set_prediction_topic(from._internal_prediction_topic());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_storytelling_topic(from._internal_storytelling_topic());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TopicConf::CopyFrom(const TopicConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TopicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicConf::IsInitialized() const {
  return true;
}

void TopicConf::InternalSwap(TopicConf* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.adccontainer_topic_name_, lhs_arena,
      &other->_impl_.adccontainer_topic_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.container_topic_name_, lhs_arena,
      &other->_impl_.container_topic_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.evaluator_topic_name_, lhs_arena,
      &other->_impl_.evaluator_topic_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.localization_topic_, lhs_arena,
      &other->_impl_.localization_topic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.perception_obstacle_topic_, lhs_arena,
      &other->_impl_.perception_obstacle_topic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.perception_obstacles_topic_name_, lhs_arena,
      &other->_impl_.perception_obstacles_topic_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.planning_trajectory_topic_, lhs_arena,
      &other->_impl_.planning_trajectory_topic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.prediction_topic_, lhs_arena,
      &other->_impl_.prediction_topic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.storytelling_topic_, lhs_arena,
      &other->_impl_.storytelling_topic_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TopicConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_getter, &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_once,
      file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[1]);
}

// ===================================================================

class PredictionConf::_Internal {
 public:
  using HasBits = decltype(std::declval<PredictionConf>()._impl_._has_bits_);
  static const ::apollo::prediction::TopicConf& topic_conf(const PredictionConf* msg);
  static void set_has_topic_conf(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apollo::prediction::TopicConf&
PredictionConf::_Internal::topic_conf(const PredictionConf* msg) {
  return *msg->_impl_.topic_conf_;
}
PredictionConf::PredictionConf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.prediction.PredictionConf)
}
PredictionConf::PredictionConf(const PredictionConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.obstacle_conf_){from._impl_.obstacle_conf_}
    , decltype(_impl_.topic_conf_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_topic_conf()) {
    _impl_.topic_conf_ = new ::apollo::prediction::TopicConf(*from._impl_.topic_conf_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionConf)
}

inline void PredictionConf::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.obstacle_conf_){arena}
    , decltype(_impl_.topic_conf_){nullptr}
  };
}

PredictionConf::~PredictionConf() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionConf)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PredictionConf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.obstacle_conf_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.topic_conf_;
}

void PredictionConf::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PredictionConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionConf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.obstacle_conf_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.topic_conf_ != nullptr);
    _impl_.topic_conf_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionConf::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.prediction.TopicConf topic_conf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_topic_conf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_obstacle_conf(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PredictionConf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionConf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.prediction.TopicConf topic_conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::topic_conf(this),
        _Internal::topic_conf(this).GetCachedSize(), target, stream);
  }

  // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_obstacle_conf_size()); i < n; i++) {
    const auto& repfield = this->_internal_obstacle_conf(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionConf)
  return target;
}

size_t PredictionConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionConf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.prediction.ObstacleConf obstacle_conf = 2;
  total_size += 1UL * this->_internal_obstacle_conf_size();
  for (const auto& msg : this->_impl_.obstacle_conf_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .apollo.prediction.TopicConf topic_conf = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.topic_conf_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PredictionConf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PredictionConf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PredictionConf::GetClassData() const { return &_class_data_; }

void PredictionConf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PredictionConf *>(to)->MergeFrom(
      static_cast<const PredictionConf &>(from));
}


void PredictionConf::MergeFrom(const PredictionConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionConf)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.obstacle_conf_.MergeFrom(from._impl_.obstacle_conf_);
  if (from._internal_has_topic_conf()) {
    _internal_mutable_topic_conf()->::apollo::prediction::TopicConf::MergeFrom(from._internal_topic_conf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PredictionConf::CopyFrom(const PredictionConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionConf::IsInitialized() const {
  return true;
}

void PredictionConf::InternalSwap(PredictionConf* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.obstacle_conf_.InternalSwap(&other->_impl_.obstacle_conf_);
  swap(_impl_.topic_conf_, other->_impl_.topic_conf_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_getter, &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto_once,
      file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fconf_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::prediction::ObstacleConf*
Arena::CreateMaybeMessage< ::apollo::prediction::ObstacleConf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::prediction::ObstacleConf >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::prediction::TopicConf*
Arena::CreateMaybeMessage< ::apollo::prediction::TopicConf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::prediction::TopicConf >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::prediction::PredictionConf*
Arena::CreateMaybeMessage< ::apollo::prediction::PredictionConf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::prediction::PredictionConf >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
