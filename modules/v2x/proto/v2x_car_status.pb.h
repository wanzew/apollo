// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/v2x/proto/v2x_car_status.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/localization/proto/localization.pb.h"
#include "modules/canbus/proto/chassis_detail.pb.h"
#include "modules/v2x/proto/v2x_junction.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto;
namespace apollo {
namespace v2x {
class CarStatus;
struct CarStatusDefaultTypeInternal;
extern CarStatusDefaultTypeInternal _CarStatus_default_instance_;
}  // namespace v2x
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::v2x::CarStatus* Arena::CreateMaybeMessage<::apollo::v2x::CarStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace v2x {

// ===================================================================

class CarStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.v2x.CarStatus) */ {
 public:
  inline CarStatus() : CarStatus(nullptr) {}
  ~CarStatus() override;
  explicit PROTOBUF_CONSTEXPR CarStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CarStatus(const CarStatus& from);
  CarStatus(CarStatus&& from) noexcept
    : CarStatus() {
    *this = ::std::move(from);
  }

  inline CarStatus& operator=(const CarStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CarStatus& operator=(CarStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CarStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CarStatus* internal_default_instance() {
    return reinterpret_cast<const CarStatus*>(
               &_CarStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CarStatus& a, CarStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CarStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CarStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CarStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CarStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CarStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CarStatus& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CarStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.v2x.CarStatus";
  }
  protected:
  explicit CarStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocalizationFieldNumber = 1,
    kChassisDetailFieldNumber = 2,
    kJunctionFieldNumber = 3,
    kRsuIdFieldNumber = 4,
  };
  // optional .apollo.localization.LocalizationEstimate localization = 1;
  bool has_localization() const;
  private:
  bool _internal_has_localization() const;
  public:
  void clear_localization();
  const ::apollo::localization::LocalizationEstimate& localization() const;
  PROTOBUF_NODISCARD ::apollo::localization::LocalizationEstimate* release_localization();
  ::apollo::localization::LocalizationEstimate* mutable_localization();
  void set_allocated_localization(::apollo::localization::LocalizationEstimate* localization);
  private:
  const ::apollo::localization::LocalizationEstimate& _internal_localization() const;
  ::apollo::localization::LocalizationEstimate* _internal_mutable_localization();
  public:
  void unsafe_arena_set_allocated_localization(
      ::apollo::localization::LocalizationEstimate* localization);
  ::apollo::localization::LocalizationEstimate* unsafe_arena_release_localization();

  // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
  bool has_chassis_detail() const;
  private:
  bool _internal_has_chassis_detail() const;
  public:
  void clear_chassis_detail();
  const ::apollo::canbus::ChassisDetail& chassis_detail() const;
  PROTOBUF_NODISCARD ::apollo::canbus::ChassisDetail* release_chassis_detail();
  ::apollo::canbus::ChassisDetail* mutable_chassis_detail();
  void set_allocated_chassis_detail(::apollo::canbus::ChassisDetail* chassis_detail);
  private:
  const ::apollo::canbus::ChassisDetail& _internal_chassis_detail() const;
  ::apollo::canbus::ChassisDetail* _internal_mutable_chassis_detail();
  public:
  void unsafe_arena_set_allocated_chassis_detail(
      ::apollo::canbus::ChassisDetail* chassis_detail);
  ::apollo::canbus::ChassisDetail* unsafe_arena_release_chassis_detail();

  // optional .apollo.v2x.Junction junction = 3;
  bool has_junction() const;
  private:
  bool _internal_has_junction() const;
  public:
  void clear_junction();
  const ::apollo::v2x::Junction& junction() const;
  PROTOBUF_NODISCARD ::apollo::v2x::Junction* release_junction();
  ::apollo::v2x::Junction* mutable_junction();
  void set_allocated_junction(::apollo::v2x::Junction* junction);
  private:
  const ::apollo::v2x::Junction& _internal_junction() const;
  ::apollo::v2x::Junction* _internal_mutable_junction();
  public:
  void unsafe_arena_set_allocated_junction(
      ::apollo::v2x::Junction* junction);
  ::apollo::v2x::Junction* unsafe_arena_release_junction();

  // optional .apollo.v2x.Id rsu_id = 4;
  bool has_rsu_id() const;
  private:
  bool _internal_has_rsu_id() const;
  public:
  void clear_rsu_id();
  const ::apollo::v2x::Id& rsu_id() const;
  PROTOBUF_NODISCARD ::apollo::v2x::Id* release_rsu_id();
  ::apollo::v2x::Id* mutable_rsu_id();
  void set_allocated_rsu_id(::apollo::v2x::Id* rsu_id);
  private:
  const ::apollo::v2x::Id& _internal_rsu_id() const;
  ::apollo::v2x::Id* _internal_mutable_rsu_id();
  public:
  void unsafe_arena_set_allocated_rsu_id(
      ::apollo::v2x::Id* rsu_id);
  ::apollo::v2x::Id* unsafe_arena_release_rsu_id();

  // @@protoc_insertion_point(class_scope:apollo.v2x.CarStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::apollo::localization::LocalizationEstimate* localization_;
    ::apollo::canbus::ChassisDetail* chassis_detail_;
    ::apollo::v2x::Junction* junction_;
    ::apollo::v2x::Id* rsu_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CarStatus

// optional .apollo.localization.LocalizationEstimate localization = 1;
inline bool CarStatus::_internal_has_localization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.localization_ != nullptr);
  return value;
}
inline bool CarStatus::has_localization() const {
  return _internal_has_localization();
}
inline const ::apollo::localization::LocalizationEstimate& CarStatus::_internal_localization() const {
  const ::apollo::localization::LocalizationEstimate* p = _impl_.localization_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::localization::LocalizationEstimate&>(
      ::apollo::localization::_LocalizationEstimate_default_instance_);
}
inline const ::apollo::localization::LocalizationEstimate& CarStatus::localization() const {
  // @@protoc_insertion_point(field_get:apollo.v2x.CarStatus.localization)
  return _internal_localization();
}
inline void CarStatus::unsafe_arena_set_allocated_localization(
    ::apollo::localization::LocalizationEstimate* localization) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.localization_);
  }
  _impl_.localization_ = localization;
  if (localization) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.v2x.CarStatus.localization)
}
inline ::apollo::localization::LocalizationEstimate* CarStatus::release_localization() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::localization::LocalizationEstimate* temp = _impl_.localization_;
  _impl_.localization_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::localization::LocalizationEstimate* CarStatus::unsafe_arena_release_localization() {
  // @@protoc_insertion_point(field_release:apollo.v2x.CarStatus.localization)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::localization::LocalizationEstimate* temp = _impl_.localization_;
  _impl_.localization_ = nullptr;
  return temp;
}
inline ::apollo::localization::LocalizationEstimate* CarStatus::_internal_mutable_localization() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.localization_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::localization::LocalizationEstimate>(GetArenaForAllocation());
    _impl_.localization_ = p;
  }
  return _impl_.localization_;
}
inline ::apollo::localization::LocalizationEstimate* CarStatus::mutable_localization() {
  ::apollo::localization::LocalizationEstimate* _msg = _internal_mutable_localization();
  // @@protoc_insertion_point(field_mutable:apollo.v2x.CarStatus.localization)
  return _msg;
}
inline void CarStatus::set_allocated_localization(::apollo::localization::LocalizationEstimate* localization) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.localization_);
  }
  if (localization) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(localization));
    if (message_arena != submessage_arena) {
      localization = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, localization, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.localization_ = localization;
  // @@protoc_insertion_point(field_set_allocated:apollo.v2x.CarStatus.localization)
}

// optional .apollo.canbus.ChassisDetail chassis_detail = 2;
inline bool CarStatus::_internal_has_chassis_detail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chassis_detail_ != nullptr);
  return value;
}
inline bool CarStatus::has_chassis_detail() const {
  return _internal_has_chassis_detail();
}
inline const ::apollo::canbus::ChassisDetail& CarStatus::_internal_chassis_detail() const {
  const ::apollo::canbus::ChassisDetail* p = _impl_.chassis_detail_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::canbus::ChassisDetail&>(
      ::apollo::canbus::_ChassisDetail_default_instance_);
}
inline const ::apollo::canbus::ChassisDetail& CarStatus::chassis_detail() const {
  // @@protoc_insertion_point(field_get:apollo.v2x.CarStatus.chassis_detail)
  return _internal_chassis_detail();
}
inline void CarStatus::unsafe_arena_set_allocated_chassis_detail(
    ::apollo::canbus::ChassisDetail* chassis_detail) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.chassis_detail_);
  }
  _impl_.chassis_detail_ = chassis_detail;
  if (chassis_detail) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.v2x.CarStatus.chassis_detail)
}
inline ::apollo::canbus::ChassisDetail* CarStatus::release_chassis_detail() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::apollo::canbus::ChassisDetail* temp = _impl_.chassis_detail_;
  _impl_.chassis_detail_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::canbus::ChassisDetail* CarStatus::unsafe_arena_release_chassis_detail() {
  // @@protoc_insertion_point(field_release:apollo.v2x.CarStatus.chassis_detail)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::apollo::canbus::ChassisDetail* temp = _impl_.chassis_detail_;
  _impl_.chassis_detail_ = nullptr;
  return temp;
}
inline ::apollo::canbus::ChassisDetail* CarStatus::_internal_mutable_chassis_detail() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.chassis_detail_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::canbus::ChassisDetail>(GetArenaForAllocation());
    _impl_.chassis_detail_ = p;
  }
  return _impl_.chassis_detail_;
}
inline ::apollo::canbus::ChassisDetail* CarStatus::mutable_chassis_detail() {
  ::apollo::canbus::ChassisDetail* _msg = _internal_mutable_chassis_detail();
  // @@protoc_insertion_point(field_mutable:apollo.v2x.CarStatus.chassis_detail)
  return _msg;
}
inline void CarStatus::set_allocated_chassis_detail(::apollo::canbus::ChassisDetail* chassis_detail) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.chassis_detail_);
  }
  if (chassis_detail) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chassis_detail));
    if (message_arena != submessage_arena) {
      chassis_detail = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chassis_detail, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.chassis_detail_ = chassis_detail;
  // @@protoc_insertion_point(field_set_allocated:apollo.v2x.CarStatus.chassis_detail)
}

// optional .apollo.v2x.Junction junction = 3;
inline bool CarStatus::_internal_has_junction() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.junction_ != nullptr);
  return value;
}
inline bool CarStatus::has_junction() const {
  return _internal_has_junction();
}
inline const ::apollo::v2x::Junction& CarStatus::_internal_junction() const {
  const ::apollo::v2x::Junction* p = _impl_.junction_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::v2x::Junction&>(
      ::apollo::v2x::_Junction_default_instance_);
}
inline const ::apollo::v2x::Junction& CarStatus::junction() const {
  // @@protoc_insertion_point(field_get:apollo.v2x.CarStatus.junction)
  return _internal_junction();
}
inline void CarStatus::unsafe_arena_set_allocated_junction(
    ::apollo::v2x::Junction* junction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.junction_);
  }
  _impl_.junction_ = junction;
  if (junction) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.v2x.CarStatus.junction)
}
inline ::apollo::v2x::Junction* CarStatus::release_junction() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::apollo::v2x::Junction* temp = _impl_.junction_;
  _impl_.junction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::v2x::Junction* CarStatus::unsafe_arena_release_junction() {
  // @@protoc_insertion_point(field_release:apollo.v2x.CarStatus.junction)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::apollo::v2x::Junction* temp = _impl_.junction_;
  _impl_.junction_ = nullptr;
  return temp;
}
inline ::apollo::v2x::Junction* CarStatus::_internal_mutable_junction() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.junction_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::v2x::Junction>(GetArenaForAllocation());
    _impl_.junction_ = p;
  }
  return _impl_.junction_;
}
inline ::apollo::v2x::Junction* CarStatus::mutable_junction() {
  ::apollo::v2x::Junction* _msg = _internal_mutable_junction();
  // @@protoc_insertion_point(field_mutable:apollo.v2x.CarStatus.junction)
  return _msg;
}
inline void CarStatus::set_allocated_junction(::apollo::v2x::Junction* junction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.junction_);
  }
  if (junction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(junction));
    if (message_arena != submessage_arena) {
      junction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, junction, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.junction_ = junction;
  // @@protoc_insertion_point(field_set_allocated:apollo.v2x.CarStatus.junction)
}

// optional .apollo.v2x.Id rsu_id = 4;
inline bool CarStatus::_internal_has_rsu_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rsu_id_ != nullptr);
  return value;
}
inline bool CarStatus::has_rsu_id() const {
  return _internal_has_rsu_id();
}
inline const ::apollo::v2x::Id& CarStatus::_internal_rsu_id() const {
  const ::apollo::v2x::Id* p = _impl_.rsu_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::v2x::Id&>(
      ::apollo::v2x::_Id_default_instance_);
}
inline const ::apollo::v2x::Id& CarStatus::rsu_id() const {
  // @@protoc_insertion_point(field_get:apollo.v2x.CarStatus.rsu_id)
  return _internal_rsu_id();
}
inline void CarStatus::unsafe_arena_set_allocated_rsu_id(
    ::apollo::v2x::Id* rsu_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.rsu_id_);
  }
  _impl_.rsu_id_ = rsu_id;
  if (rsu_id) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.v2x.CarStatus.rsu_id)
}
inline ::apollo::v2x::Id* CarStatus::release_rsu_id() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::apollo::v2x::Id* temp = _impl_.rsu_id_;
  _impl_.rsu_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::v2x::Id* CarStatus::unsafe_arena_release_rsu_id() {
  // @@protoc_insertion_point(field_release:apollo.v2x.CarStatus.rsu_id)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::apollo::v2x::Id* temp = _impl_.rsu_id_;
  _impl_.rsu_id_ = nullptr;
  return temp;
}
inline ::apollo::v2x::Id* CarStatus::_internal_mutable_rsu_id() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.rsu_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::v2x::Id>(GetArenaForAllocation());
    _impl_.rsu_id_ = p;
  }
  return _impl_.rsu_id_;
}
inline ::apollo::v2x::Id* CarStatus::mutable_rsu_id() {
  ::apollo::v2x::Id* _msg = _internal_mutable_rsu_id();
  // @@protoc_insertion_point(field_mutable:apollo.v2x.CarStatus.rsu_id)
  return _msg;
}
inline void CarStatus::set_allocated_rsu_id(::apollo::v2x::Id* rsu_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.rsu_id_);
  }
  if (rsu_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsu_id));
    if (message_arena != submessage_arena) {
      rsu_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsu_id, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.rsu_id_ = rsu_id;
  // @@protoc_insertion_point(field_set_allocated:apollo.v2x.CarStatus.rsu_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v2x
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto
