// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/control/proto/local_view.proto

#include "modules/control/proto/local_view.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace control {
PROTOBUF_CONSTEXPR LocalView::LocalView(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.chassis_)*/nullptr
  , /*decltype(_impl_.trajectory_)*/nullptr
  , /*decltype(_impl_.localization_)*/nullptr
  , /*decltype(_impl_.pad_msg_)*/nullptr} {}
struct LocalViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalViewDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalViewDefaultTypeInternal() {}
  union {
    LocalView _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalViewDefaultTypeInternal _LocalView_default_instance_;
}  // namespace control
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fcontrol_2fproto_2flocal_5fview_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fcontrol_2fproto_2flocal_5fview_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fcontrol_2fproto_2flocal_5fview_2eproto = nullptr;

const uint32_t TableStruct_modules_2fcontrol_2fproto_2flocal_5fview_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _impl_.chassis_),
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _impl_.trajectory_),
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _impl_.localization_),
  PROTOBUF_FIELD_OFFSET(::apollo::control::LocalView, _impl_.pad_msg_),
  0,
  1,
  2,
  3,
  4,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, -1, sizeof(::apollo::control::LocalView)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::control::_LocalView_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fcontrol_2fproto_2flocal_5fview_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&modules/control/proto/local_view.proto"
  "\022\016apollo.control\032\"modules/canbus/proto/c"
  "hassis.proto\032!modules/common/proto/heade"
  "r.proto\032#modules/control/proto/pad_msg.p"
  "roto\032-modules/localization/proto/localiz"
  "ation.proto\032%modules/planning/proto/plan"
  "ning.proto\"\375\001\n\tLocalView\022%\n\006header\030\001 \001(\013"
  "2\025.apollo.common.Header\022\'\n\007chassis\030\002 \001(\013"
  "2\026.apollo.canbus.Chassis\0222\n\ntrajectory\030\003"
  " \001(\0132\036.apollo.planning.ADCTrajectory\022\?\n\014"
  "localization\030\004 \001(\0132).apollo.localization"
  ".LocalizationEstimate\022+\n\007pad_msg\030\005 \001(\0132\032"
  ".apollo.control.PadMessage"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_deps[5] = {
  &::descriptor_table_modules_2fcanbus_2fproto_2fchassis_2eproto,
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
  &::descriptor_table_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto,
  &::descriptor_table_modules_2flocalization_2fproto_2flocalization_2eproto,
  &::descriptor_table_modules_2fplanning_2fproto_2fplanning_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto = {
    false, false, 506, descriptor_table_protodef_modules_2fcontrol_2fproto_2flocal_5fview_2eproto,
    "modules/control/proto/local_view.proto",
    &descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_once, descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_deps, 5, 1,
    schemas, file_default_instances, TableStruct_modules_2fcontrol_2fproto_2flocal_5fview_2eproto::offsets,
    file_level_metadata_modules_2fcontrol_2fproto_2flocal_5fview_2eproto, file_level_enum_descriptors_modules_2fcontrol_2fproto_2flocal_5fview_2eproto,
    file_level_service_descriptors_modules_2fcontrol_2fproto_2flocal_5fview_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_getter() {
  return &descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fcontrol_2fproto_2flocal_5fview_2eproto(&descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto);
namespace apollo {
namespace control {

// ===================================================================

class LocalView::_Internal {
 public:
  using HasBits = decltype(std::declval<LocalView>()._impl_._has_bits_);
  static const ::apollo::common::Header& header(const LocalView* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::canbus::Chassis& chassis(const LocalView* msg);
  static void set_has_chassis(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::planning::ADCTrajectory& trajectory(const LocalView* msg);
  static void set_has_trajectory(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::localization::LocalizationEstimate& localization(const LocalView* msg);
  static void set_has_localization(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::control::PadMessage& pad_msg(const LocalView* msg);
  static void set_has_pad_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::apollo::common::Header&
LocalView::_Internal::header(const LocalView* msg) {
  return *msg->_impl_.header_;
}
const ::apollo::canbus::Chassis&
LocalView::_Internal::chassis(const LocalView* msg) {
  return *msg->_impl_.chassis_;
}
const ::apollo::planning::ADCTrajectory&
LocalView::_Internal::trajectory(const LocalView* msg) {
  return *msg->_impl_.trajectory_;
}
const ::apollo::localization::LocalizationEstimate&
LocalView::_Internal::localization(const LocalView* msg) {
  return *msg->_impl_.localization_;
}
const ::apollo::control::PadMessage&
LocalView::_Internal::pad_msg(const LocalView* msg) {
  return *msg->_impl_.pad_msg_;
}
void LocalView::clear_header() {
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void LocalView::clear_chassis() {
  if (_impl_.chassis_ != nullptr) _impl_.chassis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void LocalView::clear_trajectory() {
  if (_impl_.trajectory_ != nullptr) _impl_.trajectory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void LocalView::clear_localization() {
  if (_impl_.localization_ != nullptr) _impl_.localization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void LocalView::clear_pad_msg() {
  if (_impl_.pad_msg_ != nullptr) _impl_.pad_msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
LocalView::LocalView(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.control.LocalView)
}
LocalView::LocalView(const LocalView& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.header_){nullptr}
    , decltype(_impl_.chassis_){nullptr}
    , decltype(_impl_.trajectory_){nullptr}
    , decltype(_impl_.localization_){nullptr}
    , decltype(_impl_.pad_msg_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _impl_.header_ = new ::apollo::common::Header(*from._impl_.header_);
  }
  if (from._internal_has_chassis()) {
    _impl_.chassis_ = new ::apollo::canbus::Chassis(*from._impl_.chassis_);
  }
  if (from._internal_has_trajectory()) {
    _impl_.trajectory_ = new ::apollo::planning::ADCTrajectory(*from._impl_.trajectory_);
  }
  if (from._internal_has_localization()) {
    _impl_.localization_ = new ::apollo::localization::LocalizationEstimate(*from._impl_.localization_);
  }
  if (from._internal_has_pad_msg()) {
    _impl_.pad_msg_ = new ::apollo::control::PadMessage(*from._impl_.pad_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.control.LocalView)
}

inline void LocalView::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.header_){nullptr}
    , decltype(_impl_.chassis_){nullptr}
    , decltype(_impl_.trajectory_){nullptr}
    , decltype(_impl_.localization_){nullptr}
    , decltype(_impl_.pad_msg_){nullptr}
  };
}

LocalView::~LocalView() {
  // @@protoc_insertion_point(destructor:apollo.control.LocalView)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocalView::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.chassis_;
  if (this != internal_default_instance()) delete _impl_.trajectory_;
  if (this != internal_default_instance()) delete _impl_.localization_;
  if (this != internal_default_instance()) delete _impl_.pad_msg_;
}

void LocalView::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LocalView::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.control.LocalView)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.chassis_ != nullptr);
      _impl_.chassis_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.trajectory_ != nullptr);
      _impl_.trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.localization_ != nullptr);
      _impl_.localization_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.pad_msg_ != nullptr);
      _impl_.pad_msg_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalView::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.Chassis chassis = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chassis(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.planning.ADCTrajectory trajectory = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trajectory(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.localization.LocalizationEstimate localization = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_localization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.control.PadMessage pad_msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_pad_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalView::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.control.LocalView)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.canbus.Chassis chassis = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::chassis(this),
        _Internal::chassis(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.planning.ADCTrajectory trajectory = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::trajectory(this),
        _Internal::trajectory(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.localization.LocalizationEstimate localization = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::localization(this),
        _Internal::localization(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.control.PadMessage pad_msg = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::pad_msg(this),
        _Internal::pad_msg(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.control.LocalView)
  return target;
}

size_t LocalView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.control.LocalView)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .apollo.common.Header header = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.header_);
    }

    // optional .apollo.canbus.Chassis chassis = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.chassis_);
    }

    // optional .apollo.planning.ADCTrajectory trajectory = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.trajectory_);
    }

    // optional .apollo.localization.LocalizationEstimate localization = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.localization_);
    }

    // optional .apollo.control.PadMessage pad_msg = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pad_msg_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalView::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalView::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalView::GetClassData() const { return &_class_data_; }

void LocalView::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalView *>(to)->MergeFrom(
      static_cast<const LocalView &>(from));
}


void LocalView::MergeFrom(const LocalView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.control.LocalView)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_chassis()->::apollo::canbus::Chassis::MergeFrom(from._internal_chassis());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_trajectory()->::apollo::planning::ADCTrajectory::MergeFrom(from._internal_trajectory());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_localization()->::apollo::localization::LocalizationEstimate::MergeFrom(from._internal_localization());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_pad_msg()->::apollo::control::PadMessage::MergeFrom(from._internal_pad_msg());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalView::CopyFrom(const LocalView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.control.LocalView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalView::IsInitialized() const {
  return true;
}

void LocalView::InternalSwap(LocalView* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalView, _impl_.pad_msg_)
      + sizeof(LocalView::_impl_.pad_msg_)
      - PROTOBUF_FIELD_OFFSET(LocalView, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalView::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_getter, &descriptor_table_modules_2fcontrol_2fproto_2flocal_5fview_2eproto_once,
      file_level_metadata_modules_2fcontrol_2fproto_2flocal_5fview_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace control
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::control::LocalView*
Arena::CreateMaybeMessage< ::apollo::control::LocalView >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::control::LocalView >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
