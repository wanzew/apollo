// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/guardian/proto/guardian.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fguardian_2fproto_2fguardian_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fguardian_2fproto_2fguardian_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/header.pb.h"
#include "modules/control/proto/control_cmd.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fguardian_2fproto_2fguardian_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fguardian_2fproto_2fguardian_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fguardian_2fproto_2fguardian_2eproto;
namespace apollo {
namespace guardian {
class GuardianCommand;
struct GuardianCommandDefaultTypeInternal;
extern GuardianCommandDefaultTypeInternal _GuardianCommand_default_instance_;
}  // namespace guardian
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::guardian::GuardianCommand* Arena::CreateMaybeMessage<::apollo::guardian::GuardianCommand>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace guardian {

// ===================================================================

class GuardianCommand final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.guardian.GuardianCommand) */ {
 public:
  inline GuardianCommand() : GuardianCommand(nullptr) {}
  ~GuardianCommand() override;
  explicit PROTOBUF_CONSTEXPR GuardianCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GuardianCommand(const GuardianCommand& from);
  GuardianCommand(GuardianCommand&& from) noexcept
    : GuardianCommand() {
    *this = ::std::move(from);
  }

  inline GuardianCommand& operator=(const GuardianCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuardianCommand& operator=(GuardianCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GuardianCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const GuardianCommand* internal_default_instance() {
    return reinterpret_cast<const GuardianCommand*>(
               &_GuardianCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GuardianCommand& a, GuardianCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(GuardianCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GuardianCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GuardianCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GuardianCommand>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GuardianCommand& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GuardianCommand& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuardianCommand* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.guardian.GuardianCommand";
  }
  protected:
  explicit GuardianCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kControlCommandFieldNumber = 2,
  };
  // optional .apollo.common.Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::apollo::common::Header& header() const;
  PROTOBUF_NODISCARD ::apollo::common::Header* release_header();
  ::apollo::common::Header* mutable_header();
  void set_allocated_header(::apollo::common::Header* header);
  private:
  const ::apollo::common::Header& _internal_header() const;
  ::apollo::common::Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::apollo::common::Header* header);
  ::apollo::common::Header* unsafe_arena_release_header();

  // optional .apollo.control.ControlCommand control_command = 2;
  bool has_control_command() const;
  private:
  bool _internal_has_control_command() const;
  public:
  void clear_control_command();
  const ::apollo::control::ControlCommand& control_command() const;
  PROTOBUF_NODISCARD ::apollo::control::ControlCommand* release_control_command();
  ::apollo::control::ControlCommand* mutable_control_command();
  void set_allocated_control_command(::apollo::control::ControlCommand* control_command);
  private:
  const ::apollo::control::ControlCommand& _internal_control_command() const;
  ::apollo::control::ControlCommand* _internal_mutable_control_command();
  public:
  void unsafe_arena_set_allocated_control_command(
      ::apollo::control::ControlCommand* control_command);
  ::apollo::control::ControlCommand* unsafe_arena_release_control_command();

  // @@protoc_insertion_point(class_scope:apollo.guardian.GuardianCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::apollo::common::Header* header_;
    ::apollo::control::ControlCommand* control_command_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_modules_2fguardian_2fproto_2fguardian_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuardianCommand

// optional .apollo.common.Header header = 1;
inline bool GuardianCommand::_internal_has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline bool GuardianCommand::has_header() const {
  return _internal_has_header();
}
inline const ::apollo::common::Header& GuardianCommand::_internal_header() const {
  const ::apollo::common::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::common::Header&>(
      ::apollo::common::_Header_default_instance_);
}
inline const ::apollo::common::Header& GuardianCommand::header() const {
  // @@protoc_insertion_point(field_get:apollo.guardian.GuardianCommand.header)
  return _internal_header();
}
inline void GuardianCommand::unsafe_arena_set_allocated_header(
    ::apollo::common::Header* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = header;
  if (header) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.guardian.GuardianCommand.header)
}
inline ::apollo::common::Header* GuardianCommand::release_header() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::common::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::common::Header* GuardianCommand::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:apollo.guardian.GuardianCommand.header)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::apollo::common::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::apollo::common::Header* GuardianCommand::_internal_mutable_header() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::common::Header>(GetArenaForAllocation());
    _impl_.header_ = p;
  }
  return _impl_.header_;
}
inline ::apollo::common::Header* GuardianCommand::mutable_header() {
  ::apollo::common::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:apollo.guardian.GuardianCommand.header)
  return _msg;
}
inline void GuardianCommand::set_allocated_header(::apollo::common::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.header_ = header;
  // @@protoc_insertion_point(field_set_allocated:apollo.guardian.GuardianCommand.header)
}

// optional .apollo.control.ControlCommand control_command = 2;
inline bool GuardianCommand::_internal_has_control_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.control_command_ != nullptr);
  return value;
}
inline bool GuardianCommand::has_control_command() const {
  return _internal_has_control_command();
}
inline const ::apollo::control::ControlCommand& GuardianCommand::_internal_control_command() const {
  const ::apollo::control::ControlCommand* p = _impl_.control_command_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::control::ControlCommand&>(
      ::apollo::control::_ControlCommand_default_instance_);
}
inline const ::apollo::control::ControlCommand& GuardianCommand::control_command() const {
  // @@protoc_insertion_point(field_get:apollo.guardian.GuardianCommand.control_command)
  return _internal_control_command();
}
inline void GuardianCommand::unsafe_arena_set_allocated_control_command(
    ::apollo::control::ControlCommand* control_command) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.control_command_);
  }
  _impl_.control_command_ = control_command;
  if (control_command) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.guardian.GuardianCommand.control_command)
}
inline ::apollo::control::ControlCommand* GuardianCommand::release_control_command() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::apollo::control::ControlCommand* temp = _impl_.control_command_;
  _impl_.control_command_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::apollo::control::ControlCommand* GuardianCommand::unsafe_arena_release_control_command() {
  // @@protoc_insertion_point(field_release:apollo.guardian.GuardianCommand.control_command)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::apollo::control::ControlCommand* temp = _impl_.control_command_;
  _impl_.control_command_ = nullptr;
  return temp;
}
inline ::apollo::control::ControlCommand* GuardianCommand::_internal_mutable_control_command() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.control_command_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::control::ControlCommand>(GetArenaForAllocation());
    _impl_.control_command_ = p;
  }
  return _impl_.control_command_;
}
inline ::apollo::control::ControlCommand* GuardianCommand::mutable_control_command() {
  ::apollo::control::ControlCommand* _msg = _internal_mutable_control_command();
  // @@protoc_insertion_point(field_mutable:apollo.guardian.GuardianCommand.control_command)
  return _msg;
}
inline void GuardianCommand::set_allocated_control_command(::apollo::control::ControlCommand* control_command) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.control_command_);
  }
  if (control_command) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(control_command));
    if (message_arena != submessage_arena) {
      control_command = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, control_command, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.control_command_ = control_command;
  // @@protoc_insertion_point(field_set_allocated:apollo.guardian.GuardianCommand.control_command)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace guardian
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fguardian_2fproto_2fguardian_2eproto
