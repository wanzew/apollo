// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/monitor/proto/system_status.proto

#include "modules/monitor/proto/system_status.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace monitor {
PROTOBUF_CONSTEXPR ComponentStatus::ComponentStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct ComponentStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentStatusDefaultTypeInternal() {}
  union {
    ComponentStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentStatusDefaultTypeInternal _ComponentStatus_default_instance_;
PROTOBUF_CONSTEXPR Component::Component(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.summary_)*/nullptr
  , /*decltype(_impl_.process_status_)*/nullptr
  , /*decltype(_impl_.channel_status_)*/nullptr
  , /*decltype(_impl_.resource_status_)*/nullptr
  , /*decltype(_impl_.other_status_)*/nullptr
  , /*decltype(_impl_.module_status_)*/nullptr} {}
struct ComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentDefaultTypeInternal() {}
  union {
    Component _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentDefaultTypeInternal _Component_default_instance_;
PROTOBUF_CONSTEXPR SystemStatus_HmiModulesEntry_DoNotUse::SystemStatus_HmiModulesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SystemStatus_HmiModulesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemStatus_HmiModulesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemStatus_HmiModulesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SystemStatus_HmiModulesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemStatus_HmiModulesEntry_DoNotUseDefaultTypeInternal _SystemStatus_HmiModulesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SystemStatus_ComponentsEntry_DoNotUse::SystemStatus_ComponentsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SystemStatus_ComponentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemStatus_ComponentsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemStatus_ComponentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SystemStatus_ComponentsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemStatus_ComponentsEntry_DoNotUseDefaultTypeInternal _SystemStatus_ComponentsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SystemStatus_OtherComponentsEntry_DoNotUse::SystemStatus_OtherComponentsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SystemStatus_OtherComponentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemStatus_OtherComponentsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemStatus_OtherComponentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SystemStatus_OtherComponentsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemStatus_OtherComponentsEntry_DoNotUseDefaultTypeInternal _SystemStatus_OtherComponentsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SystemStatus::SystemStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.hmi_modules_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.components_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.other_components_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.passenger_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.safety_mode_trigger_time_)*/0
  , /*decltype(_impl_.require_emergency_stop_)*/false
  , /*decltype(_impl_.is_realtime_in_simulation_)*/false} {}
struct SystemStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemStatusDefaultTypeInternal() {}
  union {
    SystemStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemStatusDefaultTypeInternal _SystemStatus_default_instance_;
}  // namespace monitor
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto = nullptr;

const uint32_t TableStruct_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::ComponentStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::ComponentStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::ComponentStatus, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::ComponentStatus, _impl_.message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_.summary_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_.process_status_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_.channel_status_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_.resource_status_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_.other_status_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::Component, _impl_.module_status_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.hmi_modules_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.components_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.passenger_msg_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.safety_mode_trigger_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.require_emergency_stop_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.is_realtime_in_simulation_),
  PROTOBUF_FIELD_OFFSET(::apollo::monitor::SystemStatus, _impl_.other_components_),
  1,
  ~0u,
  ~0u,
  0,
  2,
  3,
  4,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::apollo::monitor::ComponentStatus)},
  { 10, 22, -1, sizeof(::apollo::monitor::Component)},
  { 28, 36, -1, sizeof(::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse)},
  { 38, 46, -1, sizeof(::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse)},
  { 48, 56, -1, sizeof(::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse)},
  { 58, 72, -1, sizeof(::apollo::monitor::SystemStatus)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::monitor::_ComponentStatus_default_instance_._instance,
  &::apollo::monitor::_Component_default_instance_._instance,
  &::apollo::monitor::_SystemStatus_HmiModulesEntry_DoNotUse_default_instance_._instance,
  &::apollo::monitor::_SystemStatus_ComponentsEntry_DoNotUse_default_instance_._instance,
  &::apollo::monitor::_SystemStatus_OtherComponentsEntry_DoNotUse_default_instance_._instance,
  &::apollo::monitor::_SystemStatus_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)modules/monitor/proto/system_status.pr"
  "oto\022\016apollo.monitor\032!modules/common/prot"
  "o/header.proto\"\242\001\n\017ComponentStatus\022\?\n\006st"
  "atus\030\001 \001(\0162&.apollo.monitor.ComponentSta"
  "tus.Status:\007UNKNOWN\022\017\n\007message\030\002 \001(\t\"=\n\006"
  "Status\022\013\n\007UNKNOWN\020\000\022\006\n\002OK\020\001\022\010\n\004WARN\020\002\022\t\n"
  "\005ERROR\020\003\022\t\n\005FATAL\020\004\"\330\002\n\tComponent\0220\n\007sum"
  "mary\030\001 \001(\0132\037.apollo.monitor.ComponentSta"
  "tus\0227\n\016process_status\030\002 \001(\0132\037.apollo.mon"
  "itor.ComponentStatus\0227\n\016channel_status\030\003"
  " \001(\0132\037.apollo.monitor.ComponentStatus\0228\n"
  "\017resource_status\030\004 \001(\0132\037.apollo.monitor."
  "ComponentStatus\0225\n\014other_status\030\005 \001(\0132\037."
  "apollo.monitor.ComponentStatus\0226\n\rmodule"
  "_status\030\006 \001(\0132\037.apollo.monitor.Component"
  "Status\"\212\005\n\014SystemStatus\022%\n\006header\030\001 \001(\0132"
  "\025.apollo.common.Header\022A\n\013hmi_modules\030\007 "
  "\003(\0132,.apollo.monitor.SystemStatus.HmiMod"
  "ulesEntry\022@\n\ncomponents\030\010 \003(\0132,.apollo.m"
  "onitor.SystemStatus.ComponentsEntry\022\025\n\rp"
  "assenger_msg\030\004 \001(\t\022 \n\030safety_mode_trigge"
  "r_time\030\005 \001(\001\022\036\n\026require_emergency_stop\030\006"
  " \001(\010\022!\n\031is_realtime_in_simulation\030\t \001(\010\022"
  "K\n\020other_components\030\n \003(\01321.apollo.monit"
  "or.SystemStatus.OtherComponentsEntry\032R\n\017"
  "HmiModulesEntry\022\013\n\003key\030\001 \001(\t\022.\n\005value\030\002 "
  "\001(\0132\037.apollo.monitor.ComponentStatus:\0028\001"
  "\032L\n\017ComponentsEntry\022\013\n\003key\030\001 \001(\t\022(\n\005valu"
  "e\030\002 \001(\0132\031.apollo.monitor.Component:\0028\001\032W"
  "\n\024OtherComponentsEntry\022\013\n\003key\030\001 \001(\t\022.\n\005v"
  "alue\030\002 \001(\0132\037.apollo.monitor.ComponentSta"
  "tus:\0028\001J\004\010\002\020\003J\004\010\003\020\004"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_deps[1] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto = {
    false, false, 1259, descriptor_table_protodef_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto,
    "modules/monitor/proto/system_status.proto",
    &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once, descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_deps, 1, 6,
    schemas, file_default_instances, TableStruct_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto::offsets,
    file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto, file_level_enum_descriptors_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto,
    file_level_service_descriptors_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter() {
  return &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto(&descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto);
namespace apollo {
namespace monitor {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ComponentStatus_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto);
  return file_level_enum_descriptors_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[0];
}
bool ComponentStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ComponentStatus_Status ComponentStatus::UNKNOWN;
constexpr ComponentStatus_Status ComponentStatus::OK;
constexpr ComponentStatus_Status ComponentStatus::WARN;
constexpr ComponentStatus_Status ComponentStatus::ERROR;
constexpr ComponentStatus_Status ComponentStatus::FATAL;
constexpr ComponentStatus_Status ComponentStatus::Status_MIN;
constexpr ComponentStatus_Status ComponentStatus::Status_MAX;
constexpr int ComponentStatus::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ComponentStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ComponentStatus>()._impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ComponentStatus::ComponentStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.monitor.ComponentStatus)
}
ComponentStatus::ComponentStatus(const ComponentStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _impl_.message_.Set(from._internal_message(), 
      GetArenaForAllocation());
  }
  _impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.ComponentStatus)
}

inline void ComponentStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComponentStatus::~ComponentStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.ComponentStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComponentStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void ComponentStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComponentStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.ComponentStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComponentStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.monitor.ComponentStatus.Status status = 1 [default = UNKNOWN];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::monitor::ComponentStatus_Status_IsValid(val))) {
            _internal_set_status(static_cast<::apollo::monitor::ComponentStatus_Status>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.monitor.ComponentStatus.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComponentStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.ComponentStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.monitor.ComponentStatus.Status status = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.monitor.ComponentStatus.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.ComponentStatus)
  return target;
}

size_t ComponentStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.ComponentStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional .apollo.monitor.ComponentStatus.Status status = 1 [default = UNKNOWN];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComponentStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComponentStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComponentStatus::GetClassData() const { return &_class_data_; }

void ComponentStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ComponentStatus *>(to)->MergeFrom(
      static_cast<const ComponentStatus &>(from));
}


void ComponentStatus::MergeFrom(const ComponentStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.ComponentStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.status_ = from._impl_.status_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentStatus::CopyFrom(const ComponentStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.ComponentStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentStatus::IsInitialized() const {
  return true;
}

void ComponentStatus::InternalSwap(ComponentStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComponentStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter, &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once,
      file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[0]);
}

// ===================================================================

class Component::_Internal {
 public:
  using HasBits = decltype(std::declval<Component>()._impl_._has_bits_);
  static const ::apollo::monitor::ComponentStatus& summary(const Component* msg);
  static void set_has_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::monitor::ComponentStatus& process_status(const Component* msg);
  static void set_has_process_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::monitor::ComponentStatus& channel_status(const Component* msg);
  static void set_has_channel_status(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::monitor::ComponentStatus& resource_status(const Component* msg);
  static void set_has_resource_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::monitor::ComponentStatus& other_status(const Component* msg);
  static void set_has_other_status(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::apollo::monitor::ComponentStatus& module_status(const Component* msg);
  static void set_has_module_status(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::apollo::monitor::ComponentStatus&
Component::_Internal::summary(const Component* msg) {
  return *msg->_impl_.summary_;
}
const ::apollo::monitor::ComponentStatus&
Component::_Internal::process_status(const Component* msg) {
  return *msg->_impl_.process_status_;
}
const ::apollo::monitor::ComponentStatus&
Component::_Internal::channel_status(const Component* msg) {
  return *msg->_impl_.channel_status_;
}
const ::apollo::monitor::ComponentStatus&
Component::_Internal::resource_status(const Component* msg) {
  return *msg->_impl_.resource_status_;
}
const ::apollo::monitor::ComponentStatus&
Component::_Internal::other_status(const Component* msg) {
  return *msg->_impl_.other_status_;
}
const ::apollo::monitor::ComponentStatus&
Component::_Internal::module_status(const Component* msg) {
  return *msg->_impl_.module_status_;
}
Component::Component(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.monitor.Component)
}
Component::Component(const Component& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.summary_){nullptr}
    , decltype(_impl_.process_status_){nullptr}
    , decltype(_impl_.channel_status_){nullptr}
    , decltype(_impl_.resource_status_){nullptr}
    , decltype(_impl_.other_status_){nullptr}
    , decltype(_impl_.module_status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_summary()) {
    _impl_.summary_ = new ::apollo::monitor::ComponentStatus(*from._impl_.summary_);
  }
  if (from._internal_has_process_status()) {
    _impl_.process_status_ = new ::apollo::monitor::ComponentStatus(*from._impl_.process_status_);
  }
  if (from._internal_has_channel_status()) {
    _impl_.channel_status_ = new ::apollo::monitor::ComponentStatus(*from._impl_.channel_status_);
  }
  if (from._internal_has_resource_status()) {
    _impl_.resource_status_ = new ::apollo::monitor::ComponentStatus(*from._impl_.resource_status_);
  }
  if (from._internal_has_other_status()) {
    _impl_.other_status_ = new ::apollo::monitor::ComponentStatus(*from._impl_.other_status_);
  }
  if (from._internal_has_module_status()) {
    _impl_.module_status_ = new ::apollo::monitor::ComponentStatus(*from._impl_.module_status_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.Component)
}

inline void Component::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.summary_){nullptr}
    , decltype(_impl_.process_status_){nullptr}
    , decltype(_impl_.channel_status_){nullptr}
    , decltype(_impl_.resource_status_){nullptr}
    , decltype(_impl_.other_status_){nullptr}
    , decltype(_impl_.module_status_){nullptr}
  };
}

Component::~Component() {
  // @@protoc_insertion_point(destructor:apollo.monitor.Component)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Component::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.summary_;
  if (this != internal_default_instance()) delete _impl_.process_status_;
  if (this != internal_default_instance()) delete _impl_.channel_status_;
  if (this != internal_default_instance()) delete _impl_.resource_status_;
  if (this != internal_default_instance()) delete _impl_.other_status_;
  if (this != internal_default_instance()) delete _impl_.module_status_;
}

void Component::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Component::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.Component)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.summary_ != nullptr);
      _impl_.summary_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.process_status_ != nullptr);
      _impl_.process_status_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.channel_status_ != nullptr);
      _impl_.channel_status_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.resource_status_ != nullptr);
      _impl_.resource_status_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.other_status_ != nullptr);
      _impl_.other_status_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.module_status_ != nullptr);
      _impl_.module_status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Component::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.monitor.ComponentStatus summary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_summary(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.monitor.ComponentStatus process_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_process_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.monitor.ComponentStatus channel_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.monitor.ComponentStatus resource_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.monitor.ComponentStatus other_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_other_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.monitor.ComponentStatus module_status = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Component::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.Component)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.monitor.ComponentStatus summary = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::summary(this),
        _Internal::summary(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.monitor.ComponentStatus process_status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::process_status(this),
        _Internal::process_status(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.monitor.ComponentStatus channel_status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::channel_status(this),
        _Internal::channel_status(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.monitor.ComponentStatus resource_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::resource_status(this),
        _Internal::resource_status(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.monitor.ComponentStatus other_status = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::other_status(this),
        _Internal::other_status(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.monitor.ComponentStatus module_status = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::module_status(this),
        _Internal::module_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.Component)
  return target;
}

size_t Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.Component)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .apollo.monitor.ComponentStatus summary = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.summary_);
    }

    // optional .apollo.monitor.ComponentStatus process_status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.process_status_);
    }

    // optional .apollo.monitor.ComponentStatus channel_status = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.channel_status_);
    }

    // optional .apollo.monitor.ComponentStatus resource_status = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.resource_status_);
    }

    // optional .apollo.monitor.ComponentStatus other_status = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.other_status_);
    }

    // optional .apollo.monitor.ComponentStatus module_status = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.module_status_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Component::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Component::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Component::GetClassData() const { return &_class_data_; }

void Component::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Component *>(to)->MergeFrom(
      static_cast<const Component &>(from));
}


void Component::MergeFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.Component)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_summary()->::apollo::monitor::ComponentStatus::MergeFrom(from._internal_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_process_status()->::apollo::monitor::ComponentStatus::MergeFrom(from._internal_process_status());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_channel_status()->::apollo::monitor::ComponentStatus::MergeFrom(from._internal_channel_status());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_resource_status()->::apollo::monitor::ComponentStatus::MergeFrom(from._internal_resource_status());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_other_status()->::apollo::monitor::ComponentStatus::MergeFrom(from._internal_other_status());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_module_status()->::apollo::monitor::ComponentStatus::MergeFrom(from._internal_module_status());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Component::CopyFrom(const Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Component::IsInitialized() const {
  return true;
}

void Component::InternalSwap(Component* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Component, _impl_.module_status_)
      + sizeof(Component::_impl_.module_status_)
      - PROTOBUF_FIELD_OFFSET(Component, _impl_.summary_)>(
          reinterpret_cast<char*>(&_impl_.summary_),
          reinterpret_cast<char*>(&other->_impl_.summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Component::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter, &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once,
      file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[1]);
}

// ===================================================================

SystemStatus_HmiModulesEntry_DoNotUse::SystemStatus_HmiModulesEntry_DoNotUse() {}
SystemStatus_HmiModulesEntry_DoNotUse::SystemStatus_HmiModulesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SystemStatus_HmiModulesEntry_DoNotUse::MergeFrom(const SystemStatus_HmiModulesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SystemStatus_HmiModulesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter, &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once,
      file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[2]);
}

// ===================================================================

SystemStatus_ComponentsEntry_DoNotUse::SystemStatus_ComponentsEntry_DoNotUse() {}
SystemStatus_ComponentsEntry_DoNotUse::SystemStatus_ComponentsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SystemStatus_ComponentsEntry_DoNotUse::MergeFrom(const SystemStatus_ComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SystemStatus_ComponentsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter, &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once,
      file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[3]);
}

// ===================================================================

SystemStatus_OtherComponentsEntry_DoNotUse::SystemStatus_OtherComponentsEntry_DoNotUse() {}
SystemStatus_OtherComponentsEntry_DoNotUse::SystemStatus_OtherComponentsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SystemStatus_OtherComponentsEntry_DoNotUse::MergeFrom(const SystemStatus_OtherComponentsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SystemStatus_OtherComponentsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter, &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once,
      file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[4]);
}

// ===================================================================

class SystemStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<SystemStatus>()._impl_._has_bits_);
  static const ::apollo::common::Header& header(const SystemStatus* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_passenger_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_safety_mode_trigger_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_require_emergency_stop(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_realtime_in_simulation(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::apollo::common::Header&
SystemStatus::_Internal::header(const SystemStatus* msg) {
  return *msg->_impl_.header_;
}
void SystemStatus::clear_header() {
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SystemStatus::SystemStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SystemStatus::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:apollo.monitor.SystemStatus)
}
SystemStatus::SystemStatus(const SystemStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_.hmi_modules_)*/{}
    , /*decltype(_impl_.components_)*/{}
    , /*decltype(_impl_.other_components_)*/{}
    , decltype(_impl_.passenger_msg_){}
    , decltype(_impl_.header_){nullptr}
    , decltype(_impl_.safety_mode_trigger_time_){}
    , decltype(_impl_.require_emergency_stop_){}
    , decltype(_impl_.is_realtime_in_simulation_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hmi_modules_.MergeFrom(from._impl_.hmi_modules_);
  _impl_.components_.MergeFrom(from._impl_.components_);
  _impl_.other_components_.MergeFrom(from._impl_.other_components_);
  _impl_.passenger_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.passenger_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_passenger_msg()) {
    _impl_.passenger_msg_.Set(from._internal_passenger_msg(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_header()) {
    _impl_.header_ = new ::apollo::common::Header(*from._impl_.header_);
  }
  ::memcpy(&_impl_.safety_mode_trigger_time_, &from._impl_.safety_mode_trigger_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_realtime_in_simulation_) -
    reinterpret_cast<char*>(&_impl_.safety_mode_trigger_time_)) + sizeof(_impl_.is_realtime_in_simulation_));
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.SystemStatus)
}

inline void SystemStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_.hmi_modules_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.components_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.other_components_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.passenger_msg_){}
    , decltype(_impl_.header_){nullptr}
    , decltype(_impl_.safety_mode_trigger_time_){0}
    , decltype(_impl_.require_emergency_stop_){false}
    , decltype(_impl_.is_realtime_in_simulation_){false}
  };
  _impl_.passenger_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.passenger_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemStatus::~SystemStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.SystemStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SystemStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hmi_modules_.Destruct();
  _impl_.hmi_modules_.~MapField();
  _impl_.components_.Destruct();
  _impl_.components_.~MapField();
  _impl_.other_components_.Destruct();
  _impl_.other_components_.~MapField();
  _impl_.passenger_msg_.Destroy();
  if (this != internal_default_instance()) delete _impl_.header_;
}

void SystemStatus::ArenaDtor(void* object) {
  SystemStatus* _this = reinterpret_cast< SystemStatus* >(object);
  _this->_impl_.hmi_modules_.Destruct();
  _this->_impl_.components_.Destruct();
  _this->_impl_.other_components_.Destruct();
}
void SystemStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.SystemStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hmi_modules_.Clear();
  _impl_.components_.Clear();
  _impl_.other_components_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.passenger_msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.safety_mode_trigger_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.is_realtime_in_simulation_) -
        reinterpret_cast<char*>(&_impl_.safety_mode_trigger_time_)) + sizeof(_impl_.is_realtime_in_simulation_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string passenger_msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_passenger_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.monitor.SystemStatus.passenger_msg");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional double safety_mode_trigger_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _Internal::set_has_safety_mode_trigger_time(&has_bits);
          _impl_.safety_mode_trigger_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional bool require_emergency_stop = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_require_emergency_stop(&has_bits);
          _impl_.require_emergency_stop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .apollo.monitor.ComponentStatus> hmi_modules = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.hmi_modules_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .apollo.monitor.Component> components = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.components_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool is_realtime_in_simulation = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_is_realtime_in_simulation(&has_bits);
          _impl_.is_realtime_in_simulation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .apollo.monitor.ComponentStatus> other_components = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.other_components_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.SystemStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // optional string passenger_msg = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_passenger_msg().data(), static_cast<int>(this->_internal_passenger_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.monitor.SystemStatus.passenger_msg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_passenger_msg(), target);
  }

  // optional double safety_mode_trigger_time = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_safety_mode_trigger_time(), target);
  }

  // optional bool require_emergency_stop = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_require_emergency_stop(), target);
  }

  // map<string, .apollo.monitor.ComponentStatus> hmi_modules = 7;
  if (!this->_internal_hmi_modules().empty()) {
    using MapType = ::_pb::Map<std::string, ::apollo::monitor::ComponentStatus>;
    using WireHelper = SystemStatus_HmiModulesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_hmi_modules();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "apollo.monitor.SystemStatus.HmiModulesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .apollo.monitor.Component> components = 8;
  if (!this->_internal_components().empty()) {
    using MapType = ::_pb::Map<std::string, ::apollo::monitor::Component>;
    using WireHelper = SystemStatus_ComponentsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_components();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "apollo.monitor.SystemStatus.ComponentsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // optional bool is_realtime_in_simulation = 9;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_is_realtime_in_simulation(), target);
  }

  // map<string, .apollo.monitor.ComponentStatus> other_components = 10;
  if (!this->_internal_other_components().empty()) {
    using MapType = ::_pb::Map<std::string, ::apollo::monitor::ComponentStatus>;
    using WireHelper = SystemStatus_OtherComponentsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_other_components();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "apollo.monitor.SystemStatus.OtherComponentsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.SystemStatus)
  return target;
}

size_t SystemStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.SystemStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .apollo.monitor.ComponentStatus> hmi_modules = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_hmi_modules_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::apollo::monitor::ComponentStatus >::const_iterator
      it = this->_internal_hmi_modules().begin();
      it != this->_internal_hmi_modules().end(); ++it) {
    total_size += SystemStatus_HmiModulesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .apollo.monitor.Component> components = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_components_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::apollo::monitor::Component >::const_iterator
      it = this->_internal_components().begin();
      it != this->_internal_components().end(); ++it) {
    total_size += SystemStatus_ComponentsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .apollo.monitor.ComponentStatus> other_components = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_other_components_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::apollo::monitor::ComponentStatus >::const_iterator
      it = this->_internal_other_components().begin();
      it != this->_internal_other_components().end(); ++it) {
    total_size += SystemStatus_OtherComponentsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string passenger_msg = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_passenger_msg());
    }

    // optional .apollo.common.Header header = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.header_);
    }

    // optional double safety_mode_trigger_time = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional bool require_emergency_stop = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool is_realtime_in_simulation = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SystemStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemStatus::GetClassData() const { return &_class_data_; }

void SystemStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SystemStatus *>(to)->MergeFrom(
      static_cast<const SystemStatus &>(from));
}


void SystemStatus::MergeFrom(const SystemStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.SystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.hmi_modules_.MergeFrom(from._impl_.hmi_modules_);
  _impl_.components_.MergeFrom(from._impl_.components_);
  _impl_.other_components_.MergeFrom(from._impl_.other_components_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_passenger_msg(from._internal_passenger_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.safety_mode_trigger_time_ = from._impl_.safety_mode_trigger_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.require_emergency_stop_ = from._impl_.require_emergency_stop_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.is_realtime_in_simulation_ = from._impl_.is_realtime_in_simulation_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemStatus::CopyFrom(const SystemStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.SystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemStatus::IsInitialized() const {
  return true;
}

void SystemStatus::InternalSwap(SystemStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.hmi_modules_.InternalSwap(&other->_impl_.hmi_modules_);
  _impl_.components_.InternalSwap(&other->_impl_.components_);
  _impl_.other_components_.InternalSwap(&other->_impl_.other_components_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.passenger_msg_, lhs_arena,
      &other->_impl_.passenger_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemStatus, _impl_.is_realtime_in_simulation_)
      + sizeof(SystemStatus::_impl_.is_realtime_in_simulation_)
      - PROTOBUF_FIELD_OFFSET(SystemStatus, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_getter, &descriptor_table_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto_once,
      file_level_metadata_modules_2fmonitor_2fproto_2fsystem_5fstatus_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace monitor
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::monitor::ComponentStatus*
Arena::CreateMaybeMessage< ::apollo::monitor::ComponentStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::monitor::ComponentStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::monitor::Component*
Arena::CreateMaybeMessage< ::apollo::monitor::Component >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::monitor::Component >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::monitor::SystemStatus_HmiModulesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::monitor::SystemStatus_ComponentsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::monitor::SystemStatus_OtherComponentsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::monitor::SystemStatus*
Arena::CreateMaybeMessage< ::apollo::monitor::SystemStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::monitor::SystemStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
