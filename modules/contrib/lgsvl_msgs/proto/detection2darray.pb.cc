// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/contrib/lgsvl_msgs/proto/detection2darray.proto

#include "modules/contrib/lgsvl_msgs/proto/detection2darray.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace contrib {
namespace lgsvl_msgs {
PROTOBUF_CONSTEXPR Detection2DArray::Detection2DArray(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.detections_)*/{}
  , /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Detection2DArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Detection2DArrayDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Detection2DArrayDefaultTypeInternal() {}
  union {
    Detection2DArray _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Detection2DArrayDefaultTypeInternal _Detection2DArray_default_instance_;
}  // namespace lgsvl_msgs
}  // namespace contrib
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto = nullptr;

const uint32_t TableStruct_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::contrib::lgsvl_msgs::Detection2DArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::contrib::lgsvl_msgs::Detection2DArray, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::apollo::contrib::lgsvl_msgs::Detection2DArray, _impl_.detections_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::apollo::contrib::lgsvl_msgs::Detection2DArray)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::contrib::lgsvl_msgs::_Detection2DArray_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7modules/contrib/lgsvl_msgs/proto/detec"
  "tion2darray.proto\022\031apollo.contrib.lgsvl_"
  "msgs\032!modules/common/proto/header.proto\032"
  "2modules/contrib/lgsvl_msgs/proto/detect"
  "ion2d.proto\"u\n\020Detection2DArray\022%\n\006heade"
  "r\030\001 \001(\0132\025.apollo.common.Header\022:\n\ndetect"
  "ions\030\002 \003(\0132&.apollo.contrib.lgsvl_msgs.D"
  "etection2Db\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_deps[2] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
  &::descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2d_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto = {
    false, false, 298, descriptor_table_protodef_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto,
    "modules/contrib/lgsvl_msgs/proto/detection2darray.proto",
    &descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_once, descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_deps, 2, 1,
    schemas, file_default_instances, TableStruct_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto::offsets,
    file_level_metadata_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto, file_level_enum_descriptors_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto,
    file_level_service_descriptors_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_getter() {
  return &descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto(&descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto);
namespace apollo {
namespace contrib {
namespace lgsvl_msgs {

// ===================================================================

class Detection2DArray::_Internal {
 public:
  static const ::apollo::common::Header& header(const Detection2DArray* msg);
};

const ::apollo::common::Header&
Detection2DArray::_Internal::header(const Detection2DArray* msg) {
  return *msg->_impl_.header_;
}
void Detection2DArray::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Detection2DArray::clear_detections() {
  _impl_.detections_.Clear();
}
Detection2DArray::Detection2DArray(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.contrib.lgsvl_msgs.Detection2DArray)
}
Detection2DArray::Detection2DArray(const Detection2DArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.detections_){from._impl_.detections_}
    , decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _impl_.header_ = new ::apollo::common::Header(*from._impl_.header_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.contrib.lgsvl_msgs.Detection2DArray)
}

inline void Detection2DArray::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.detections_){arena}
    , decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Detection2DArray::~Detection2DArray() {
  // @@protoc_insertion_point(destructor:apollo.contrib.lgsvl_msgs.Detection2DArray)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Detection2DArray::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.detections_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.header_;
}

void Detection2DArray::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Detection2DArray::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.contrib.lgsvl_msgs.Detection2DArray)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.detections_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Detection2DArray::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.contrib.lgsvl_msgs.Detection2D detections = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_detections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Detection2DArray::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.contrib.lgsvl_msgs.Detection2DArray)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // repeated .apollo.contrib.lgsvl_msgs.Detection2D detections = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_detections_size()); i < n; i++) {
    const auto& repfield = this->_internal_detections(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.contrib.lgsvl_msgs.Detection2DArray)
  return target;
}

size_t Detection2DArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.contrib.lgsvl_msgs.Detection2DArray)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.contrib.lgsvl_msgs.Detection2D detections = 2;
  total_size += 1UL * this->_internal_detections_size();
  for (const auto& msg : this->_impl_.detections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .apollo.common.Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Detection2DArray::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Detection2DArray::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Detection2DArray::GetClassData() const { return &_class_data_; }

void Detection2DArray::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Detection2DArray *>(to)->MergeFrom(
      static_cast<const Detection2DArray &>(from));
}


void Detection2DArray::MergeFrom(const Detection2DArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.contrib.lgsvl_msgs.Detection2DArray)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.detections_.MergeFrom(from._impl_.detections_);
  if (from._internal_has_header()) {
    _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Detection2DArray::CopyFrom(const Detection2DArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.contrib.lgsvl_msgs.Detection2DArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Detection2DArray::IsInitialized() const {
  return true;
}

void Detection2DArray::InternalSwap(Detection2DArray* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.detections_.InternalSwap(&other->_impl_.detections_);
  swap(_impl_.header_, other->_impl_.header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Detection2DArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_getter, &descriptor_table_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto_once,
      file_level_metadata_modules_2fcontrib_2flgsvl_5fmsgs_2fproto_2fdetection2darray_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace lgsvl_msgs
}  // namespace contrib
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::contrib::lgsvl_msgs::Detection2DArray*
Arena::CreateMaybeMessage< ::apollo::contrib::lgsvl_msgs::Detection2DArray >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::contrib::lgsvl_msgs::Detection2DArray >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
