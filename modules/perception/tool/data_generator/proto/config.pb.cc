// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/tool/data_generator/proto/config.proto

#include "modules/perception/tool/data_generator/proto/config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
namespace data_generator {
PROTOBUF_CONSTEXPR DataGeneratorObstacle::DataGeneratorObstacle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.polygon_point_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.velocity_)*/nullptr
  , /*decltype(_impl_.theta_)*/0
  , /*decltype(_impl_.length_)*/0
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_.type_)*/0} {}
struct DataGeneratorObstacleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataGeneratorObstacleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataGeneratorObstacleDefaultTypeInternal() {}
  union {
    DataGeneratorObstacle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataGeneratorObstacleDefaultTypeInternal _DataGeneratorObstacle_default_instance_;
PROTOBUF_CONSTEXPR ROI::ROI(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.polygon_point_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ROIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ROIDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ROIDefaultTypeInternal() {}
  union {
    ROI _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ROIDefaultTypeInternal _ROI_default_instance_;
PROTOBUF_CONSTEXPR SensorConfig::SensorConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sensor_frame_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/1} {}
struct SensorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorConfigDefaultTypeInternal() {}
  union {
    SensorConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorConfigDefaultTypeInternal _SensorConfig_default_instance_;
PROTOBUF_CONSTEXPR DataGeneratorInfo::DataGeneratorInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.obstacle_)*/{}
  , /*decltype(_impl_.config_)*/{}
  , /*decltype(_impl_.roi_)*/nullptr} {}
struct DataGeneratorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataGeneratorInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataGeneratorInfoDefaultTypeInternal() {}
  union {
    DataGeneratorInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataGeneratorInfoDefaultTypeInternal _DataGeneratorInfo_default_instance_;
}  // namespace data_generator
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.theta_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.velocity_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.length_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.polygon_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorObstacle, _impl_.type_),
  0,
  1,
  3,
  2,
  4,
  5,
  6,
  ~0u,
  7,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::ROI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::ROI, _impl_.polygon_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::SensorConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::SensorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::SensorConfig, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::SensorConfig, _impl_.sensor_frame_name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorInfo, _impl_.roi_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorInfo, _impl_.obstacle_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::data_generator::DataGeneratorInfo, _impl_.config_),
  0,
  ~0u,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, -1, sizeof(::apollo::perception::data_generator::DataGeneratorObstacle)},
  { 24, -1, -1, sizeof(::apollo::perception::data_generator::ROI)},
  { 31, 39, -1, sizeof(::apollo::perception::data_generator::SensorConfig)},
  { 41, 50, -1, sizeof(::apollo::perception::data_generator::DataGeneratorInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::data_generator::_DataGeneratorObstacle_default_instance_._instance,
  &::apollo::perception::data_generator::_ROI_default_instance_._instance,
  &::apollo::perception::data_generator::_SensorConfig_default_instance_._instance,
  &::apollo::perception::data_generator::_DataGeneratorInfo_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n9modules/perception/tool/data_generator"
  "/proto/config.proto\022 apollo.perception.d"
  "ata_generator\032#modules/common/proto/geom"
  "etry.proto\"\231\003\n\025DataGeneratorObstacle\022\n\n\002"
  "id\030\001 \001(\t\022(\n\010position\030\002 \001(\0132\026.apollo.comm"
  "on.Point2D\022\r\n\005theta\030\003 \001(\001\022(\n\010velocity\030\004 "
  "\001(\0132\026.apollo.common.Point3D\022\016\n\006length\030\005 "
  "\001(\001\022\r\n\005width\030\006 \001(\001\022\016\n\006height\030\007 \001(\001\022-\n\rpo"
  "lygon_point\030\010 \003(\0132\026.apollo.common.Point3"
  "D\022J\n\004type\030\n \001(\0162<.apollo.perception.data"
  "_generator.DataGeneratorObstacle.Type\"g\n"
  "\004Type\022\013\n\007UNKNOWN\020\000\022\r\n\tROAD_SIGN\020\001\022\016\n\nPED"
  "ESTRIAN\020\002\022\013\n\007BICYCLE\020\003\022\t\n\005SEDAN\020\004\022\007\n\003SUV"
  "\020\005\022\007\n\003BUS\020\006\022\t\n\005TRUCK\020\007\"4\n\003ROI\022-\n\rpolygon"
  "_point\030\001 \003(\0132\026.apollo.common.Point3D\"\253\001\n"
  "\014SensorConfig\022C\n\002id\030\001 \001(\01627.apollo.perce"
  "ption.data_generator.SensorConfig.Sensor"
  "Id\022\031\n\021sensor_frame_name\030\002 \001(\t\";\n\010SensorI"
  "d\022\016\n\nVELODYNE64\020\001\022\016\n\nVELODYNE16\020\002\022\017\n\013CON"
  "TI_RADAR\020\003\"\322\001\n\021DataGeneratorInfo\0222\n\003roi\030"
  "\001 \001(\0132%.apollo.perception.data_generator"
  ".ROI\022I\n\010obstacle\030\002 \003(\01327.apollo.percepti"
  "on.data_generator.DataGeneratorObstacle\022"
  ">\n\006config\030\003 \003(\0132..apollo.perception.data"
  "_generator.SensorConfig"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_deps[1] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fgeometry_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto = {
    false, false, 983, descriptor_table_protodef_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto,
    "modules/perception/tool/data_generator/proto/config.proto",
    &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_once, descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto::offsets,
    file_level_metadata_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto, file_level_enum_descriptors_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto,
    file_level_service_descriptors_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto(&descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto);
namespace apollo {
namespace perception {
namespace data_generator {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataGeneratorObstacle_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto);
  return file_level_enum_descriptors_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[0];
}
bool DataGeneratorObstacle_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::UNKNOWN;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::ROAD_SIGN;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::PEDESTRIAN;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::BICYCLE;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::SEDAN;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::SUV;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::BUS;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::TRUCK;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::Type_MIN;
constexpr DataGeneratorObstacle_Type DataGeneratorObstacle::Type_MAX;
constexpr int DataGeneratorObstacle::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SensorConfig_SensorId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto);
  return file_level_enum_descriptors_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[1];
}
bool SensorConfig_SensorId_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SensorConfig_SensorId SensorConfig::VELODYNE64;
constexpr SensorConfig_SensorId SensorConfig::VELODYNE16;
constexpr SensorConfig_SensorId SensorConfig::CONTI_RADAR;
constexpr SensorConfig_SensorId SensorConfig::SensorId_MIN;
constexpr SensorConfig_SensorId SensorConfig::SensorId_MAX;
constexpr int SensorConfig::SensorId_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class DataGeneratorObstacle::_Internal {
 public:
  using HasBits = decltype(std::declval<DataGeneratorObstacle>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::common::Point2D& position(const DataGeneratorObstacle* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_theta(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::common::Point3D& velocity(const DataGeneratorObstacle* msg);
  static void set_has_velocity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_length(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::apollo::common::Point2D&
DataGeneratorObstacle::_Internal::position(const DataGeneratorObstacle* msg) {
  return *msg->_impl_.position_;
}
const ::apollo::common::Point3D&
DataGeneratorObstacle::_Internal::velocity(const DataGeneratorObstacle* msg) {
  return *msg->_impl_.velocity_;
}
void DataGeneratorObstacle::clear_position() {
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void DataGeneratorObstacle::clear_velocity() {
  if (_impl_.velocity_ != nullptr) _impl_.velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DataGeneratorObstacle::clear_polygon_point() {
  _impl_.polygon_point_.Clear();
}
DataGeneratorObstacle::DataGeneratorObstacle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.data_generator.DataGeneratorObstacle)
}
DataGeneratorObstacle::DataGeneratorObstacle(const DataGeneratorObstacle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.polygon_point_){from._impl_.polygon_point_}
    , decltype(_impl_.id_){}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.velocity_){nullptr}
    , decltype(_impl_.theta_){}
    , decltype(_impl_.length_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , decltype(_impl_.type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_id()) {
    _impl_.id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_position()) {
    _impl_.position_ = new ::apollo::common::Point2D(*from._impl_.position_);
  }
  if (from._internal_has_velocity()) {
    _impl_.velocity_ = new ::apollo::common::Point3D(*from._impl_.velocity_);
  }
  ::memcpy(&_impl_.theta_, &from._impl_.theta_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.theta_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.data_generator.DataGeneratorObstacle)
}

inline void DataGeneratorObstacle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.polygon_point_){arena}
    , decltype(_impl_.id_){}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.velocity_){nullptr}
    , decltype(_impl_.theta_){0}
    , decltype(_impl_.length_){0}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
    , decltype(_impl_.type_){0}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DataGeneratorObstacle::~DataGeneratorObstacle() {
  // @@protoc_insertion_point(destructor:apollo.perception.data_generator.DataGeneratorObstacle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataGeneratorObstacle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.polygon_point_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.velocity_;
}

void DataGeneratorObstacle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DataGeneratorObstacle::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.data_generator.DataGeneratorObstacle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.polygon_point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.theta_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.theta_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataGeneratorObstacle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.data_generator.DataGeneratorObstacle.id");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.Point2D position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double theta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _Internal::set_has_theta(&has_bits);
          _impl_.theta_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.Point3D velocity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double length = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _Internal::set_has_length(&has_bits);
          _impl_.length_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double width = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 49)) {
          _Internal::set_has_width(&has_bits);
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double height = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 57)) {
          _Internal::set_has_height(&has_bits);
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.common.Point3D polygon_point = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_polygon_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.data_generator.DataGeneratorObstacle.Type type = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::data_generator::DataGeneratorObstacle_Type_IsValid(val))) {
            _internal_set_type(static_cast<::apollo::perception::data_generator::DataGeneratorObstacle_Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataGeneratorObstacle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.data_generator.DataGeneratorObstacle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.data_generator.DataGeneratorObstacle.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // optional .apollo.common.Point2D position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional double theta = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_theta(), target);
  }

  // optional .apollo.common.Point3D velocity = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::velocity(this),
        _Internal::velocity(this).GetCachedSize(), target, stream);
  }

  // optional double length = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_length(), target);
  }

  // optional double width = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(6, this->_internal_width(), target);
  }

  // optional double height = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(7, this->_internal_height(), target);
  }

  // repeated .apollo.common.Point3D polygon_point = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_polygon_point_size()); i < n; i++) {
    const auto& repfield = this->_internal_polygon_point(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .apollo.perception.data_generator.DataGeneratorObstacle.Type type = 10;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      10, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.data_generator.DataGeneratorObstacle)
  return target;
}

size_t DataGeneratorObstacle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.data_generator.DataGeneratorObstacle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.common.Point3D polygon_point = 8;
  total_size += 1UL * this->_internal_polygon_point_size();
  for (const auto& msg : this->_impl_.polygon_point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_id());
    }

    // optional .apollo.common.Point2D position = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.position_);
    }

    // optional .apollo.common.Point3D velocity = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.velocity_);
    }

    // optional double theta = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional double length = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional double width = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 8;
    }

    // optional double height = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 8;
    }

    // optional .apollo.perception.data_generator.DataGeneratorObstacle.Type type = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataGeneratorObstacle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataGeneratorObstacle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataGeneratorObstacle::GetClassData() const { return &_class_data_; }

void DataGeneratorObstacle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataGeneratorObstacle *>(to)->MergeFrom(
      static_cast<const DataGeneratorObstacle &>(from));
}


void DataGeneratorObstacle::MergeFrom(const DataGeneratorObstacle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.data_generator.DataGeneratorObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.polygon_point_.MergeFrom(from._impl_.polygon_point_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_position()->::apollo::common::Point2D::MergeFrom(from._internal_position());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_velocity()->::apollo::common::Point3D::MergeFrom(from._internal_velocity());
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.theta_ = from._impl_.theta_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.length_ = from._impl_.length_;
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.type_ = from._impl_.type_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataGeneratorObstacle::CopyFrom(const DataGeneratorObstacle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.data_generator.DataGeneratorObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataGeneratorObstacle::IsInitialized() const {
  return true;
}

void DataGeneratorObstacle::InternalSwap(DataGeneratorObstacle* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.polygon_point_.InternalSwap(&other->_impl_.polygon_point_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataGeneratorObstacle, _impl_.type_)
      + sizeof(DataGeneratorObstacle::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(DataGeneratorObstacle, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataGeneratorObstacle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[0]);
}

// ===================================================================

class ROI::_Internal {
 public:
};

void ROI::clear_polygon_point() {
  _impl_.polygon_point_.Clear();
}
ROI::ROI(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.data_generator.ROI)
}
ROI::ROI(const ROI& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.polygon_point_){from._impl_.polygon_point_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.data_generator.ROI)
}

inline void ROI::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.polygon_point_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ROI::~ROI() {
  // @@protoc_insertion_point(destructor:apollo.perception.data_generator.ROI)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ROI::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.polygon_point_.~RepeatedPtrField();
}

void ROI::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ROI::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.data_generator.ROI)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.polygon_point_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROI::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.common.Point3D polygon_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_polygon_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ROI::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.data_generator.ROI)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.Point3D polygon_point = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_polygon_point_size()); i < n; i++) {
    const auto& repfield = this->_internal_polygon_point(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.data_generator.ROI)
  return target;
}

size_t ROI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.data_generator.ROI)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.common.Point3D polygon_point = 1;
  total_size += 1UL * this->_internal_polygon_point_size();
  for (const auto& msg : this->_impl_.polygon_point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ROI::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ROI::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ROI::GetClassData() const { return &_class_data_; }

void ROI::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ROI *>(to)->MergeFrom(
      static_cast<const ROI &>(from));
}


void ROI::MergeFrom(const ROI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.data_generator.ROI)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.polygon_point_.MergeFrom(from._impl_.polygon_point_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ROI::CopyFrom(const ROI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.data_generator.ROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROI::IsInitialized() const {
  return true;
}

void ROI::InternalSwap(ROI* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.polygon_point_.InternalSwap(&other->_impl_.polygon_point_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ROI::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[1]);
}

// ===================================================================

class SensorConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorConfig>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sensor_frame_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SensorConfig::SensorConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.data_generator.SensorConfig)
}
SensorConfig::SensorConfig(const SensorConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sensor_frame_name_){}
    , decltype(_impl_.id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.sensor_frame_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sensor_frame_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_sensor_frame_name()) {
    _impl_.sensor_frame_name_.Set(from._internal_sensor_frame_name(), 
      GetArenaForAllocation());
  }
  _impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.data_generator.SensorConfig)
}

inline void SensorConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sensor_frame_name_){}
    , decltype(_impl_.id_){1}
  };
  _impl_.sensor_frame_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sensor_frame_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SensorConfig::~SensorConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.data_generator.SensorConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SensorConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sensor_frame_name_.Destroy();
}

void SensorConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SensorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.data_generator.SensorConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sensor_frame_name_.ClearNonDefaultToEmpty();
    }
    _impl_.id_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SensorConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.perception.data_generator.SensorConfig.SensorId id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::data_generator::SensorConfig_SensorId_IsValid(val))) {
            _internal_set_id(static_cast<::apollo::perception::data_generator::SensorConfig_SensorId>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string sensor_frame_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sensor_frame_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.data_generator.SensorConfig.sensor_frame_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SensorConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.data_generator.SensorConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.perception.data_generator.SensorConfig.SensorId id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_id(), target);
  }

  // optional string sensor_frame_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sensor_frame_name().data(), static_cast<int>(this->_internal_sensor_frame_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.data_generator.SensorConfig.sensor_frame_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sensor_frame_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.data_generator.SensorConfig)
  return target;
}

size_t SensorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.data_generator.SensorConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sensor_frame_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sensor_frame_name());
    }

    // optional .apollo.perception.data_generator.SensorConfig.SensorId id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SensorConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SensorConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SensorConfig::GetClassData() const { return &_class_data_; }

void SensorConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SensorConfig *>(to)->MergeFrom(
      static_cast<const SensorConfig &>(from));
}


void SensorConfig::MergeFrom(const SensorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.data_generator.SensorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_sensor_frame_name(from._internal_sensor_frame_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.id_ = from._impl_.id_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SensorConfig::CopyFrom(const SensorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.data_generator.SensorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorConfig::IsInitialized() const {
  return true;
}

void SensorConfig::InternalSwap(SensorConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sensor_frame_name_, lhs_arena,
      &other->_impl_.sensor_frame_name_, rhs_arena
  );
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SensorConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[2]);
}

// ===================================================================

class DataGeneratorInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<DataGeneratorInfo>()._impl_._has_bits_);
  static const ::apollo::perception::data_generator::ROI& roi(const DataGeneratorInfo* msg);
  static void set_has_roi(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apollo::perception::data_generator::ROI&
DataGeneratorInfo::_Internal::roi(const DataGeneratorInfo* msg) {
  return *msg->_impl_.roi_;
}
DataGeneratorInfo::DataGeneratorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.data_generator.DataGeneratorInfo)
}
DataGeneratorInfo::DataGeneratorInfo(const DataGeneratorInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.obstacle_){from._impl_.obstacle_}
    , decltype(_impl_.config_){from._impl_.config_}
    , decltype(_impl_.roi_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_roi()) {
    _impl_.roi_ = new ::apollo::perception::data_generator::ROI(*from._impl_.roi_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.data_generator.DataGeneratorInfo)
}

inline void DataGeneratorInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.obstacle_){arena}
    , decltype(_impl_.config_){arena}
    , decltype(_impl_.roi_){nullptr}
  };
}

DataGeneratorInfo::~DataGeneratorInfo() {
  // @@protoc_insertion_point(destructor:apollo.perception.data_generator.DataGeneratorInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DataGeneratorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.obstacle_.~RepeatedPtrField();
  _impl_.config_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.roi_;
}

void DataGeneratorInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DataGeneratorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.data_generator.DataGeneratorInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.obstacle_.Clear();
  _impl_.config_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.roi_ != nullptr);
    _impl_.roi_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataGeneratorInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.perception.data_generator.ROI roi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.data_generator.DataGeneratorObstacle obstacle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_obstacle(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.data_generator.SensorConfig config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_config(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataGeneratorInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.data_generator.DataGeneratorInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.perception.data_generator.ROI roi = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::roi(this),
        _Internal::roi(this).GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.data_generator.DataGeneratorObstacle obstacle = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_obstacle_size()); i < n; i++) {
    const auto& repfield = this->_internal_obstacle(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.data_generator.SensorConfig config = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_config_size()); i < n; i++) {
    const auto& repfield = this->_internal_config(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.data_generator.DataGeneratorInfo)
  return target;
}

size_t DataGeneratorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.data_generator.DataGeneratorInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.data_generator.DataGeneratorObstacle obstacle = 2;
  total_size += 1UL * this->_internal_obstacle_size();
  for (const auto& msg : this->_impl_.obstacle_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.data_generator.SensorConfig config = 3;
  total_size += 1UL * this->_internal_config_size();
  for (const auto& msg : this->_impl_.config_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .apollo.perception.data_generator.ROI roi = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.roi_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataGeneratorInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataGeneratorInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataGeneratorInfo::GetClassData() const { return &_class_data_; }

void DataGeneratorInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataGeneratorInfo *>(to)->MergeFrom(
      static_cast<const DataGeneratorInfo &>(from));
}


void DataGeneratorInfo::MergeFrom(const DataGeneratorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.data_generator.DataGeneratorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.obstacle_.MergeFrom(from._impl_.obstacle_);
  _impl_.config_.MergeFrom(from._impl_.config_);
  if (from._internal_has_roi()) {
    _internal_mutable_roi()->::apollo::perception::data_generator::ROI::MergeFrom(from._internal_roi());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataGeneratorInfo::CopyFrom(const DataGeneratorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.data_generator.DataGeneratorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataGeneratorInfo::IsInitialized() const {
  return true;
}

void DataGeneratorInfo::InternalSwap(DataGeneratorInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.obstacle_.InternalSwap(&other->_impl_.obstacle_);
  _impl_.config_.InternalSwap(&other->_impl_.config_);
  swap(_impl_.roi_, other->_impl_.roi_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataGeneratorInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2ftool_2fdata_5fgenerator_2fproto_2fconfig_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace data_generator
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::data_generator::DataGeneratorObstacle*
Arena::CreateMaybeMessage< ::apollo::perception::data_generator::DataGeneratorObstacle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::data_generator::DataGeneratorObstacle >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::data_generator::ROI*
Arena::CreateMaybeMessage< ::apollo::perception::data_generator::ROI >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::data_generator::ROI >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::data_generator::SensorConfig*
Arena::CreateMaybeMessage< ::apollo::perception::data_generator::SensorConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::data_generator::SensorConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::data_generator::DataGeneratorInfo*
Arena::CreateMaybeMessage< ::apollo::perception::data_generator::DataGeneratorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::data_generator::DataGeneratorInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
