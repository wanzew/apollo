// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/obstacle/camera/detector/yolo_camera_detector/proto/yolo.proto

#include "modules/perception/obstacle/camera/detector/yolo_camera_detector/proto/yolo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
namespace obstacle {
namespace yolo {
PROTOBUF_CONSTEXPR YoloParam::YoloParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.model_param_)*/nullptr
  , /*decltype(_impl_.net_param_)*/nullptr
  , /*decltype(_impl_.nms_param_)*/nullptr} {}
struct YoloParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR YoloParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~YoloParamDefaultTypeInternal() {}
  union {
    YoloParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 YoloParamDefaultTypeInternal _YoloParam_default_instance_;
PROTOBUF_CONSTEXPR ModelParam::ModelParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.model_name_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.proto_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.weight_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.anchors_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.types_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.feature_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.calibratetable_root_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.min_2d_height_)*/0
  , /*decltype(_impl_.min_3d_height_)*/0
  , /*decltype(_impl_.model_type_)*/0
  , /*decltype(_impl_.offset_ratio_)*/0.288889f
  , /*decltype(_impl_.confidence_threshold_)*/0.1f
  , /*decltype(_impl_.cropped_ratio_)*/0.711111f
  , /*decltype(_impl_.resized_width_)*/1440
  , /*decltype(_impl_.aligned_pixel_)*/32
  , /*decltype(_impl_.ignored_height_)*/100} {}
struct ModelParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelParamDefaultTypeInternal() {}
  union {
    ModelParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelParamDefaultTypeInternal _ModelParam_default_instance_;
PROTOBUF_CONSTEXPR NetworkParam::NetworkParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.loc_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.obj_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cls_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ori_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dim_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lof_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lor_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.seg_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.input_blob_)*/{nullptr, ::_pbi::ConstantInitialized{}}} {}
struct NetworkParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkParamDefaultTypeInternal() {}
  union {
    NetworkParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkParamDefaultTypeInternal _NetworkParam_default_instance_;
PROTOBUF_CONSTEXPR NMSParam::NMSParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.threshold_)*/0.4f
  , /*decltype(_impl_.sigma_)*/0.4f
  , /*decltype(_impl_.inter_cls_nms_thresh_)*/1
  , /*decltype(_impl_.cross_class_merge_thresh_)*/0.8f} {}
struct NMSParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NMSParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NMSParamDefaultTypeInternal() {}
  union {
    NMSParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NMSParamDefaultTypeInternal _NMSParam_default_instance_;
}  // namespace yolo
}  // namespace obstacle
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::YoloParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::YoloParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::YoloParam, _impl_.model_param_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::YoloParam, _impl_.net_param_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::YoloParam, _impl_.nms_param_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.proto_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.weight_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.anchors_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.types_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.feature_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.offset_ratio_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.cropped_ratio_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.resized_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.aligned_pixel_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.confidence_threshold_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.min_2d_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.min_3d_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.calibratetable_root_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.model_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::ModelParam, _impl_.ignored_height_),
  0,
  1,
  2,
  3,
  4,
  5,
  10,
  12,
  13,
  14,
  11,
  7,
  8,
  6,
  9,
  15,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.loc_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.obj_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.cls_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.ori_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.dim_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.lof_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.lor_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.seg_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NetworkParam, _impl_.input_blob_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _impl_.threshold_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _impl_.sigma_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _impl_.inter_cls_nms_thresh_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::obstacle::yolo::NMSParam, _impl_.cross_class_merge_thresh_),
  0,
  1,
  2,
  3,
  4,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::apollo::perception::obstacle::yolo::YoloParam)},
  { 12, 34, -1, sizeof(::apollo::perception::obstacle::yolo::ModelParam)},
  { 50, 65, -1, sizeof(::apollo::perception::obstacle::yolo::NetworkParam)},
  { 74, 85, -1, sizeof(::apollo::perception::obstacle::yolo::NMSParam)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::obstacle::yolo::_YoloParam_default_instance_._instance,
  &::apollo::perception::obstacle::yolo::_ModelParam_default_instance_._instance,
  &::apollo::perception::obstacle::yolo::_NetworkParam_default_instance_._instance,
  &::apollo::perception::obstacle::yolo::_NMSParam_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nQmodules/perception/obstacle/camera/det"
  "ector/yolo_camera_detector/proto/yolo.pr"
  "oto\022\037apollo.perception.obstacle.yolo\"\315\001\n"
  "\tYoloParam\022@\n\013model_param\030\001 \002(\0132+.apollo"
  ".perception.obstacle.yolo.ModelParam\022@\n\t"
  "net_param\030\002 \002(\0132-.apollo.perception.obst"
  "acle.yolo.NetworkParam\022<\n\tnms_param\030\003 \001("
  "\0132).apollo.perception.obstacle.yolo.NMSP"
  "aram\"\241\004\n\nModelParam\022\033\n\nmodel_name\030\001 \002(\t:"
  "\007yolo-2d\022\035\n\nproto_file\030\002 \001(\t:\tdeploy.pt\022"
  "\036\n\013weight_file\030\003 \001(\t:\tdeploy.md\022!\n\014ancho"
  "rs_file\030\004 \001(\t:\013anchors.txt\022\035\n\ntypes_file"
  "\030\005 \001(\t:\ttypes.txt\022 \n\014feature_file\030\006 \001(\t:"
  "\nfeature.pt\022\036\n\014offset_ratio\030\007 \001(\002:\0100.288"
  "889\022\037\n\rcropped_ratio\030\r \001(\002:\0100.711111\022\033\n\r"
  "resized_width\030\016 \001(\005:\0041440\022\031\n\raligned_pix"
  "el\030\017 \001(\005:\00232\022!\n\024confidence_threshold\030\010 \001"
  "(\002:\0030.1\022\030\n\rmin_2d_height\030\t \001(\002:\0010\022\030\n\rmin"
  "_3d_height\030\n \001(\002:\0010\022\037\n\023calibratetable_ro"
  "ot\030\013 \001(\t:\002./\022E\n\nmodel_type\030\014 \001(\0162*.apoll"
  "o.perception.obstacle.yolo.ModelType:\005Ca"
  "ffe\022\033\n\016ignored_height\030\020 \001(\005:\003100\"\210\002\n\014Net"
  "workParam\022\032\n\010loc_blob\030\001 \001(\t:\010loc_pred\022\032\n"
  "\010obj_blob\030\002 \001(\t:\010obj_pred\022\032\n\010cls_blob\030\003 "
  "\001(\t:\010cls_pred\022\032\n\010ori_blob\030\004 \001(\t:\010ori_pre"
  "d\022\032\n\010dim_blob\030\005 \001(\t:\010dim_pred\022\032\n\010lof_blo"
  "b\030\006 \001(\t:\010lof_pred\022\032\n\010lor_blob\030\007 \001(\t:\010lor"
  "_pred\022\032\n\010seg_blob\030\010 \001(\t:\010seg_pred\022\030\n\ninp"
  "ut_blob\030\n \001(\t:\004data\"\227\001\n\010NMSParam\022\027\n\004type"
  "\030\001 \001(\t:\tNormalNMS\022\026\n\tthreshold\030\002 \001(\002:\0030."
  "4\022\022\n\005sigma\030\003 \001(\002:\0030.4\022\037\n\024inter_cls_nms_t"
  "hresh\030\004 \001(\002:\0011\022%\n\030cross_class_merge_thre"
  "sh\030\005 \001(\002:\0030.8*\026\n\tModelType\022\t\n\005Caffe\020\000"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto = {
    false, false, 1317, descriptor_table_protodef_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto,
    "modules/perception/obstacle/camera/detector/yolo_camera_detector/proto/yolo.proto",
    &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto::offsets,
    file_level_metadata_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto, file_level_enum_descriptors_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto,
    file_level_service_descriptors_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto(&descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto);
namespace apollo {
namespace perception {
namespace obstacle {
namespace yolo {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ModelType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto);
  return file_level_enum_descriptors_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[0];
}
bool ModelType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class YoloParam::_Internal {
 public:
  using HasBits = decltype(std::declval<YoloParam>()._impl_._has_bits_);
  static const ::apollo::perception::obstacle::yolo::ModelParam& model_param(const YoloParam* msg);
  static void set_has_model_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::perception::obstacle::yolo::NetworkParam& net_param(const YoloParam* msg);
  static void set_has_net_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::perception::obstacle::yolo::NMSParam& nms_param(const YoloParam* msg);
  static void set_has_nms_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::apollo::perception::obstacle::yolo::ModelParam&
YoloParam::_Internal::model_param(const YoloParam* msg) {
  return *msg->_impl_.model_param_;
}
const ::apollo::perception::obstacle::yolo::NetworkParam&
YoloParam::_Internal::net_param(const YoloParam* msg) {
  return *msg->_impl_.net_param_;
}
const ::apollo::perception::obstacle::yolo::NMSParam&
YoloParam::_Internal::nms_param(const YoloParam* msg) {
  return *msg->_impl_.nms_param_;
}
YoloParam::YoloParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.obstacle.yolo.YoloParam)
}
YoloParam::YoloParam(const YoloParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.model_param_){nullptr}
    , decltype(_impl_.net_param_){nullptr}
    , decltype(_impl_.nms_param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_model_param()) {
    _impl_.model_param_ = new ::apollo::perception::obstacle::yolo::ModelParam(*from._impl_.model_param_);
  }
  if (from._internal_has_net_param()) {
    _impl_.net_param_ = new ::apollo::perception::obstacle::yolo::NetworkParam(*from._impl_.net_param_);
  }
  if (from._internal_has_nms_param()) {
    _impl_.nms_param_ = new ::apollo::perception::obstacle::yolo::NMSParam(*from._impl_.nms_param_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.obstacle.yolo.YoloParam)
}

inline void YoloParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.model_param_){nullptr}
    , decltype(_impl_.net_param_){nullptr}
    , decltype(_impl_.nms_param_){nullptr}
  };
}

YoloParam::~YoloParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.obstacle.yolo.YoloParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void YoloParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.model_param_;
  if (this != internal_default_instance()) delete _impl_.net_param_;
  if (this != internal_default_instance()) delete _impl_.nms_param_;
}

void YoloParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void YoloParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.obstacle.yolo.YoloParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.model_param_ != nullptr);
      _impl_.model_param_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.net_param_ != nullptr);
      _impl_.net_param_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.nms_param_ != nullptr);
      _impl_.nms_param_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YoloParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .apollo.perception.obstacle.yolo.ModelParam model_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .apollo.perception.obstacle.yolo.NetworkParam net_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_net_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.obstacle.yolo.NMSParam nms_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_nms_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* YoloParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.obstacle.yolo.YoloParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .apollo.perception.obstacle.yolo.ModelParam model_param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model_param(this),
        _Internal::model_param(this).GetCachedSize(), target, stream);
  }

  // required .apollo.perception.obstacle.yolo.NetworkParam net_param = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::net_param(this),
        _Internal::net_param(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.perception.obstacle.yolo.NMSParam nms_param = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::nms_param(this),
        _Internal::nms_param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.obstacle.yolo.YoloParam)
  return target;
}

size_t YoloParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.obstacle.yolo.YoloParam)
  size_t total_size = 0;

  if (_internal_has_model_param()) {
    // required .apollo.perception.obstacle.yolo.ModelParam model_param = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_param_);
  }

  if (_internal_has_net_param()) {
    // required .apollo.perception.obstacle.yolo.NetworkParam net_param = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.net_param_);
  }

  return total_size;
}
size_t YoloParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.obstacle.yolo.YoloParam)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .apollo.perception.obstacle.yolo.ModelParam model_param = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_param_);

    // required .apollo.perception.obstacle.yolo.NetworkParam net_param = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.net_param_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .apollo.perception.obstacle.yolo.NMSParam nms_param = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.nms_param_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData YoloParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    YoloParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*YoloParam::GetClassData() const { return &_class_data_; }

void YoloParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<YoloParam *>(to)->MergeFrom(
      static_cast<const YoloParam &>(from));
}


void YoloParam::MergeFrom(const YoloParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.obstacle.yolo.YoloParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_model_param()->::apollo::perception::obstacle::yolo::ModelParam::MergeFrom(from._internal_model_param());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_net_param()->::apollo::perception::obstacle::yolo::NetworkParam::MergeFrom(from._internal_net_param());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_nms_param()->::apollo::perception::obstacle::yolo::NMSParam::MergeFrom(from._internal_nms_param());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void YoloParam::CopyFrom(const YoloParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.obstacle.yolo.YoloParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YoloParam::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_model_param()) {
    if (!_impl_.model_param_->IsInitialized()) return false;
  }
  return true;
}

void YoloParam::InternalSwap(YoloParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YoloParam, _impl_.nms_param_)
      + sizeof(YoloParam::_impl_.nms_param_)
      - PROTOBUF_FIELD_OFFSET(YoloParam, _impl_.model_param_)>(
          reinterpret_cast<char*>(&_impl_.model_param_),
          reinterpret_cast<char*>(&other->_impl_.model_param_));
}

::PROTOBUF_NAMESPACE_ID::Metadata YoloParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_getter, &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_once,
      file_level_metadata_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[0]);
}

// ===================================================================

class ModelParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ModelParam>()._impl_._has_bits_);
  static void set_has_model_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_proto_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_weight_file(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_anchors_file(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_types_file(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_feature_file(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_offset_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_cropped_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_resized_width(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_aligned_pixel(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_confidence_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_min_2d_height(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_min_3d_height(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_calibratetable_root(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_ignored_height(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_model_name_{{{"yolo-2d", 7}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_proto_file_{{{"deploy.pt", 9}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_weight_file_{{{"deploy.md", 9}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_anchors_file_{{{"anchors.txt", 11}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_types_file_{{{"types.txt", 9}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_feature_file_{{{"feature.pt", 10}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ModelParam::Impl_::_i_give_permission_to_break_this_code_default_calibratetable_root_{{{"./", 2}}, {nullptr}};
ModelParam::ModelParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.obstacle.yolo.ModelParam)
}
ModelParam::ModelParam(const ModelParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.proto_file_){}
    , decltype(_impl_.weight_file_){}
    , decltype(_impl_.anchors_file_){}
    , decltype(_impl_.types_file_){}
    , decltype(_impl_.feature_file_){}
    , decltype(_impl_.calibratetable_root_){}
    , decltype(_impl_.min_2d_height_){}
    , decltype(_impl_.min_3d_height_){}
    , decltype(_impl_.model_type_){}
    , decltype(_impl_.offset_ratio_){}
    , decltype(_impl_.confidence_threshold_){}
    , decltype(_impl_.cropped_ratio_){}
    , decltype(_impl_.resized_width_){}
    , decltype(_impl_.aligned_pixel_){}
    , decltype(_impl_.ignored_height_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_name_.InitDefault();
  if (from._internal_has_model_name()) {
    _impl_.model_name_.Set(from._internal_model_name(), 
      GetArenaForAllocation());
  }
  _impl_.proto_file_.InitDefault();
  if (from._internal_has_proto_file()) {
    _impl_.proto_file_.Set(from._internal_proto_file(), 
      GetArenaForAllocation());
  }
  _impl_.weight_file_.InitDefault();
  if (from._internal_has_weight_file()) {
    _impl_.weight_file_.Set(from._internal_weight_file(), 
      GetArenaForAllocation());
  }
  _impl_.anchors_file_.InitDefault();
  if (from._internal_has_anchors_file()) {
    _impl_.anchors_file_.Set(from._internal_anchors_file(), 
      GetArenaForAllocation());
  }
  _impl_.types_file_.InitDefault();
  if (from._internal_has_types_file()) {
    _impl_.types_file_.Set(from._internal_types_file(), 
      GetArenaForAllocation());
  }
  _impl_.feature_file_.InitDefault();
  if (from._internal_has_feature_file()) {
    _impl_.feature_file_.Set(from._internal_feature_file(), 
      GetArenaForAllocation());
  }
  _impl_.calibratetable_root_.InitDefault();
  if (from._internal_has_calibratetable_root()) {
    _impl_.calibratetable_root_.Set(from._internal_calibratetable_root(), 
      GetArenaForAllocation());
  }
  ::memcpy(&_impl_.min_2d_height_, &from._impl_.min_2d_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ignored_height_) -
    reinterpret_cast<char*>(&_impl_.min_2d_height_)) + sizeof(_impl_.ignored_height_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.obstacle.yolo.ModelParam)
}

inline void ModelParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.proto_file_){}
    , decltype(_impl_.weight_file_){}
    , decltype(_impl_.anchors_file_){}
    , decltype(_impl_.types_file_){}
    , decltype(_impl_.feature_file_){}
    , decltype(_impl_.calibratetable_root_){}
    , decltype(_impl_.min_2d_height_){0}
    , decltype(_impl_.min_3d_height_){0}
    , decltype(_impl_.model_type_){0}
    , decltype(_impl_.offset_ratio_){0.288889f}
    , decltype(_impl_.confidence_threshold_){0.1f}
    , decltype(_impl_.cropped_ratio_){0.711111f}
    , decltype(_impl_.resized_width_){1440}
    , decltype(_impl_.aligned_pixel_){32}
    , decltype(_impl_.ignored_height_){100}
  };
  _impl_.model_name_.InitDefault();
  _impl_.proto_file_.InitDefault();
  _impl_.weight_file_.InitDefault();
  _impl_.anchors_file_.InitDefault();
  _impl_.types_file_.InitDefault();
  _impl_.feature_file_.InitDefault();
  _impl_.calibratetable_root_.InitDefault();
}

ModelParam::~ModelParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.obstacle.yolo.ModelParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_name_.Destroy();
  _impl_.proto_file_.Destroy();
  _impl_.weight_file_.Destroy();
  _impl_.anchors_file_.Destroy();
  _impl_.types_file_.Destroy();
  _impl_.feature_file_.Destroy();
  _impl_.calibratetable_root_.Destroy();
}

void ModelParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.obstacle.yolo.ModelParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.model_name_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_model_name_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000002u) {
      _impl_.proto_file_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_proto_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000004u) {
      _impl_.weight_file_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_weight_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000008u) {
      _impl_.anchors_file_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_anchors_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000010u) {
      _impl_.types_file_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_types_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000020u) {
      _impl_.feature_file_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_feature_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000040u) {
      _impl_.calibratetable_root_.ClearToDefault(::apollo::perception::obstacle::yolo::ModelParam::Impl_::_i_give_permission_to_break_this_code_default_calibratetable_root_, GetArenaForAllocation());
       }
  }
  _impl_.min_2d_height_ = 0;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.min_3d_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.model_type_) -
        reinterpret_cast<char*>(&_impl_.min_3d_height_)) + sizeof(_impl_.model_type_));
    _impl_.offset_ratio_ = 0.288889f;
    _impl_.confidence_threshold_ = 0.1f;
    _impl_.cropped_ratio_ = 0.711111f;
    _impl_.resized_width_ = 1440;
    _impl_.aligned_pixel_ = 32;
    _impl_.ignored_height_ = 100;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required string model_name = 1 [default = "yolo-2d"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.model_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string proto_file = 2 [default = "deploy.pt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proto_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.proto_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string weight_file = 3 [default = "deploy.md"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_weight_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.weight_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string anchors_file = 4 [default = "anchors.txt"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_anchors_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.anchors_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string types_file = 5 [default = "types.txt"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_types_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.types_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string feature_file = 6 [default = "feature.pt"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_feature_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.feature_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional float offset_ratio = 7 [default = 0.288889];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _Internal::set_has_offset_ratio(&has_bits);
          _impl_.offset_ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float confidence_threshold = 8 [default = 0.1];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _Internal::set_has_confidence_threshold(&has_bits);
          _impl_.confidence_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float min_2d_height = 9 [default = 0];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 77)) {
          _Internal::set_has_min_2d_height(&has_bits);
          _impl_.min_2d_height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float min_3d_height = 10 [default = 0];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 85)) {
          _Internal::set_has_min_3d_height(&has_bits);
          _impl_.min_3d_height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional string calibratetable_root = 11 [default = "./"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_calibratetable_root();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.ModelParam.calibratetable_root");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.obstacle.yolo.ModelType model_type = 12 [default = Caffe];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::obstacle::yolo::ModelType_IsValid(val))) {
            _internal_set_model_type(static_cast<::apollo::perception::obstacle::yolo::ModelType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional float cropped_ratio = 13 [default = 0.711111];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 109)) {
          _Internal::set_has_cropped_ratio(&has_bits);
          _impl_.cropped_ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 resized_width = 14 [default = 1440];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_resized_width(&has_bits);
          _impl_.resized_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 aligned_pixel = 15 [default = 32];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_aligned_pixel(&has_bits);
          _impl_.aligned_pixel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 ignored_height = 16 [default = 100];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_ignored_height(&has_bits);
          _impl_.ignored_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.obstacle.yolo.ModelParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string model_name = 1 [default = "yolo-2d"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // optional string proto_file = 2 [default = "deploy.pt"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_proto_file().data(), static_cast<int>(this->_internal_proto_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.proto_file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto_file(), target);
  }

  // optional string weight_file = 3 [default = "deploy.md"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_weight_file().data(), static_cast<int>(this->_internal_weight_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.weight_file");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_weight_file(), target);
  }

  // optional string anchors_file = 4 [default = "anchors.txt"];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_anchors_file().data(), static_cast<int>(this->_internal_anchors_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.anchors_file");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_anchors_file(), target);
  }

  // optional string types_file = 5 [default = "types.txt"];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_types_file().data(), static_cast<int>(this->_internal_types_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.types_file");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_types_file(), target);
  }

  // optional string feature_file = 6 [default = "feature.pt"];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feature_file().data(), static_cast<int>(this->_internal_feature_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.feature_file");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_feature_file(), target);
  }

  // optional float offset_ratio = 7 [default = 0.288889];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_offset_ratio(), target);
  }

  // optional float confidence_threshold = 8 [default = 0.1];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_confidence_threshold(), target);
  }

  // optional float min_2d_height = 9 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(9, this->_internal_min_2d_height(), target);
  }

  // optional float min_3d_height = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(10, this->_internal_min_3d_height(), target);
  }

  // optional string calibratetable_root = 11 [default = "./"];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_calibratetable_root().data(), static_cast<int>(this->_internal_calibratetable_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.ModelParam.calibratetable_root");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_calibratetable_root(), target);
  }

  // optional .apollo.perception.obstacle.yolo.ModelType model_type = 12 [default = Caffe];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_model_type(), target);
  }

  // optional float cropped_ratio = 13 [default = 0.711111];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(13, this->_internal_cropped_ratio(), target);
  }

  // optional int32 resized_width = 14 [default = 1440];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_resized_width(), target);
  }

  // optional int32 aligned_pixel = 15 [default = 32];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(15, this->_internal_aligned_pixel(), target);
  }

  // optional int32 ignored_height = 16 [default = 100];
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(16, this->_internal_ignored_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.obstacle.yolo.ModelParam)
  return target;
}

size_t ModelParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.obstacle.yolo.ModelParam)
  size_t total_size = 0;

  // required string model_name = 1 [default = "yolo-2d"];
  if (_internal_has_model_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional string proto_file = 2 [default = "deploy.pt"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_proto_file());
    }

    // optional string weight_file = 3 [default = "deploy.md"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_weight_file());
    }

    // optional string anchors_file = 4 [default = "anchors.txt"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_anchors_file());
    }

    // optional string types_file = 5 [default = "types.txt"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_types_file());
    }

    // optional string feature_file = 6 [default = "feature.pt"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feature_file());
    }

    // optional string calibratetable_root = 11 [default = "./"];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_calibratetable_root());
    }

    // optional float min_2d_height = 9 [default = 0];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional float min_3d_height = 10 [default = 0];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 4;
    }

    // optional .apollo.perception.obstacle.yolo.ModelType model_type = 12 [default = Caffe];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
    }

    // optional float offset_ratio = 7 [default = 0.288889];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 4;
    }

    // optional float confidence_threshold = 8 [default = 0.1];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 4;
    }

    // optional float cropped_ratio = 13 [default = 0.711111];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 4;
    }

    // optional int32 resized_width = 14 [default = 1440];
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resized_width());
    }

    // optional int32 aligned_pixel = 15 [default = 32];
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_aligned_pixel());
    }

    // optional int32 ignored_height = 16 [default = 100];
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_ignored_height());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelParam::GetClassData() const { return &_class_data_; }

void ModelParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelParam *>(to)->MergeFrom(
      static_cast<const ModelParam &>(from));
}


void ModelParam::MergeFrom(const ModelParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.obstacle.yolo.ModelParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_model_name(from._internal_model_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_proto_file(from._internal_proto_file());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_weight_file(from._internal_weight_file());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_anchors_file(from._internal_anchors_file());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_types_file(from._internal_types_file());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_feature_file(from._internal_feature_file());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_calibratetable_root(from._internal_calibratetable_root());
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.min_2d_height_ = from._impl_.min_2d_height_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _impl_.min_3d_height_ = from._impl_.min_3d_height_;
    }
    if (cached_has_bits & 0x00000200u) {
      _impl_.model_type_ = from._impl_.model_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      _impl_.offset_ratio_ = from._impl_.offset_ratio_;
    }
    if (cached_has_bits & 0x00000800u) {
      _impl_.confidence_threshold_ = from._impl_.confidence_threshold_;
    }
    if (cached_has_bits & 0x00001000u) {
      _impl_.cropped_ratio_ = from._impl_.cropped_ratio_;
    }
    if (cached_has_bits & 0x00002000u) {
      _impl_.resized_width_ = from._impl_.resized_width_;
    }
    if (cached_has_bits & 0x00004000u) {
      _impl_.aligned_pixel_ = from._impl_.aligned_pixel_;
    }
    if (cached_has_bits & 0x00008000u) {
      _impl_.ignored_height_ = from._impl_.ignored_height_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelParam::CopyFrom(const ModelParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.obstacle.yolo.ModelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelParam::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void ModelParam::InternalSwap(ModelParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.proto_file_, lhs_arena,
      &other->_impl_.proto_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.weight_file_, lhs_arena,
      &other->_impl_.weight_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.anchors_file_, lhs_arena,
      &other->_impl_.anchors_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.types_file_, lhs_arena,
      &other->_impl_.types_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.feature_file_, lhs_arena,
      &other->_impl_.feature_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.calibratetable_root_, lhs_arena,
      &other->_impl_.calibratetable_root_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelParam, _impl_.model_type_)
      + sizeof(ModelParam::_impl_.model_type_)
      - PROTOBUF_FIELD_OFFSET(ModelParam, _impl_.min_2d_height_)>(
          reinterpret_cast<char*>(&_impl_.min_2d_height_),
          reinterpret_cast<char*>(&other->_impl_.min_2d_height_));
  swap(_impl_.offset_ratio_, other->_impl_.offset_ratio_);
  swap(_impl_.confidence_threshold_, other->_impl_.confidence_threshold_);
  swap(_impl_.cropped_ratio_, other->_impl_.cropped_ratio_);
  swap(_impl_.resized_width_, other->_impl_.resized_width_);
  swap(_impl_.aligned_pixel_, other->_impl_.aligned_pixel_);
  swap(_impl_.ignored_height_, other->_impl_.ignored_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_getter, &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_once,
      file_level_metadata_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[1]);
}

// ===================================================================

class NetworkParam::_Internal {
 public:
  using HasBits = decltype(std::declval<NetworkParam>()._impl_._has_bits_);
  static void set_has_loc_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_obj_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cls_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ori_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dim_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_lof_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_lor_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_seg_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_input_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_loc_blob_{{{"loc_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_obj_blob_{{{"obj_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_cls_blob_{{{"cls_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_ori_blob_{{{"ori_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_dim_blob_{{{"dim_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_lof_blob_{{{"lof_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_lor_blob_{{{"lor_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_seg_blob_{{{"seg_pred", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_input_blob_{{{"data", 4}}, {nullptr}};
NetworkParam::NetworkParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.obstacle.yolo.NetworkParam)
}
NetworkParam::NetworkParam(const NetworkParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.loc_blob_){}
    , decltype(_impl_.obj_blob_){}
    , decltype(_impl_.cls_blob_){}
    , decltype(_impl_.ori_blob_){}
    , decltype(_impl_.dim_blob_){}
    , decltype(_impl_.lof_blob_){}
    , decltype(_impl_.lor_blob_){}
    , decltype(_impl_.seg_blob_){}
    , decltype(_impl_.input_blob_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.loc_blob_.InitDefault();
  if (from._internal_has_loc_blob()) {
    _impl_.loc_blob_.Set(from._internal_loc_blob(), 
      GetArenaForAllocation());
  }
  _impl_.obj_blob_.InitDefault();
  if (from._internal_has_obj_blob()) {
    _impl_.obj_blob_.Set(from._internal_obj_blob(), 
      GetArenaForAllocation());
  }
  _impl_.cls_blob_.InitDefault();
  if (from._internal_has_cls_blob()) {
    _impl_.cls_blob_.Set(from._internal_cls_blob(), 
      GetArenaForAllocation());
  }
  _impl_.ori_blob_.InitDefault();
  if (from._internal_has_ori_blob()) {
    _impl_.ori_blob_.Set(from._internal_ori_blob(), 
      GetArenaForAllocation());
  }
  _impl_.dim_blob_.InitDefault();
  if (from._internal_has_dim_blob()) {
    _impl_.dim_blob_.Set(from._internal_dim_blob(), 
      GetArenaForAllocation());
  }
  _impl_.lof_blob_.InitDefault();
  if (from._internal_has_lof_blob()) {
    _impl_.lof_blob_.Set(from._internal_lof_blob(), 
      GetArenaForAllocation());
  }
  _impl_.lor_blob_.InitDefault();
  if (from._internal_has_lor_blob()) {
    _impl_.lor_blob_.Set(from._internal_lor_blob(), 
      GetArenaForAllocation());
  }
  _impl_.seg_blob_.InitDefault();
  if (from._internal_has_seg_blob()) {
    _impl_.seg_blob_.Set(from._internal_seg_blob(), 
      GetArenaForAllocation());
  }
  _impl_.input_blob_.InitDefault();
  if (from._internal_has_input_blob()) {
    _impl_.input_blob_.Set(from._internal_input_blob(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.obstacle.yolo.NetworkParam)
}

inline void NetworkParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.loc_blob_){}
    , decltype(_impl_.obj_blob_){}
    , decltype(_impl_.cls_blob_){}
    , decltype(_impl_.ori_blob_){}
    , decltype(_impl_.dim_blob_){}
    , decltype(_impl_.lof_blob_){}
    , decltype(_impl_.lor_blob_){}
    , decltype(_impl_.seg_blob_){}
    , decltype(_impl_.input_blob_){}
  };
  _impl_.loc_blob_.InitDefault();
  _impl_.obj_blob_.InitDefault();
  _impl_.cls_blob_.InitDefault();
  _impl_.ori_blob_.InitDefault();
  _impl_.dim_blob_.InitDefault();
  _impl_.lof_blob_.InitDefault();
  _impl_.lor_blob_.InitDefault();
  _impl_.seg_blob_.InitDefault();
  _impl_.input_blob_.InitDefault();
}

NetworkParam::~NetworkParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.obstacle.yolo.NetworkParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NetworkParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.loc_blob_.Destroy();
  _impl_.obj_blob_.Destroy();
  _impl_.cls_blob_.Destroy();
  _impl_.ori_blob_.Destroy();
  _impl_.dim_blob_.Destroy();
  _impl_.lof_blob_.Destroy();
  _impl_.lor_blob_.Destroy();
  _impl_.seg_blob_.Destroy();
  _impl_.input_blob_.Destroy();
}

void NetworkParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NetworkParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.obstacle.yolo.NetworkParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.loc_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_loc_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000002u) {
      _impl_.obj_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_obj_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000004u) {
      _impl_.cls_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_cls_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000008u) {
      _impl_.ori_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_ori_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000010u) {
      _impl_.dim_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_dim_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000020u) {
      _impl_.lof_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_lof_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000040u) {
      _impl_.lor_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_lor_blob_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000080u) {
      _impl_.seg_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_seg_blob_, GetArenaForAllocation());
       }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.input_blob_.ClearToDefault(::apollo::perception::obstacle::yolo::NetworkParam::Impl_::_i_give_permission_to_break_this_code_default_input_blob_, GetArenaForAllocation());
     }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetworkParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string loc_blob = 1 [default = "loc_pred"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_loc_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.loc_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string obj_blob = 2 [default = "obj_pred"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_obj_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.obj_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string cls_blob = 3 [default = "cls_pred"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cls_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.cls_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string ori_blob = 4 [default = "ori_pred"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_ori_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.ori_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string dim_blob = 5 [default = "dim_pred"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_dim_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.dim_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string lof_blob = 6 [default = "lof_pred"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_lof_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.lof_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string lor_blob = 7 [default = "lor_pred"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_lor_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.lor_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string seg_blob = 8 [default = "seg_pred"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_seg_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.seg_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string input_blob = 10 [default = "data"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_input_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NetworkParam.input_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetworkParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.obstacle.yolo.NetworkParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string loc_blob = 1 [default = "loc_pred"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_loc_blob().data(), static_cast<int>(this->_internal_loc_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.loc_blob");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_loc_blob(), target);
  }

  // optional string obj_blob = 2 [default = "obj_pred"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_obj_blob().data(), static_cast<int>(this->_internal_obj_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.obj_blob");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_obj_blob(), target);
  }

  // optional string cls_blob = 3 [default = "cls_pred"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_cls_blob().data(), static_cast<int>(this->_internal_cls_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.cls_blob");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cls_blob(), target);
  }

  // optional string ori_blob = 4 [default = "ori_pred"];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_ori_blob().data(), static_cast<int>(this->_internal_ori_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.ori_blob");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_ori_blob(), target);
  }

  // optional string dim_blob = 5 [default = "dim_pred"];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_dim_blob().data(), static_cast<int>(this->_internal_dim_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.dim_blob");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_dim_blob(), target);
  }

  // optional string lof_blob = 6 [default = "lof_pred"];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_lof_blob().data(), static_cast<int>(this->_internal_lof_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.lof_blob");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_lof_blob(), target);
  }

  // optional string lor_blob = 7 [default = "lor_pred"];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_lor_blob().data(), static_cast<int>(this->_internal_lor_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.lor_blob");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_lor_blob(), target);
  }

  // optional string seg_blob = 8 [default = "seg_pred"];
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_seg_blob().data(), static_cast<int>(this->_internal_seg_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.seg_blob");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_seg_blob(), target);
  }

  // optional string input_blob = 10 [default = "data"];
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_input_blob().data(), static_cast<int>(this->_internal_input_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NetworkParam.input_blob");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_input_blob(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.obstacle.yolo.NetworkParam)
  return target;
}

size_t NetworkParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.obstacle.yolo.NetworkParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string loc_blob = 1 [default = "loc_pred"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_loc_blob());
    }

    // optional string obj_blob = 2 [default = "obj_pred"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_obj_blob());
    }

    // optional string cls_blob = 3 [default = "cls_pred"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cls_blob());
    }

    // optional string ori_blob = 4 [default = "ori_pred"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_ori_blob());
    }

    // optional string dim_blob = 5 [default = "dim_pred"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_dim_blob());
    }

    // optional string lof_blob = 6 [default = "lof_pred"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_lof_blob());
    }

    // optional string lor_blob = 7 [default = "lor_pred"];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_lor_blob());
    }

    // optional string seg_blob = 8 [default = "seg_pred"];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_seg_blob());
    }

  }
  // optional string input_blob = 10 [default = "data"];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_blob());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetworkParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NetworkParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetworkParam::GetClassData() const { return &_class_data_; }

void NetworkParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NetworkParam *>(to)->MergeFrom(
      static_cast<const NetworkParam &>(from));
}


void NetworkParam::MergeFrom(const NetworkParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.obstacle.yolo.NetworkParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_loc_blob(from._internal_loc_blob());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_obj_blob(from._internal_obj_blob());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_cls_blob(from._internal_cls_blob());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_ori_blob(from._internal_ori_blob());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_dim_blob(from._internal_dim_blob());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_lof_blob(from._internal_lof_blob());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_lor_blob(from._internal_lor_blob());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_set_seg_blob(from._internal_seg_blob());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_input_blob(from._internal_input_blob());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkParam::CopyFrom(const NetworkParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.obstacle.yolo.NetworkParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkParam::IsInitialized() const {
  return true;
}

void NetworkParam::InternalSwap(NetworkParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.loc_blob_, lhs_arena,
      &other->_impl_.loc_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.obj_blob_, lhs_arena,
      &other->_impl_.obj_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cls_blob_, lhs_arena,
      &other->_impl_.cls_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ori_blob_, lhs_arena,
      &other->_impl_.ori_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dim_blob_, lhs_arena,
      &other->_impl_.dim_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lof_blob_, lhs_arena,
      &other->_impl_.lof_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lor_blob_, lhs_arena,
      &other->_impl_.lor_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.seg_blob_, lhs_arena,
      &other->_impl_.seg_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.input_blob_, lhs_arena,
      &other->_impl_.input_blob_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NetworkParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_getter, &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_once,
      file_level_metadata_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[2]);
}

// ===================================================================

class NMSParam::_Internal {
 public:
  using HasBits = decltype(std::declval<NMSParam>()._impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sigma(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_inter_cls_nms_thresh(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_cross_class_merge_thresh(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString NMSParam::Impl_::_i_give_permission_to_break_this_code_default_type_{{{"NormalNMS", 9}}, {nullptr}};
NMSParam::NMSParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.obstacle.yolo.NMSParam)
}
NMSParam::NMSParam(const NMSParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_){}
    , decltype(_impl_.threshold_){}
    , decltype(_impl_.sigma_){}
    , decltype(_impl_.inter_cls_nms_thresh_){}
    , decltype(_impl_.cross_class_merge_thresh_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  if (from._internal_has_type()) {
    _impl_.type_.Set(from._internal_type(), 
      GetArenaForAllocation());
  }
  ::memcpy(&_impl_.threshold_, &from._impl_.threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.cross_class_merge_thresh_) -
    reinterpret_cast<char*>(&_impl_.threshold_)) + sizeof(_impl_.cross_class_merge_thresh_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.obstacle.yolo.NMSParam)
}

inline void NMSParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_){}
    , decltype(_impl_.threshold_){0.4f}
    , decltype(_impl_.sigma_){0.4f}
    , decltype(_impl_.inter_cls_nms_thresh_){1}
    , decltype(_impl_.cross_class_merge_thresh_){0.8f}
  };
  _impl_.type_.InitDefault();
}

NMSParam::~NMSParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.obstacle.yolo.NMSParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NMSParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
}

void NMSParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NMSParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.obstacle.yolo.NMSParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_.ClearToDefault(::apollo::perception::obstacle::yolo::NMSParam::Impl_::_i_give_permission_to_break_this_code_default_type_, GetArenaForAllocation());
       }
    _impl_.threshold_ = 0.4f;
    _impl_.sigma_ = 0.4f;
    _impl_.inter_cls_nms_thresh_ = 1;
    _impl_.cross_class_merge_thresh_ = 0.8f;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NMSParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type = 1 [default = "NormalNMS"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.obstacle.yolo.NMSParam.type");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional float threshold = 2 [default = 0.4];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_threshold(&has_bits);
          _impl_.threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float sigma = 3 [default = 0.4];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_sigma(&has_bits);
          _impl_.sigma_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float inter_cls_nms_thresh = 4 [default = 1];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_inter_cls_nms_thresh(&has_bits);
          _impl_.inter_cls_nms_thresh_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float cross_class_merge_thresh = 5 [default = 0.8];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _Internal::set_has_cross_class_merge_thresh(&has_bits);
          _impl_.cross_class_merge_thresh_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NMSParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.obstacle.yolo.NMSParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type = 1 [default = "NormalNMS"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.obstacle.yolo.NMSParam.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // optional float threshold = 2 [default = 0.4];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_threshold(), target);
  }

  // optional float sigma = 3 [default = 0.4];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_sigma(), target);
  }

  // optional float inter_cls_nms_thresh = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_inter_cls_nms_thresh(), target);
  }

  // optional float cross_class_merge_thresh = 5 [default = 0.8];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_cross_class_merge_thresh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.obstacle.yolo.NMSParam)
  return target;
}

size_t NMSParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.obstacle.yolo.NMSParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string type = 1 [default = "NormalNMS"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type());
    }

    // optional float threshold = 2 [default = 0.4];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float sigma = 3 [default = 0.4];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float inter_cls_nms_thresh = 4 [default = 1];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional float cross_class_merge_thresh = 5 [default = 0.8];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NMSParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NMSParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NMSParam::GetClassData() const { return &_class_data_; }

void NMSParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NMSParam *>(to)->MergeFrom(
      static_cast<const NMSParam &>(from));
}


void NMSParam::MergeFrom(const NMSParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.obstacle.yolo.NMSParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_type(from._internal_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.threshold_ = from._impl_.threshold_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.sigma_ = from._impl_.sigma_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.inter_cls_nms_thresh_ = from._impl_.inter_cls_nms_thresh_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.cross_class_merge_thresh_ = from._impl_.cross_class_merge_thresh_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NMSParam::CopyFrom(const NMSParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.obstacle.yolo.NMSParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NMSParam::IsInitialized() const {
  return true;
}

void NMSParam::InternalSwap(NMSParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  swap(_impl_.threshold_, other->_impl_.threshold_);
  swap(_impl_.sigma_, other->_impl_.sigma_);
  swap(_impl_.inter_cls_nms_thresh_, other->_impl_.inter_cls_nms_thresh_);
  swap(_impl_.cross_class_merge_thresh_, other->_impl_.cross_class_merge_thresh_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NMSParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_getter, &descriptor_table_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto_once,
      file_level_metadata_modules_2fperception_2fobstacle_2fcamera_2fdetector_2fyolo_5fcamera_5fdetector_2fproto_2fyolo_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace yolo
}  // namespace obstacle
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::obstacle::yolo::YoloParam*
Arena::CreateMaybeMessage< ::apollo::perception::obstacle::yolo::YoloParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::obstacle::yolo::YoloParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::obstacle::yolo::ModelParam*
Arena::CreateMaybeMessage< ::apollo::perception::obstacle::yolo::ModelParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::obstacle::yolo::ModelParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::obstacle::yolo::NetworkParam*
Arena::CreateMaybeMessage< ::apollo::perception::obstacle::yolo::NetworkParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::obstacle::yolo::NetworkParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::obstacle::yolo::NMSParam*
Arena::CreateMaybeMessage< ::apollo::perception::obstacle::yolo::NMSParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::obstacle::yolo::NMSParam >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
