// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/feature_extractor/tfe/proto/tracking_feature.proto

#include "modules/perception/camera/lib/feature_extractor/tfe/proto/tracking_feature.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
namespace camera {
namespace tracking_feature {
PROTOBUF_CONSTEXPR FeatureParam::FeatureParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.extractor_)*/{}
  , /*decltype(_impl_.remap_model_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.feat_stride_)*/32} {}
struct FeatureParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeatureParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeatureParamDefaultTypeInternal() {}
  union {
    FeatureParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeatureParamDefaultTypeInternal _FeatureParam_default_instance_;
PROTOBUF_CONSTEXPR ExtractorParam::ExtractorParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.feat_blob_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.roi_pooling_param_)*/nullptr
  , /*decltype(_impl_.ps_roi_pooling_param_)*/nullptr
  , /*decltype(_impl_.feat_type_)*/0} {}
struct ExtractorParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtractorParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtractorParamDefaultTypeInternal() {}
  union {
    ExtractorParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtractorParamDefaultTypeInternal _ExtractorParam_default_instance_;
PROTOBUF_CONSTEXPR ROIPoolingParam::ROIPoolingParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.use_floor_)*/false
  , /*decltype(_impl_.pooled_h_)*/3
  , /*decltype(_impl_.pooled_w_)*/3} {}
struct ROIPoolingParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ROIPoolingParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ROIPoolingParamDefaultTypeInternal() {}
  union {
    ROIPoolingParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ROIPoolingParamDefaultTypeInternal _ROIPoolingParam_default_instance_;
PROTOBUF_CONSTEXPR PSROIPoolingParam::PSROIPoolingParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sample_per_part_)*/4
  , /*decltype(_impl_.heat_map_a_)*/16
  , /*decltype(_impl_.output_dim_)*/10
  , /*decltype(_impl_.group_height_)*/7
  , /*decltype(_impl_.group_width_)*/7
  , /*decltype(_impl_.pooled_height_)*/7
  , /*decltype(_impl_.pooled_width_)*/7} {}
struct PSROIPoolingParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PSROIPoolingParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PSROIPoolingParamDefaultTypeInternal() {}
  union {
    PSROIPoolingParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PSROIPoolingParamDefaultTypeInternal _PSROIPoolingParam_default_instance_;
PROTOBUF_CONSTEXPR ExternalParam::ExternalParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.model_type_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.proto_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.weight_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.input_blob_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.feat_blob_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.feature_file_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.offset_ratio_)*/0.288889f
  , /*decltype(_impl_.resize_height_)*/1080
  , /*decltype(_impl_.resize_width_)*/1920} {}
struct ExternalParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExternalParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExternalParamDefaultTypeInternal() {}
  union {
    ExternalParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExternalParamDefaultTypeInternal _ExternalParam_default_instance_;
}  // namespace tracking_feature
}  // namespace camera
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _impl_.feat_stride_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _impl_.extractor_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _impl_.remap_model_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _impl_.feat_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _impl_.feat_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _impl_.roi_pooling_param_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _impl_.ps_roi_pooling_param_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _impl_.pooled_h_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _impl_.pooled_w_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _impl_.use_floor_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.heat_map_a_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.output_dim_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.group_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.group_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.pooled_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.pooled_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _impl_.sample_per_part_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.model_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.proto_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.weight_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.resize_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.resize_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.input_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.feat_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.offset_ratio_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _impl_.feature_file_),
  0,
  1,
  2,
  7,
  8,
  3,
  4,
  6,
  5,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::apollo::perception::camera::tracking_feature::FeatureParam)},
  { 12, 22, -1, sizeof(::apollo::perception::camera::tracking_feature::ExtractorParam)},
  { 26, 35, -1, sizeof(::apollo::perception::camera::tracking_feature::ROIPoolingParam)},
  { 38, 51, -1, sizeof(::apollo::perception::camera::tracking_feature::PSROIPoolingParam)},
  { 58, 73, -1, sizeof(::apollo::perception::camera::tracking_feature::ExternalParam)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::camera::tracking_feature::_FeatureParam_default_instance_._instance,
  &::apollo::perception::camera::tracking_feature::_ExtractorParam_default_instance_._instance,
  &::apollo::perception::camera::tracking_feature::_ROIPoolingParam_default_instance_._instance,
  &::apollo::perception::camera::tracking_feature::_PSROIPoolingParam_default_instance_._instance,
  &::apollo::perception::camera::tracking_feature::_ExternalParam_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nPmodules/perception/camera/lib/feature_"
  "extractor/tfe/proto/tracking_feature.pro"
  "to\022)apollo.perception.camera.tracking_fe"
  "ature\"\212\001\n\014FeatureParam\022\027\n\013feat_stride\030\001 "
  "\001(\005:\00232\022L\n\textractor\030\002 \003(\01329.apollo.perc"
  "eption.camera.tracking_feature.Extractor"
  "Param\022\023\n\013remap_model\030\003 \001(\t\"\333\002\n\016Extractor"
  "Param\022\021\n\tfeat_blob\030\001 \001(\t\022d\n\tfeat_type\030\002 "
  "\001(\0162E.apollo.perception.camera.tracking_"
  "feature.ExtractorParam.FeatureType:\nROIP"
  "ooling\022U\n\021roi_pooling_param\030\003 \001(\0132:.apol"
  "lo.perception.camera.tracking_feature.RO"
  "IPoolingParam\022Z\n\024ps_roi_pooling_param\030\004 "
  "\001(\0132<.apollo.perception.camera.tracking_"
  "feature.PSROIPoolingParam\"\035\n\013FeatureType"
  "\022\016\n\nROIPooling\020\000\"U\n\017ROIPoolingParam\022\023\n\010p"
  "ooled_h\030\001 \001(\005:\0013\022\023\n\010pooled_w\030\002 \001(\005:\0013\022\030\n"
  "\tuse_floor\030\003 \001(\010:\005false\"\303\001\n\021PSROIPooling"
  "Param\022\026\n\nheat_map_a\030\001 \001(\005:\00216\022\026\n\noutput_"
  "dim\030\002 \001(\005:\00210\022\027\n\014group_height\030\003 \001(\005:\0017\022\026"
  "\n\013group_width\030\004 \001(\005:\0017\022\030\n\rpooled_height\030"
  "\005 \001(\005:\0017\022\027\n\014pooled_width\030\006 \001(\005:\0017\022\032\n\017sam"
  "ple_per_part\030\007 \001(\005:\0014\"\217\002\n\rExternalParam\022"
  "\034\n\nmodel_type\030\001 \001(\t:\010CaffeNet\022\034\n\nproto_f"
  "ile\030\002 \001(\t:\010caffe.pt\022 \n\013weight_file\030\003 \001(\t"
  ":\013caffe.model\022\033\n\rresize_height\030\004 \001(\005:\00410"
  "80\022\032\n\014resize_width\030\005 \001(\005:\0041920\022\022\n\ninput_"
  "blob\030\006 \001(\t\022\021\n\tfeat_blob\030\007 \001(\t\022\036\n\014offset_"
  "ratio\030\010 \001(\002:\0100.288889\022 \n\014feature_file\030\t "
  "\001(\t:\nfeature.pt"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto = {
    false, false, 1175, descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto,
    "modules/perception/camera/lib/feature_extractor/tfe/proto/tracking_feature.proto",
    &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto::offsets,
    file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto, file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto,
    file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto(&descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto);
namespace apollo {
namespace perception {
namespace camera {
namespace tracking_feature {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ExtractorParam_FeatureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto);
  return file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[0];
}
bool ExtractorParam_FeatureType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ExtractorParam_FeatureType ExtractorParam::ROIPooling;
constexpr ExtractorParam_FeatureType ExtractorParam::FeatureType_MIN;
constexpr ExtractorParam_FeatureType ExtractorParam::FeatureType_MAX;
constexpr int ExtractorParam::FeatureType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class FeatureParam::_Internal {
 public:
  using HasBits = decltype(std::declval<FeatureParam>()._impl_._has_bits_);
  static void set_has_feat_stride(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_remap_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FeatureParam::FeatureParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.camera.tracking_feature.FeatureParam)
}
FeatureParam::FeatureParam(const FeatureParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.extractor_){from._impl_.extractor_}
    , decltype(_impl_.remap_model_){}
    , decltype(_impl_.feat_stride_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.remap_model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remap_model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_remap_model()) {
    _impl_.remap_model_.Set(from._internal_remap_model(), 
      GetArenaForAllocation());
  }
  _impl_.feat_stride_ = from._impl_.feat_stride_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.FeatureParam)
}

inline void FeatureParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.extractor_){arena}
    , decltype(_impl_.remap_model_){}
    , decltype(_impl_.feat_stride_){32}
  };
  _impl_.remap_model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remap_model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FeatureParam::~FeatureParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.FeatureParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FeatureParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extractor_.~RepeatedPtrField();
  _impl_.remap_model_.Destroy();
}

void FeatureParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FeatureParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.FeatureParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extractor_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.remap_model_.ClearNonDefaultToEmpty();
    }
    _impl_.feat_stride_ = 32;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FeatureParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 feat_stride = 1 [default = 32];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_feat_stride(&has_bits);
          _impl_.feat_stride_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.camera.tracking_feature.ExtractorParam extractor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extractor(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string remap_model = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_remap_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.FeatureParam.remap_model");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FeatureParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.FeatureParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 feat_stride = 1 [default = 32];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_feat_stride(), target);
  }

  // repeated .apollo.perception.camera.tracking_feature.ExtractorParam extractor = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extractor_size()); i < n; i++) {
    const auto& repfield = this->_internal_extractor(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string remap_model = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_remap_model().data(), static_cast<int>(this->_internal_remap_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.FeatureParam.remap_model");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_remap_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.FeatureParam)
  return target;
}

size_t FeatureParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.FeatureParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.camera.tracking_feature.ExtractorParam extractor = 2;
  total_size += 1UL * this->_internal_extractor_size();
  for (const auto& msg : this->_impl_.extractor_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string remap_model = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_remap_model());
    }

    // optional int32 feat_stride = 1 [default = 32];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_feat_stride());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FeatureParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FeatureParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FeatureParam::GetClassData() const { return &_class_data_; }

void FeatureParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FeatureParam *>(to)->MergeFrom(
      static_cast<const FeatureParam &>(from));
}


void FeatureParam::MergeFrom(const FeatureParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.FeatureParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.extractor_.MergeFrom(from._impl_.extractor_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_remap_model(from._internal_remap_model());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.feat_stride_ = from._impl_.feat_stride_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FeatureParam::CopyFrom(const FeatureParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.FeatureParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureParam::IsInitialized() const {
  return true;
}

void FeatureParam::InternalSwap(FeatureParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extractor_.InternalSwap(&other->_impl_.extractor_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.remap_model_, lhs_arena,
      &other->_impl_.remap_model_, rhs_arena
  );
  swap(_impl_.feat_stride_, other->_impl_.feat_stride_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FeatureParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_getter, &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once,
      file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[0]);
}

// ===================================================================

class ExtractorParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ExtractorParam>()._impl_._has_bits_);
  static void set_has_feat_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_feat_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::perception::camera::tracking_feature::ROIPoolingParam& roi_pooling_param(const ExtractorParam* msg);
  static void set_has_roi_pooling_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::perception::camera::tracking_feature::PSROIPoolingParam& ps_roi_pooling_param(const ExtractorParam* msg);
  static void set_has_ps_roi_pooling_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::perception::camera::tracking_feature::ROIPoolingParam&
ExtractorParam::_Internal::roi_pooling_param(const ExtractorParam* msg) {
  return *msg->_impl_.roi_pooling_param_;
}
const ::apollo::perception::camera::tracking_feature::PSROIPoolingParam&
ExtractorParam::_Internal::ps_roi_pooling_param(const ExtractorParam* msg) {
  return *msg->_impl_.ps_roi_pooling_param_;
}
ExtractorParam::ExtractorParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.camera.tracking_feature.ExtractorParam)
}
ExtractorParam::ExtractorParam(const ExtractorParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.feat_blob_){}
    , decltype(_impl_.roi_pooling_param_){nullptr}
    , decltype(_impl_.ps_roi_pooling_param_){nullptr}
    , decltype(_impl_.feat_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.feat_blob_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feat_blob_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_feat_blob()) {
    _impl_.feat_blob_.Set(from._internal_feat_blob(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_roi_pooling_param()) {
    _impl_.roi_pooling_param_ = new ::apollo::perception::camera::tracking_feature::ROIPoolingParam(*from._impl_.roi_pooling_param_);
  }
  if (from._internal_has_ps_roi_pooling_param()) {
    _impl_.ps_roi_pooling_param_ = new ::apollo::perception::camera::tracking_feature::PSROIPoolingParam(*from._impl_.ps_roi_pooling_param_);
  }
  _impl_.feat_type_ = from._impl_.feat_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.ExtractorParam)
}

inline void ExtractorParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.feat_blob_){}
    , decltype(_impl_.roi_pooling_param_){nullptr}
    , decltype(_impl_.ps_roi_pooling_param_){nullptr}
    , decltype(_impl_.feat_type_){0}
  };
  _impl_.feat_blob_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feat_blob_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExtractorParam::~ExtractorParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.ExtractorParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExtractorParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.feat_blob_.Destroy();
  if (this != internal_default_instance()) delete _impl_.roi_pooling_param_;
  if (this != internal_default_instance()) delete _impl_.ps_roi_pooling_param_;
}

void ExtractorParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExtractorParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.feat_blob_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.roi_pooling_param_ != nullptr);
      _impl_.roi_pooling_param_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.ps_roi_pooling_param_ != nullptr);
      _impl_.ps_roi_pooling_param_->Clear();
    }
  }
  _impl_.feat_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtractorParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string feat_blob = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_feat_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExtractorParam.feat_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType feat_type = 2 [default = ROIPooling];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::camera::tracking_feature::ExtractorParam_FeatureType_IsValid(val))) {
            _internal_set_feat_type(static_cast<::apollo::perception::camera::tracking_feature::ExtractorParam_FeatureType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.tracking_feature.ROIPoolingParam roi_pooling_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi_pooling_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.tracking_feature.PSROIPoolingParam ps_roi_pooling_param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ps_roi_pooling_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExtractorParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string feat_blob = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feat_blob().data(), static_cast<int>(this->_internal_feat_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExtractorParam.feat_blob");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_feat_blob(), target);
  }

  // optional .apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType feat_type = 2 [default = ROIPooling];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_feat_type(), target);
  }

  // optional .apollo.perception.camera.tracking_feature.ROIPoolingParam roi_pooling_param = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::roi_pooling_param(this),
        _Internal::roi_pooling_param(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.perception.camera.tracking_feature.PSROIPoolingParam ps_roi_pooling_param = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ps_roi_pooling_param(this),
        _Internal::ps_roi_pooling_param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.ExtractorParam)
  return target;
}

size_t ExtractorParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string feat_blob = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feat_blob());
    }

    // optional .apollo.perception.camera.tracking_feature.ROIPoolingParam roi_pooling_param = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.roi_pooling_param_);
    }

    // optional .apollo.perception.camera.tracking_feature.PSROIPoolingParam ps_roi_pooling_param = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ps_roi_pooling_param_);
    }

    // optional .apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType feat_type = 2 [default = ROIPooling];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_feat_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExtractorParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExtractorParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExtractorParam::GetClassData() const { return &_class_data_; }

void ExtractorParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExtractorParam *>(to)->MergeFrom(
      static_cast<const ExtractorParam &>(from));
}


void ExtractorParam::MergeFrom(const ExtractorParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_feat_blob(from._internal_feat_blob());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_roi_pooling_param()->::apollo::perception::camera::tracking_feature::ROIPoolingParam::MergeFrom(from._internal_roi_pooling_param());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_ps_roi_pooling_param()->::apollo::perception::camera::tracking_feature::PSROIPoolingParam::MergeFrom(from._internal_ps_roi_pooling_param());
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.feat_type_ = from._impl_.feat_type_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExtractorParam::CopyFrom(const ExtractorParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtractorParam::IsInitialized() const {
  return true;
}

void ExtractorParam::InternalSwap(ExtractorParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.feat_blob_, lhs_arena,
      &other->_impl_.feat_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExtractorParam, _impl_.feat_type_)
      + sizeof(ExtractorParam::_impl_.feat_type_)
      - PROTOBUF_FIELD_OFFSET(ExtractorParam, _impl_.roi_pooling_param_)>(
          reinterpret_cast<char*>(&_impl_.roi_pooling_param_),
          reinterpret_cast<char*>(&other->_impl_.roi_pooling_param_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtractorParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_getter, &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once,
      file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[1]);
}

// ===================================================================

class ROIPoolingParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ROIPoolingParam>()._impl_._has_bits_);
  static void set_has_pooled_h(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pooled_w(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_use_floor(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ROIPoolingParam::ROIPoolingParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.camera.tracking_feature.ROIPoolingParam)
}
ROIPoolingParam::ROIPoolingParam(const ROIPoolingParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.use_floor_){}
    , decltype(_impl_.pooled_h_){}
    , decltype(_impl_.pooled_w_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.use_floor_, &from._impl_.use_floor_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.pooled_w_) -
    reinterpret_cast<char*>(&_impl_.use_floor_)) + sizeof(_impl_.pooled_w_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.ROIPoolingParam)
}

inline void ROIPoolingParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.use_floor_){false}
    , decltype(_impl_.pooled_h_){3}
    , decltype(_impl_.pooled_w_){3}
  };
}

ROIPoolingParam::~ROIPoolingParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ROIPoolingParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ROIPoolingParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ROIPoolingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    _impl_.use_floor_ = false;
    _impl_.pooled_h_ = 3;
    _impl_.pooled_w_ = 3;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIPoolingParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 pooled_h = 1 [default = 3];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_pooled_h(&has_bits);
          _impl_.pooled_h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 pooled_w = 2 [default = 3];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_pooled_w(&has_bits);
          _impl_.pooled_w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool use_floor = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_use_floor(&has_bits);
          _impl_.use_floor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ROIPoolingParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 pooled_h = 1 [default = 3];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_pooled_h(), target);
  }

  // optional int32 pooled_w = 2 [default = 3];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_pooled_w(), target);
  }

  // optional bool use_floor = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_use_floor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  return target;
}

size_t ROIPoolingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool use_floor = 3 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 pooled_h = 1 [default = 3];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pooled_h());
    }

    // optional int32 pooled_w = 2 [default = 3];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pooled_w());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ROIPoolingParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ROIPoolingParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ROIPoolingParam::GetClassData() const { return &_class_data_; }

void ROIPoolingParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ROIPoolingParam *>(to)->MergeFrom(
      static_cast<const ROIPoolingParam &>(from));
}


void ROIPoolingParam::MergeFrom(const ROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.use_floor_ = from._impl_.use_floor_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.pooled_h_ = from._impl_.pooled_h_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.pooled_w_ = from._impl_.pooled_w_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ROIPoolingParam::CopyFrom(const ROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIPoolingParam::IsInitialized() const {
  return true;
}

void ROIPoolingParam::InternalSwap(ROIPoolingParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.use_floor_, other->_impl_.use_floor_);
  swap(_impl_.pooled_h_, other->_impl_.pooled_h_);
  swap(_impl_.pooled_w_, other->_impl_.pooled_w_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIPoolingParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_getter, &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once,
      file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[2]);
}

// ===================================================================

class PSROIPoolingParam::_Internal {
 public:
  using HasBits = decltype(std::declval<PSROIPoolingParam>()._impl_._has_bits_);
  static void set_has_heat_map_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_output_dim(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_group_height(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_group_width(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_pooled_height(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_pooled_width(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_sample_per_part(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PSROIPoolingParam::PSROIPoolingParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
}
PSROIPoolingParam::PSROIPoolingParam(const PSROIPoolingParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sample_per_part_){}
    , decltype(_impl_.heat_map_a_){}
    , decltype(_impl_.output_dim_){}
    , decltype(_impl_.group_height_){}
    , decltype(_impl_.group_width_){}
    , decltype(_impl_.pooled_height_){}
    , decltype(_impl_.pooled_width_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.sample_per_part_, &from._impl_.sample_per_part_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.pooled_width_) -
    reinterpret_cast<char*>(&_impl_.sample_per_part_)) + sizeof(_impl_.pooled_width_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
}

inline void PSROIPoolingParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sample_per_part_){4}
    , decltype(_impl_.heat_map_a_){16}
    , decltype(_impl_.output_dim_){10}
    , decltype(_impl_.group_height_){7}
    , decltype(_impl_.group_width_){7}
    , decltype(_impl_.pooled_height_){7}
    , decltype(_impl_.pooled_width_){7}
  };
}

PSROIPoolingParam::~PSROIPoolingParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PSROIPoolingParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PSROIPoolingParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PSROIPoolingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    _impl_.sample_per_part_ = 4;
    _impl_.heat_map_a_ = 16;
    _impl_.output_dim_ = 10;
    _impl_.group_height_ = 7;
    _impl_.group_width_ = 7;
    _impl_.pooled_height_ = 7;
    _impl_.pooled_width_ = 7;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PSROIPoolingParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 heat_map_a = 1 [default = 16];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_heat_map_a(&has_bits);
          _impl_.heat_map_a_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 output_dim = 2 [default = 10];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_output_dim(&has_bits);
          _impl_.output_dim_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 group_height = 3 [default = 7];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_group_height(&has_bits);
          _impl_.group_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 group_width = 4 [default = 7];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_group_width(&has_bits);
          _impl_.group_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 pooled_height = 5 [default = 7];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_pooled_height(&has_bits);
          _impl_.pooled_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 pooled_width = 6 [default = 7];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_pooled_width(&has_bits);
          _impl_.pooled_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 sample_per_part = 7 [default = 4];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_sample_per_part(&has_bits);
          _impl_.sample_per_part_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PSROIPoolingParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 heat_map_a = 1 [default = 16];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_heat_map_a(), target);
  }

  // optional int32 output_dim = 2 [default = 10];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_output_dim(), target);
  }

  // optional int32 group_height = 3 [default = 7];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_group_height(), target);
  }

  // optional int32 group_width = 4 [default = 7];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_group_width(), target);
  }

  // optional int32 pooled_height = 5 [default = 7];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_pooled_height(), target);
  }

  // optional int32 pooled_width = 6 [default = 7];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_pooled_width(), target);
  }

  // optional int32 sample_per_part = 7 [default = 4];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_sample_per_part(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  return target;
}

size_t PSROIPoolingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional int32 sample_per_part = 7 [default = 4];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_sample_per_part());
    }

    // optional int32 heat_map_a = 1 [default = 16];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_heat_map_a());
    }

    // optional int32 output_dim = 2 [default = 10];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_output_dim());
    }

    // optional int32 group_height = 3 [default = 7];
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_group_height());
    }

    // optional int32 group_width = 4 [default = 7];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_group_width());
    }

    // optional int32 pooled_height = 5 [default = 7];
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pooled_height());
    }

    // optional int32 pooled_width = 6 [default = 7];
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pooled_width());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PSROIPoolingParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PSROIPoolingParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PSROIPoolingParam::GetClassData() const { return &_class_data_; }

void PSROIPoolingParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PSROIPoolingParam *>(to)->MergeFrom(
      static_cast<const PSROIPoolingParam &>(from));
}


void PSROIPoolingParam::MergeFrom(const PSROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sample_per_part_ = from._impl_.sample_per_part_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.heat_map_a_ = from._impl_.heat_map_a_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.output_dim_ = from._impl_.output_dim_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.group_height_ = from._impl_.group_height_;
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.group_width_ = from._impl_.group_width_;
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.pooled_height_ = from._impl_.pooled_height_;
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.pooled_width_ = from._impl_.pooled_width_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PSROIPoolingParam::CopyFrom(const PSROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSROIPoolingParam::IsInitialized() const {
  return true;
}

void PSROIPoolingParam::InternalSwap(PSROIPoolingParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sample_per_part_, other->_impl_.sample_per_part_);
  swap(_impl_.heat_map_a_, other->_impl_.heat_map_a_);
  swap(_impl_.output_dim_, other->_impl_.output_dim_);
  swap(_impl_.group_height_, other->_impl_.group_height_);
  swap(_impl_.group_width_, other->_impl_.group_width_);
  swap(_impl_.pooled_height_, other->_impl_.pooled_height_);
  swap(_impl_.pooled_width_, other->_impl_.pooled_width_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PSROIPoolingParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_getter, &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once,
      file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[3]);
}

// ===================================================================

class ExternalParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ExternalParam>()._impl_._has_bits_);
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_proto_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_weight_file(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_resize_height(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_resize_width(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_input_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_feat_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_offset_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_feature_file(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_model_type_{{{"CaffeNet", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_proto_file_{{{"caffe.pt", 8}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_weight_file_{{{"caffe.model", 11}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_feature_file_{{{"feature.pt", 10}}, {nullptr}};
ExternalParam::ExternalParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.camera.tracking_feature.ExternalParam)
}
ExternalParam::ExternalParam(const ExternalParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.model_type_){}
    , decltype(_impl_.proto_file_){}
    , decltype(_impl_.weight_file_){}
    , decltype(_impl_.input_blob_){}
    , decltype(_impl_.feat_blob_){}
    , decltype(_impl_.feature_file_){}
    , decltype(_impl_.offset_ratio_){}
    , decltype(_impl_.resize_height_){}
    , decltype(_impl_.resize_width_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_type_.InitDefault();
  if (from._internal_has_model_type()) {
    _impl_.model_type_.Set(from._internal_model_type(), 
      GetArenaForAllocation());
  }
  _impl_.proto_file_.InitDefault();
  if (from._internal_has_proto_file()) {
    _impl_.proto_file_.Set(from._internal_proto_file(), 
      GetArenaForAllocation());
  }
  _impl_.weight_file_.InitDefault();
  if (from._internal_has_weight_file()) {
    _impl_.weight_file_.Set(from._internal_weight_file(), 
      GetArenaForAllocation());
  }
  _impl_.input_blob_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_blob_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_input_blob()) {
    _impl_.input_blob_.Set(from._internal_input_blob(), 
      GetArenaForAllocation());
  }
  _impl_.feat_blob_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feat_blob_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_feat_blob()) {
    _impl_.feat_blob_.Set(from._internal_feat_blob(), 
      GetArenaForAllocation());
  }
  _impl_.feature_file_.InitDefault();
  if (from._internal_has_feature_file()) {
    _impl_.feature_file_.Set(from._internal_feature_file(), 
      GetArenaForAllocation());
  }
  ::memcpy(&_impl_.offset_ratio_, &from._impl_.offset_ratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.resize_width_) -
    reinterpret_cast<char*>(&_impl_.offset_ratio_)) + sizeof(_impl_.resize_width_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.ExternalParam)
}

inline void ExternalParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.model_type_){}
    , decltype(_impl_.proto_file_){}
    , decltype(_impl_.weight_file_){}
    , decltype(_impl_.input_blob_){}
    , decltype(_impl_.feat_blob_){}
    , decltype(_impl_.feature_file_){}
    , decltype(_impl_.offset_ratio_){0.288889f}
    , decltype(_impl_.resize_height_){1080}
    , decltype(_impl_.resize_width_){1920}
  };
  _impl_.model_type_.InitDefault();
  _impl_.proto_file_.InitDefault();
  _impl_.weight_file_.InitDefault();
  _impl_.input_blob_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.input_blob_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feat_blob_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.feat_blob_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.feature_file_.InitDefault();
}

ExternalParam::~ExternalParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.ExternalParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExternalParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_type_.Destroy();
  _impl_.proto_file_.Destroy();
  _impl_.weight_file_.Destroy();
  _impl_.input_blob_.Destroy();
  _impl_.feat_blob_.Destroy();
  _impl_.feature_file_.Destroy();
}

void ExternalParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExternalParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.ExternalParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.model_type_.ClearToDefault(::apollo::perception::camera::tracking_feature::ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_model_type_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000002u) {
      _impl_.proto_file_.ClearToDefault(::apollo::perception::camera::tracking_feature::ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_proto_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000004u) {
      _impl_.weight_file_.ClearToDefault(::apollo::perception::camera::tracking_feature::ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_weight_file_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000008u) {
      _impl_.input_blob_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.feat_blob_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.feature_file_.ClearToDefault(::apollo::perception::camera::tracking_feature::ExternalParam::Impl_::_i_give_permission_to_break_this_code_default_feature_file_, GetArenaForAllocation());
       }
    _impl_.offset_ratio_ = 0.288889f;
    _impl_.resize_height_ = 1080;
  }
  _impl_.resize_width_ = 1920;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExternalParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string model_type = 1 [default = "CaffeNet"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.model_type");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string proto_file = 2 [default = "caffe.pt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proto_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.proto_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string weight_file = 3 [default = "caffe.model"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_weight_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.weight_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional int32 resize_height = 4 [default = 1080];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_resize_height(&has_bits);
          _impl_.resize_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 resize_width = 5 [default = 1920];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_resize_width(&has_bits);
          _impl_.resize_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string input_blob = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_input_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.input_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string feat_blob = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_feat_blob();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.feat_blob");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional float offset_ratio = 8 [default = 0.288889];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _Internal::set_has_offset_ratio(&has_bits);
          _impl_.offset_ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional string feature_file = 9 [default = "feature.pt"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_feature_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.feature_file");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExternalParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.ExternalParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string model_type = 1 [default = "CaffeNet"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_type().data(), static_cast<int>(this->_internal_model_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.model_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_type(), target);
  }

  // optional string proto_file = 2 [default = "caffe.pt"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_proto_file().data(), static_cast<int>(this->_internal_proto_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.proto_file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto_file(), target);
  }

  // optional string weight_file = 3 [default = "caffe.model"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_weight_file().data(), static_cast<int>(this->_internal_weight_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.weight_file");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_weight_file(), target);
  }

  // optional int32 resize_height = 4 [default = 1080];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_resize_height(), target);
  }

  // optional int32 resize_width = 5 [default = 1920];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_resize_width(), target);
  }

  // optional string input_blob = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_input_blob().data(), static_cast<int>(this->_internal_input_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.input_blob");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_input_blob(), target);
  }

  // optional string feat_blob = 7;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feat_blob().data(), static_cast<int>(this->_internal_feat_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.feat_blob");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_feat_blob(), target);
  }

  // optional float offset_ratio = 8 [default = 0.288889];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_offset_ratio(), target);
  }

  // optional string feature_file = 9 [default = "feature.pt"];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feature_file().data(), static_cast<int>(this->_internal_feature_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.feature_file");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_feature_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.ExternalParam)
  return target;
}

size_t ExternalParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.ExternalParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string model_type = 1 [default = "CaffeNet"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_type());
    }

    // optional string proto_file = 2 [default = "caffe.pt"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_proto_file());
    }

    // optional string weight_file = 3 [default = "caffe.model"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_weight_file());
    }

    // optional string input_blob = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_input_blob());
    }

    // optional string feat_blob = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feat_blob());
    }

    // optional string feature_file = 9 [default = "feature.pt"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feature_file());
    }

    // optional float offset_ratio = 8 [default = 0.288889];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional int32 resize_height = 4 [default = 1080];
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resize_height());
    }

  }
  // optional int32 resize_width = 5 [default = 1920];
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resize_width());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExternalParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExternalParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExternalParam::GetClassData() const { return &_class_data_; }

void ExternalParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExternalParam *>(to)->MergeFrom(
      static_cast<const ExternalParam &>(from));
}


void ExternalParam::MergeFrom(const ExternalParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.ExternalParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_model_type(from._internal_model_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_proto_file(from._internal_proto_file());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_weight_file(from._internal_weight_file());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_input_blob(from._internal_input_blob());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_feat_blob(from._internal_feat_blob());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_feature_file(from._internal_feature_file());
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.offset_ratio_ = from._impl_.offset_ratio_;
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.resize_height_ = from._impl_.resize_height_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_resize_width(from._internal_resize_width());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExternalParam::CopyFrom(const ExternalParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.ExternalParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalParam::IsInitialized() const {
  return true;
}

void ExternalParam::InternalSwap(ExternalParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_type_, lhs_arena,
      &other->_impl_.model_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.proto_file_, lhs_arena,
      &other->_impl_.proto_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.weight_file_, lhs_arena,
      &other->_impl_.weight_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.input_blob_, lhs_arena,
      &other->_impl_.input_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.feat_blob_, lhs_arena,
      &other->_impl_.feat_blob_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.feature_file_, lhs_arena,
      &other->_impl_.feature_file_, rhs_arena
  );
  swap(_impl_.offset_ratio_, other->_impl_.offset_ratio_);
  swap(_impl_.resize_height_, other->_impl_.resize_height_);
  swap(_impl_.resize_width_, other->_impl_.resize_width_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExternalParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_getter, &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto_once,
      file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2fproto_2ftracking_5ffeature_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tracking_feature
}  // namespace camera
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::FeatureParam*
Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::FeatureParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::camera::tracking_feature::FeatureParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::ExtractorParam*
Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::ExtractorParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::camera::tracking_feature::ExtractorParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::ROIPoolingParam*
Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::ROIPoolingParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::camera::tracking_feature::ROIPoolingParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::PSROIPoolingParam*
Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::PSROIPoolingParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::camera::tracking_feature::PSROIPoolingParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::ExternalParam*
Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::ExternalParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::camera::tracking_feature::ExternalParam >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
