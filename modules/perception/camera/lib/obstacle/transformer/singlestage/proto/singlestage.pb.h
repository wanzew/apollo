// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/obstacle/transformer/singlestage/proto/singlestage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto;
namespace apollo {
namespace perception {
namespace camera {
namespace singlestage {
class SinglestageParam;
struct SinglestageParamDefaultTypeInternal;
extern SinglestageParamDefaultTypeInternal _SinglestageParam_default_instance_;
}  // namespace singlestage
}  // namespace camera
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::perception::camera::singlestage::SinglestageParam* Arena::CreateMaybeMessage<::apollo::perception::camera::singlestage::SinglestageParam>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace perception {
namespace camera {
namespace singlestage {

// ===================================================================

class SinglestageParam final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.camera.singlestage.SinglestageParam) */ {
 public:
  inline SinglestageParam() : SinglestageParam(nullptr) {}
  ~SinglestageParam() override;
  explicit PROTOBUF_CONSTEXPR SinglestageParam(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SinglestageParam(const SinglestageParam& from);
  SinglestageParam(SinglestageParam&& from) noexcept
    : SinglestageParam() {
    *this = ::std::move(from);
  }

  inline SinglestageParam& operator=(const SinglestageParam& from) {
    CopyFrom(from);
    return *this;
  }
  inline SinglestageParam& operator=(SinglestageParam&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SinglestageParam& default_instance() {
    return *internal_default_instance();
  }
  static inline const SinglestageParam* internal_default_instance() {
    return reinterpret_cast<const SinglestageParam*>(
               &_SinglestageParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SinglestageParam& a, SinglestageParam& b) {
    a.Swap(&b);
  }
  inline void Swap(SinglestageParam* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SinglestageParam* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SinglestageParam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SinglestageParam>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SinglestageParam& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SinglestageParam& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SinglestageParam* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.camera.singlestage.SinglestageParam";
  }
  protected:
  explicit SinglestageParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinDimensionValFieldNumber = 1,
    kCheckDimensionFieldNumber = 2,
  };
  // optional float min_dimension_val = 1 [default = 0.2];
  bool has_min_dimension_val() const;
  private:
  bool _internal_has_min_dimension_val() const;
  public:
  void clear_min_dimension_val();
  float min_dimension_val() const;
  void set_min_dimension_val(float value);
  private:
  float _internal_min_dimension_val() const;
  void _internal_set_min_dimension_val(float value);
  public:

  // optional bool check_dimension = 2 [default = true];
  bool has_check_dimension() const;
  private:
  bool _internal_has_check_dimension() const;
  public:
  void clear_check_dimension();
  bool check_dimension() const;
  void set_check_dimension(bool value);
  private:
  bool _internal_check_dimension() const;
  void _internal_set_check_dimension(bool value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.singlestage.SinglestageParam)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float min_dimension_val_;
    bool check_dimension_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SinglestageParam

// optional float min_dimension_val = 1 [default = 0.2];
inline bool SinglestageParam::_internal_has_min_dimension_val() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SinglestageParam::has_min_dimension_val() const {
  return _internal_has_min_dimension_val();
}
inline void SinglestageParam::clear_min_dimension_val() {
  _impl_.min_dimension_val_ = 0.2f;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float SinglestageParam::_internal_min_dimension_val() const {
  return _impl_.min_dimension_val_;
}
inline float SinglestageParam::min_dimension_val() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.singlestage.SinglestageParam.min_dimension_val)
  return _internal_min_dimension_val();
}
inline void SinglestageParam::_internal_set_min_dimension_val(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.min_dimension_val_ = value;
}
inline void SinglestageParam::set_min_dimension_val(float value) {
  _internal_set_min_dimension_val(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.singlestage.SinglestageParam.min_dimension_val)
}

// optional bool check_dimension = 2 [default = true];
inline bool SinglestageParam::_internal_has_check_dimension() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SinglestageParam::has_check_dimension() const {
  return _internal_has_check_dimension();
}
inline void SinglestageParam::clear_check_dimension() {
  _impl_.check_dimension_ = true;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SinglestageParam::_internal_check_dimension() const {
  return _impl_.check_dimension_;
}
inline bool SinglestageParam::check_dimension() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.singlestage.SinglestageParam.check_dimension)
  return _internal_check_dimension();
}
inline void SinglestageParam::_internal_set_check_dimension(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.check_dimension_ = value;
}
inline void SinglestageParam::set_check_dimension(bool value) {
  _internal_set_check_dimension(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.singlestage.SinglestageParam.check_dimension)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace singlestage
}  // namespace camera
}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fcamera_2flib_2fobstacle_2ftransformer_2fsinglestage_2fproto_2fsinglestage_2eproto
