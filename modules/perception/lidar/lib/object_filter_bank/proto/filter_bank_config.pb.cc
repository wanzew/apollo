// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/lidar/lib/object_filter_bank/proto/filter_bank_config.proto

#include "modules/perception/lidar/lib/object_filter_bank/proto/filter_bank_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
namespace lidar {
PROTOBUF_CONSTEXPR FilterBankConfig::FilterBankConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.filter_name_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FilterBankConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilterBankConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilterBankConfigDefaultTypeInternal() {}
  union {
    FilterBankConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilterBankConfigDefaultTypeInternal _FilterBankConfig_default_instance_;
}  // namespace lidar
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::FilterBankConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::FilterBankConfig, _impl_.filter_name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::apollo::perception::lidar::FilterBankConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::lidar::_FilterBankConfig_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nNmodules/perception/lidar/lib/object_fi"
  "lter_bank/proto/filter_bank_config.proto"
  "\022\027apollo.perception.lidar\"\'\n\020FilterBankC"
  "onfig\022\023\n\013filter_name\030\001 \003(\t"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto = {
    false, false, 146, descriptor_table_protodef_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto,
    "modules/perception/lidar/lib/object_filter_bank/proto/filter_bank_config.proto",
    &descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto::offsets,
    file_level_metadata_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto, file_level_enum_descriptors_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto,
    file_level_service_descriptors_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto(&descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto);
namespace apollo {
namespace perception {
namespace lidar {

// ===================================================================

class FilterBankConfig::_Internal {
 public:
};

FilterBankConfig::FilterBankConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.lidar.FilterBankConfig)
}
FilterBankConfig::FilterBankConfig(const FilterBankConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.filter_name_){from._impl_.filter_name_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.lidar.FilterBankConfig)
}

inline void FilterBankConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.filter_name_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FilterBankConfig::~FilterBankConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.lidar.FilterBankConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FilterBankConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.filter_name_.~RepeatedPtrField();
}

void FilterBankConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FilterBankConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.lidar.FilterBankConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filter_name_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FilterBankConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string filter_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_filter_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "apollo.perception.lidar.FilterBankConfig.filter_name");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FilterBankConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.lidar.FilterBankConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string filter_name = 1;
  for (int i = 0, n = this->_internal_filter_name_size(); i < n; i++) {
    const auto& s = this->_internal_filter_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.lidar.FilterBankConfig.filter_name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.lidar.FilterBankConfig)
  return target;
}

size_t FilterBankConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.lidar.FilterBankConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string filter_name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.filter_name_.size());
  for (int i = 0, n = _impl_.filter_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.filter_name_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FilterBankConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FilterBankConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FilterBankConfig::GetClassData() const { return &_class_data_; }

void FilterBankConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FilterBankConfig *>(to)->MergeFrom(
      static_cast<const FilterBankConfig &>(from));
}


void FilterBankConfig::MergeFrom(const FilterBankConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.lidar.FilterBankConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.filter_name_.MergeFrom(from._impl_.filter_name_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FilterBankConfig::CopyFrom(const FilterBankConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.lidar.FilterBankConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterBankConfig::IsInitialized() const {
  return true;
}

void FilterBankConfig::InternalSwap(FilterBankConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.filter_name_.InternalSwap(&other->_impl_.filter_name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FilterBankConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2flidar_2flib_2fobject_5ffilter_5fbank_2fproto_2ffilter_5fbank_5fconfig_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace lidar
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::lidar::FilterBankConfig*
Arena::CreateMaybeMessage< ::apollo::perception::lidar::FilterBankConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::lidar::FilterBankConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
