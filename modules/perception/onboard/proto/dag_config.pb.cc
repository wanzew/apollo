// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/onboard/proto/dag_config.proto

#include "modules/perception/onboard/proto/dag_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
PROTOBUF_CONSTEXPR DAGConfig_Subnode::DAGConfig_Subnode(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reserve_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.type_)*/3} {}
struct DAGConfig_SubnodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_SubnodeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_SubnodeDefaultTypeInternal() {}
  union {
    DAGConfig_Subnode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_SubnodeDefaultTypeInternal _DAGConfig_Subnode_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig_SubnodeConfig::DAGConfig_SubnodeConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subnodes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DAGConfig_SubnodeConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_SubnodeConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_SubnodeConfigDefaultTypeInternal() {}
  union {
    DAGConfig_SubnodeConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_SubnodeConfigDefaultTypeInternal _DAGConfig_SubnodeConfig_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig_Event::DAGConfig_Event(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0} {}
struct DAGConfig_EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_EventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_EventDefaultTypeInternal() {}
  union {
    DAGConfig_Event _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_EventDefaultTypeInternal _DAGConfig_Event_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig_Edge::DAGConfig_Edge(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.from_node_)*/0
  , /*decltype(_impl_.to_node_)*/0} {}
struct DAGConfig_EdgeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_EdgeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_EdgeDefaultTypeInternal() {}
  union {
    DAGConfig_Edge _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_EdgeDefaultTypeInternal _DAGConfig_Edge_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig_EdgeConfig::DAGConfig_EdgeConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.edges_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DAGConfig_EdgeConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_EdgeConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_EdgeConfigDefaultTypeInternal() {}
  union {
    DAGConfig_EdgeConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_EdgeConfigDefaultTypeInternal _DAGConfig_EdgeConfig_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig_SharedData::DAGConfig_SharedData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0} {}
struct DAGConfig_SharedDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_SharedDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_SharedDataDefaultTypeInternal() {}
  union {
    DAGConfig_SharedData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_SharedDataDefaultTypeInternal _DAGConfig_SharedData_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig_SharedDataConfig::DAGConfig_SharedDataConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.datas_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DAGConfig_SharedDataConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfig_SharedDataConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfig_SharedDataConfigDefaultTypeInternal() {}
  union {
    DAGConfig_SharedDataConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfig_SharedDataConfigDefaultTypeInternal _DAGConfig_SharedDataConfig_default_instance_;
PROTOBUF_CONSTEXPR DAGConfig::DAGConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.subnode_config_)*/nullptr
  , /*decltype(_impl_.edge_config_)*/nullptr
  , /*decltype(_impl_.data_config_)*/nullptr} {}
struct DAGConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DAGConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DAGConfigDefaultTypeInternal() {}
  union {
    DAGConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DAGConfigDefaultTypeInternal _DAGConfig_default_instance_;
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Subnode, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Subnode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Subnode, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Subnode, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Subnode, _impl_.reserve_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Subnode, _impl_.type_),
  2,
  0,
  1,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SubnodeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SubnodeConfig, _impl_.subnodes_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Event, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Event, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Event, _impl_.name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Edge, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Edge, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Edge, _impl_.from_node_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Edge, _impl_.to_node_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_Edge, _impl_.events_),
  0,
  1,
  2,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_EdgeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_EdgeConfig, _impl_.edges_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SharedData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SharedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SharedData, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SharedData, _impl_.name_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SharedDataConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig_SharedDataConfig, _impl_.datas_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig, _impl_.subnode_config_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig, _impl_.edge_config_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::DAGConfig, _impl_.data_config_),
  0,
  1,
  2,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::apollo::perception::DAGConfig_Subnode)},
  { 14, -1, -1, sizeof(::apollo::perception::DAGConfig_SubnodeConfig)},
  { 21, 29, -1, sizeof(::apollo::perception::DAGConfig_Event)},
  { 31, 41, -1, sizeof(::apollo::perception::DAGConfig_Edge)},
  { 45, -1, -1, sizeof(::apollo::perception::DAGConfig_EdgeConfig)},
  { 52, 60, -1, sizeof(::apollo::perception::DAGConfig_SharedData)},
  { 62, -1, -1, sizeof(::apollo::perception::DAGConfig_SharedDataConfig)},
  { 69, 78, -1, sizeof(::apollo::perception::DAGConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::_DAGConfig_Subnode_default_instance_._instance,
  &::apollo::perception::_DAGConfig_SubnodeConfig_default_instance_._instance,
  &::apollo::perception::_DAGConfig_Event_default_instance_._instance,
  &::apollo::perception::_DAGConfig_Edge_default_instance_._instance,
  &::apollo::perception::_DAGConfig_EdgeConfig_default_instance_._instance,
  &::apollo::perception::_DAGConfig_SharedData_default_instance_._instance,
  &::apollo::perception::_DAGConfig_SharedDataConfig_default_instance_._instance,
  &::apollo::perception::_DAGConfig_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1modules/perception/onboard/proto/dag_c"
  "onfig.proto\022\021apollo.perception\"\237\006\n\tDAGCo"
  "nfig\022B\n\016subnode_config\030\001 \002(\0132*.apollo.pe"
  "rception.DAGConfig.SubnodeConfig\022<\n\013edge"
  "_config\030\002 \002(\0132\'.apollo.perception.DAGCon"
  "fig.EdgeConfig\022B\n\013data_config\030\003 \002(\0132-.ap"
  "ollo.perception.DAGConfig.SharedDataConf"
  "ig\032|\n\007Subnode\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022"
  "\017\n\007reserve\030\003 \001(\t\022F\n\004type\030\004 \001(\0162(.apollo."
  "perception.DAGConfig.SubnodeType:\016SUBNOD"
  "E_NORMAL\032G\n\rSubnodeConfig\0226\n\010subnodes\030\001 "
  "\003(\0132$.apollo.perception.DAGConfig.Subnod"
  "e\032!\n\005Event\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \001(\t\032j\n\004"
  "Edge\022\n\n\002id\030\001 \002(\005\022\021\n\tfrom_node\030\002 \002(\005\022\017\n\007t"
  "o_node\030\003 \002(\005\0222\n\006events\030\004 \003(\0132\".apollo.pe"
  "rception.DAGConfig.Event\032>\n\nEdgeConfig\0220"
  "\n\005edges\030\001 \003(\0132!.apollo.perception.DAGCon"
  "fig.Edge\032&\n\nSharedData\022\n\n\002id\030\001 \002(\005\022\014\n\004na"
  "me\030\002 \002(\t\032J\n\020SharedDataConfig\0226\n\005datas\030\001 "
  "\003(\0132\'.apollo.perception.DAGConfig.Shared"
  "Data\"B\n\013SubnodeType\022\016\n\nSUBNODE_IN\020\001\022\017\n\013S"
  "UBNODE_OUT\020\002\022\022\n\016SUBNODE_NORMAL\020\003"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto = {
    false, false, 872, descriptor_table_protodef_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto,
    "modules/perception/onboard/proto/dag_config.proto",
    &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto::offsets,
    file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto, file_level_enum_descriptors_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto,
    file_level_service_descriptors_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto(&descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto);
namespace apollo {
namespace perception {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DAGConfig_SubnodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto);
  return file_level_enum_descriptors_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[0];
}
bool DAGConfig_SubnodeType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DAGConfig_SubnodeType DAGConfig::SUBNODE_IN;
constexpr DAGConfig_SubnodeType DAGConfig::SUBNODE_OUT;
constexpr DAGConfig_SubnodeType DAGConfig::SUBNODE_NORMAL;
constexpr DAGConfig_SubnodeType DAGConfig::SubnodeType_MIN;
constexpr DAGConfig_SubnodeType DAGConfig::SubnodeType_MAX;
constexpr int DAGConfig::SubnodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class DAGConfig_Subnode::_Internal {
 public:
  using HasBits = decltype(std::declval<DAGConfig_Subnode>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_reserve(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000005) ^ 0x00000005) != 0;
  }
};

DAGConfig_Subnode::DAGConfig_Subnode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.Subnode)
}
DAGConfig_Subnode::DAGConfig_Subnode(const DAGConfig_Subnode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.reserve_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.reserve_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reserve_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_reserve()) {
    _impl_.reserve_.Set(from._internal_reserve(), 
      GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.Subnode)
}

inline void DAGConfig_Subnode::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.reserve_){}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.type_){3}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reserve_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reserve_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DAGConfig_Subnode::~DAGConfig_Subnode() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.Subnode)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_Subnode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.reserve_.Destroy();
}

void DAGConfig_Subnode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_Subnode::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.Subnode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.reserve_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    _impl_.id_ = 0;
    _impl_.type_ = 3;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_Subnode::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.DAGConfig.Subnode.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string reserve = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_reserve();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.DAGConfig.Subnode.reserve");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::DAGConfig_SubnodeType_IsValid(val))) {
            _internal_set_type(static_cast<::apollo::perception::DAGConfig_SubnodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_Subnode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.Subnode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Subnode.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string reserve = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reserve().data(), static_cast<int>(this->_internal_reserve().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Subnode.reserve");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reserve(), target);
  }

  // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.Subnode)
  return target;
}

size_t DAGConfig_Subnode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig.Subnode)
  size_t total_size = 0;

  if (_internal_has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (_internal_has_id()) {
    // required int32 id = 1;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return total_size;
}
size_t DAGConfig_Subnode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.Subnode)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());

    // required int32 id = 1;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string reserve = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reserve());
  }

  // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_Subnode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_Subnode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_Subnode::GetClassData() const { return &_class_data_; }

void DAGConfig_Subnode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_Subnode *>(to)->MergeFrom(
      static_cast<const DAGConfig_Subnode &>(from));
}


void DAGConfig_Subnode::MergeFrom(const DAGConfig_Subnode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.Subnode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_reserve(from._internal_reserve());
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.type_ = from._impl_.type_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_Subnode::CopyFrom(const DAGConfig_Subnode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.Subnode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_Subnode::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void DAGConfig_Subnode::InternalSwap(DAGConfig_Subnode* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reserve_, lhs_arena,
      &other->_impl_.reserve_, rhs_arena
  );
  swap(_impl_.id_, other->_impl_.id_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_Subnode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[0]);
}

// ===================================================================

class DAGConfig_SubnodeConfig::_Internal {
 public:
};

DAGConfig_SubnodeConfig::DAGConfig_SubnodeConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.SubnodeConfig)
}
DAGConfig_SubnodeConfig::DAGConfig_SubnodeConfig(const DAGConfig_SubnodeConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.subnodes_){from._impl_.subnodes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.SubnodeConfig)
}

inline void DAGConfig_SubnodeConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.subnodes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DAGConfig_SubnodeConfig::~DAGConfig_SubnodeConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.SubnodeConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_SubnodeConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subnodes_.~RepeatedPtrField();
}

void DAGConfig_SubnodeConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_SubnodeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.SubnodeConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subnodes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_SubnodeConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subnodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_SubnodeConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.SubnodeConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subnodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_subnodes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.SubnodeConfig)
  return target;
}

size_t DAGConfig_SubnodeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.SubnodeConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
  total_size += 1UL * this->_internal_subnodes_size();
  for (const auto& msg : this->_impl_.subnodes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_SubnodeConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_SubnodeConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_SubnodeConfig::GetClassData() const { return &_class_data_; }

void DAGConfig_SubnodeConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_SubnodeConfig *>(to)->MergeFrom(
      static_cast<const DAGConfig_SubnodeConfig &>(from));
}


void DAGConfig_SubnodeConfig::MergeFrom(const DAGConfig_SubnodeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.SubnodeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.subnodes_.MergeFrom(from._impl_.subnodes_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_SubnodeConfig::CopyFrom(const DAGConfig_SubnodeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.SubnodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_SubnodeConfig::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.subnodes_))
    return false;
  return true;
}

void DAGConfig_SubnodeConfig::InternalSwap(DAGConfig_SubnodeConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subnodes_.InternalSwap(&other->_impl_.subnodes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_SubnodeConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[1]);
}

// ===================================================================

class DAGConfig_Event::_Internal {
 public:
  using HasBits = decltype(std::declval<DAGConfig_Event>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

DAGConfig_Event::DAGConfig_Event(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.Event)
}
DAGConfig_Event::DAGConfig_Event(const DAGConfig_Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.Event)
}

inline void DAGConfig_Event::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.id_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DAGConfig_Event::~DAGConfig_Event() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.Event)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_Event::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DAGConfig_Event::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.Event)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_Event::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.DAGConfig.Event.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_Event::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.Event)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Event.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.Event)
  return target;
}

size_t DAGConfig_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.Event)
  size_t total_size = 0;

  // required int32 id = 1;
  if (_internal_has_id()) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_Event::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_Event::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_Event::GetClassData() const { return &_class_data_; }

void DAGConfig_Event::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_Event *>(to)->MergeFrom(
      static_cast<const DAGConfig_Event &>(from));
}


void DAGConfig_Event::MergeFrom(const DAGConfig_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.Event)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.id_ = from._impl_.id_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_Event::CopyFrom(const DAGConfig_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_Event::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void DAGConfig_Event::InternalSwap(DAGConfig_Event* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_Event::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[2]);
}

// ===================================================================

class DAGConfig_Edge::_Internal {
 public:
  using HasBits = decltype(std::declval<DAGConfig_Edge>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_from_node(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_to_node(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

DAGConfig_Edge::DAGConfig_Edge(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.Edge)
}
DAGConfig_Edge::DAGConfig_Edge(const DAGConfig_Edge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){from._impl_.events_}
    , decltype(_impl_.id_){}
    , decltype(_impl_.from_node_){}
    , decltype(_impl_.to_node_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.to_node_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.to_node_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.Edge)
}

inline void DAGConfig_Edge::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){arena}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.from_node_){0}
    , decltype(_impl_.to_node_){0}
  };
}

DAGConfig_Edge::~DAGConfig_Edge() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.Edge)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_Edge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.events_.~RepeatedPtrField();
}

void DAGConfig_Edge::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.Edge)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.to_node_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.to_node_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_Edge::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int32 from_node = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_from_node(&has_bits);
          _impl_.from_node_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int32 to_node = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_to_node(&has_bits);
          _impl_.to_node_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.DAGConfig.Event events = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_Edge::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.Edge)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // required int32 from_node = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_from_node(), target);
  }

  // required int32 to_node = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_to_node(), target);
  }

  // repeated .apollo.perception.DAGConfig.Event events = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.Edge)
  return target;
}

size_t DAGConfig_Edge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig.Edge)
  size_t total_size = 0;

  if (_internal_has_id()) {
    // required int32 id = 1;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  if (_internal_has_from_node()) {
    // required int32 from_node = 2;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_from_node());
  }

  if (_internal_has_to_node()) {
    // required int32 to_node = 3;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_to_node());
  }

  return total_size;
}
size_t DAGConfig_Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.Edge)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());

    // required int32 from_node = 2;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_from_node());

    // required int32 to_node = 3;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_to_node());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.Event events = 4;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_impl_.events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_Edge::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_Edge::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_Edge::GetClassData() const { return &_class_data_; }

void DAGConfig_Edge::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_Edge *>(to)->MergeFrom(
      static_cast<const DAGConfig_Edge &>(from));
}


void DAGConfig_Edge::MergeFrom(const DAGConfig_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.events_.MergeFrom(from._impl_.events_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.from_node_ = from._impl_.from_node_;
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.to_node_ = from._impl_.to_node_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_Edge::CopyFrom(const DAGConfig_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_Edge::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.events_))
    return false;
  return true;
}

void DAGConfig_Edge::InternalSwap(DAGConfig_Edge* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DAGConfig_Edge, _impl_.to_node_)
      + sizeof(DAGConfig_Edge::_impl_.to_node_)
      - PROTOBUF_FIELD_OFFSET(DAGConfig_Edge, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_Edge::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[3]);
}

// ===================================================================

class DAGConfig_EdgeConfig::_Internal {
 public:
};

DAGConfig_EdgeConfig::DAGConfig_EdgeConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.EdgeConfig)
}
DAGConfig_EdgeConfig::DAGConfig_EdgeConfig(const DAGConfig_EdgeConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.edges_){from._impl_.edges_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.EdgeConfig)
}

inline void DAGConfig_EdgeConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.edges_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DAGConfig_EdgeConfig::~DAGConfig_EdgeConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.EdgeConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_EdgeConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.edges_.~RepeatedPtrField();
}

void DAGConfig_EdgeConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_EdgeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.EdgeConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.edges_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_EdgeConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.perception.DAGConfig.Edge edges = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_edges(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_EdgeConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.EdgeConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.Edge edges = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_edges_size()); i < n; i++) {
    const auto& repfield = this->_internal_edges(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.EdgeConfig)
  return target;
}

size_t DAGConfig_EdgeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.EdgeConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.Edge edges = 1;
  total_size += 1UL * this->_internal_edges_size();
  for (const auto& msg : this->_impl_.edges_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_EdgeConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_EdgeConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_EdgeConfig::GetClassData() const { return &_class_data_; }

void DAGConfig_EdgeConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_EdgeConfig *>(to)->MergeFrom(
      static_cast<const DAGConfig_EdgeConfig &>(from));
}


void DAGConfig_EdgeConfig::MergeFrom(const DAGConfig_EdgeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.EdgeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.edges_.MergeFrom(from._impl_.edges_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_EdgeConfig::CopyFrom(const DAGConfig_EdgeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.EdgeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_EdgeConfig::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.edges_))
    return false;
  return true;
}

void DAGConfig_EdgeConfig::InternalSwap(DAGConfig_EdgeConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.edges_.InternalSwap(&other->_impl_.edges_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_EdgeConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[4]);
}

// ===================================================================

class DAGConfig_SharedData::_Internal {
 public:
  using HasBits = decltype(std::declval<DAGConfig_SharedData>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

DAGConfig_SharedData::DAGConfig_SharedData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.SharedData)
}
DAGConfig_SharedData::DAGConfig_SharedData(const DAGConfig_SharedData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.SharedData)
}

inline void DAGConfig_SharedData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.id_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DAGConfig_SharedData::~DAGConfig_SharedData() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.SharedData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_SharedData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DAGConfig_SharedData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_SharedData::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.SharedData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_SharedData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.DAGConfig.SharedData.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_SharedData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.SharedData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.SharedData.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.SharedData)
  return target;
}

size_t DAGConfig_SharedData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig.SharedData)
  size_t total_size = 0;

  if (_internal_has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (_internal_has_id()) {
    // required int32 id = 1;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return total_size;
}
size_t DAGConfig_SharedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.SharedData)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());

    // required int32 id = 1;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_SharedData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_SharedData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_SharedData::GetClassData() const { return &_class_data_; }

void DAGConfig_SharedData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_SharedData *>(to)->MergeFrom(
      static_cast<const DAGConfig_SharedData &>(from));
}


void DAGConfig_SharedData::MergeFrom(const DAGConfig_SharedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.SharedData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.id_ = from._impl_.id_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_SharedData::CopyFrom(const DAGConfig_SharedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.SharedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_SharedData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void DAGConfig_SharedData::InternalSwap(DAGConfig_SharedData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_SharedData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[5]);
}

// ===================================================================

class DAGConfig_SharedDataConfig::_Internal {
 public:
};

DAGConfig_SharedDataConfig::DAGConfig_SharedDataConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig.SharedDataConfig)
}
DAGConfig_SharedDataConfig::DAGConfig_SharedDataConfig(const DAGConfig_SharedDataConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.datas_){from._impl_.datas_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.SharedDataConfig)
}

inline void DAGConfig_SharedDataConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.datas_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DAGConfig_SharedDataConfig::~DAGConfig_SharedDataConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.SharedDataConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig_SharedDataConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.datas_.~RepeatedPtrField();
}

void DAGConfig_SharedDataConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig_SharedDataConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.SharedDataConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.datas_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig_SharedDataConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_datas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig_SharedDataConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.SharedDataConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_datas_size()); i < n; i++) {
    const auto& repfield = this->_internal_datas(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.SharedDataConfig)
  return target;
}

size_t DAGConfig_SharedDataConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.SharedDataConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
  total_size += 1UL * this->_internal_datas_size();
  for (const auto& msg : this->_impl_.datas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig_SharedDataConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig_SharedDataConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig_SharedDataConfig::GetClassData() const { return &_class_data_; }

void DAGConfig_SharedDataConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig_SharedDataConfig *>(to)->MergeFrom(
      static_cast<const DAGConfig_SharedDataConfig &>(from));
}


void DAGConfig_SharedDataConfig::MergeFrom(const DAGConfig_SharedDataConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.SharedDataConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.datas_.MergeFrom(from._impl_.datas_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig_SharedDataConfig::CopyFrom(const DAGConfig_SharedDataConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.SharedDataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_SharedDataConfig::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.datas_))
    return false;
  return true;
}

void DAGConfig_SharedDataConfig::InternalSwap(DAGConfig_SharedDataConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.datas_.InternalSwap(&other->_impl_.datas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig_SharedDataConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[6]);
}

// ===================================================================

class DAGConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DAGConfig>()._impl_._has_bits_);
  static const ::apollo::perception::DAGConfig_SubnodeConfig& subnode_config(const DAGConfig* msg);
  static void set_has_subnode_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::perception::DAGConfig_EdgeConfig& edge_config(const DAGConfig* msg);
  static void set_has_edge_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::perception::DAGConfig_SharedDataConfig& data_config(const DAGConfig* msg);
  static void set_has_data_config(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

const ::apollo::perception::DAGConfig_SubnodeConfig&
DAGConfig::_Internal::subnode_config(const DAGConfig* msg) {
  return *msg->_impl_.subnode_config_;
}
const ::apollo::perception::DAGConfig_EdgeConfig&
DAGConfig::_Internal::edge_config(const DAGConfig* msg) {
  return *msg->_impl_.edge_config_;
}
const ::apollo::perception::DAGConfig_SharedDataConfig&
DAGConfig::_Internal::data_config(const DAGConfig* msg) {
  return *msg->_impl_.data_config_;
}
DAGConfig::DAGConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.DAGConfig)
}
DAGConfig::DAGConfig(const DAGConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subnode_config_){nullptr}
    , decltype(_impl_.edge_config_){nullptr}
    , decltype(_impl_.data_config_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_subnode_config()) {
    _impl_.subnode_config_ = new ::apollo::perception::DAGConfig_SubnodeConfig(*from._impl_.subnode_config_);
  }
  if (from._internal_has_edge_config()) {
    _impl_.edge_config_ = new ::apollo::perception::DAGConfig_EdgeConfig(*from._impl_.edge_config_);
  }
  if (from._internal_has_data_config()) {
    _impl_.data_config_ = new ::apollo::perception::DAGConfig_SharedDataConfig(*from._impl_.data_config_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig)
}

inline void DAGConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subnode_config_){nullptr}
    , decltype(_impl_.edge_config_){nullptr}
    , decltype(_impl_.data_config_){nullptr}
  };
}

DAGConfig::~DAGConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DAGConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.subnode_config_;
  if (this != internal_default_instance()) delete _impl_.edge_config_;
  if (this != internal_default_instance()) delete _impl_.data_config_;
}

void DAGConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DAGConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.subnode_config_ != nullptr);
      _impl_.subnode_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.edge_config_ != nullptr);
      _impl_.edge_config_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.data_config_ != nullptr);
      _impl_.data_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DAGConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subnode_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edge_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DAGConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subnode_config(this),
        _Internal::subnode_config(this).GetCachedSize(), target, stream);
  }

  // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edge_config(this),
        _Internal::edge_config(this).GetCachedSize(), target, stream);
  }

  // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::data_config(this),
        _Internal::data_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig)
  return target;
}

size_t DAGConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig)
  size_t total_size = 0;

  if (_internal_has_subnode_config()) {
    // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subnode_config_);
  }

  if (_internal_has_edge_config()) {
    // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edge_config_);
  }

  if (_internal_has_data_config()) {
    // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_config_);
  }

  return total_size;
}
size_t DAGConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subnode_config_);

    // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edge_config_);

    // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_config_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DAGConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DAGConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DAGConfig::GetClassData() const { return &_class_data_; }

void DAGConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DAGConfig *>(to)->MergeFrom(
      static_cast<const DAGConfig &>(from));
}


void DAGConfig::MergeFrom(const DAGConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_subnode_config()->::apollo::perception::DAGConfig_SubnodeConfig::MergeFrom(from._internal_subnode_config());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_edge_config()->::apollo::perception::DAGConfig_EdgeConfig::MergeFrom(from._internal_edge_config());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_data_config()->::apollo::perception::DAGConfig_SharedDataConfig::MergeFrom(from._internal_data_config());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DAGConfig::CopyFrom(const DAGConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_subnode_config()) {
    if (!_impl_.subnode_config_->IsInitialized()) return false;
  }
  if (_internal_has_edge_config()) {
    if (!_impl_.edge_config_->IsInitialized()) return false;
  }
  if (_internal_has_data_config()) {
    if (!_impl_.data_config_->IsInitialized()) return false;
  }
  return true;
}

void DAGConfig::InternalSwap(DAGConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DAGConfig, _impl_.data_config_)
      + sizeof(DAGConfig::_impl_.data_config_)
      - PROTOBUF_FIELD_OFFSET(DAGConfig, _impl_.subnode_config_)>(
          reinterpret_cast<char*>(&_impl_.subnode_config_),
          reinterpret_cast<char*>(&other->_impl_.subnode_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DAGConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fonboard_2fproto_2fdag_5fconfig_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_Subnode*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_Subnode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_Subnode >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_SubnodeConfig*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_SubnodeConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_SubnodeConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_Event*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_Event >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_Edge*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_Edge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_Edge >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_EdgeConfig*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_EdgeConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_EdgeConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_SharedData*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_SharedData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_SharedData >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig_SharedDataConfig*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig_SharedDataConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig_SharedDataConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::DAGConfig*
Arena::CreateMaybeMessage< ::apollo::perception::DAGConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::DAGConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
