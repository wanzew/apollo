// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_ultrasonic.proto

#include "modules/perception/proto/perception_ultrasonic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
PROTOBUF_CONSTEXPR ImpendingCollisionEdge::ImpendingCollisionEdge(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.cone_id_list_)*/{}
  , /*decltype(_impl_.point_)*/{}
  , /*decltype(_impl_.tracking_time_)*/0
  , /*decltype(_impl_.id_)*/0} {}
struct ImpendingCollisionEdgeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImpendingCollisionEdgeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImpendingCollisionEdgeDefaultTypeInternal() {}
  union {
    ImpendingCollisionEdge _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImpendingCollisionEdgeDefaultTypeInternal _ImpendingCollisionEdge_default_instance_;
PROTOBUF_CONSTEXPR ImpendingCollisionEdges::ImpendingCollisionEdges(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.impending_collision_edge_)*/{}
  , /*decltype(_impl_.header_)*/nullptr} {}
struct ImpendingCollisionEdgesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImpendingCollisionEdgesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImpendingCollisionEdgesDefaultTypeInternal() {}
  union {
    ImpendingCollisionEdges _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImpendingCollisionEdgesDefaultTypeInternal _ImpendingCollisionEdges_default_instance_;
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _impl_.cone_id_list_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _impl_.point_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdge, _impl_.tracking_time_),
  1,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, _impl_.impending_collision_edge_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ImpendingCollisionEdges, _impl_.header_),
  ~0u,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::apollo::perception::ImpendingCollisionEdge)},
  { 14, 22, -1, sizeof(::apollo::perception::ImpendingCollisionEdges)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::_ImpendingCollisionEdge_default_instance_._instance,
  &::apollo::perception::_ImpendingCollisionEdges_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n4modules/perception/proto/perception_ul"
  "trasonic.proto\022\021apollo.perception\032!modul"
  "es/common/proto/header.proto\032#modules/co"
  "mmon/proto/geometry.proto\"x\n\026ImpendingCo"
  "llisionEdge\022\n\n\002id\030\001 \001(\005\022\024\n\014cone_id_list\030"
  "\002 \003(\005\022%\n\005point\030\003 \003(\0132\026.apollo.common.Poi"
  "nt3D\022\025\n\rtracking_time\030\004 \001(\001\"\215\001\n\027Impendin"
  "gCollisionEdges\022K\n\030impending_collision_e"
  "dge\030\001 \003(\0132).apollo.perception.ImpendingC"
  "ollisionEdge\022%\n\006header\030\002 \001(\0132\025.apollo.co"
  "mmon.Header"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_deps[2] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fgeometry_2eproto,
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
};
static ::_pbi::once_flag descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto = {
    false, false, 411, descriptor_table_protodef_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto,
    "modules/perception/proto/perception_ultrasonic.proto",
    &descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_once, descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto::offsets,
    file_level_metadata_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto, file_level_enum_descriptors_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto,
    file_level_service_descriptors_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto(&descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto);
namespace apollo {
namespace perception {

// ===================================================================

class ImpendingCollisionEdge::_Internal {
 public:
  using HasBits = decltype(std::declval<ImpendingCollisionEdge>()._impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tracking_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void ImpendingCollisionEdge::clear_point() {
  _impl_.point_.Clear();
}
ImpendingCollisionEdge::ImpendingCollisionEdge(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.ImpendingCollisionEdge)
}
ImpendingCollisionEdge::ImpendingCollisionEdge(const ImpendingCollisionEdge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cone_id_list_){from._impl_.cone_id_list_}
    , decltype(_impl_.point_){from._impl_.point_}
    , decltype(_impl_.tracking_time_){}
    , decltype(_impl_.id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.tracking_time_, &from._impl_.tracking_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.tracking_time_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.ImpendingCollisionEdge)
}

inline void ImpendingCollisionEdge::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cone_id_list_){arena}
    , decltype(_impl_.point_){arena}
    , decltype(_impl_.tracking_time_){0}
    , decltype(_impl_.id_){0}
  };
}

ImpendingCollisionEdge::~ImpendingCollisionEdge() {
  // @@protoc_insertion_point(destructor:apollo.perception.ImpendingCollisionEdge)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ImpendingCollisionEdge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cone_id_list_.~RepeatedField();
  _impl_.point_.~RepeatedPtrField();
}

void ImpendingCollisionEdge::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ImpendingCollisionEdge::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.ImpendingCollisionEdge)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cone_id_list_.Clear();
  _impl_.point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.tracking_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.tracking_time_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImpendingCollisionEdge::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 cone_id_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_cone_id_list(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_cone_id_list(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.common.Point3D point = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional double tracking_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_tracking_time(&has_bits);
          _impl_.tracking_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ImpendingCollisionEdge::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.ImpendingCollisionEdge)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // repeated int32 cone_id_list = 2;
  for (int i = 0, n = this->_internal_cone_id_list_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_cone_id_list(i), target);
  }

  // repeated .apollo.common.Point3D point = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_point_size()); i < n; i++) {
    const auto& repfield = this->_internal_point(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional double tracking_time = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_tracking_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.ImpendingCollisionEdge)
  return target;
}

size_t ImpendingCollisionEdge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.ImpendingCollisionEdge)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 cone_id_list = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.cone_id_list_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_cone_id_list_size());
    total_size += data_size;
  }

  // repeated .apollo.common.Point3D point = 3;
  total_size += 1UL * this->_internal_point_size();
  for (const auto& msg : this->_impl_.point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double tracking_time = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ImpendingCollisionEdge::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ImpendingCollisionEdge::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ImpendingCollisionEdge::GetClassData() const { return &_class_data_; }

void ImpendingCollisionEdge::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ImpendingCollisionEdge *>(to)->MergeFrom(
      static_cast<const ImpendingCollisionEdge &>(from));
}


void ImpendingCollisionEdge::MergeFrom(const ImpendingCollisionEdge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.ImpendingCollisionEdge)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.cone_id_list_.MergeFrom(from._impl_.cone_id_list_);
  _impl_.point_.MergeFrom(from._impl_.point_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.tracking_time_ = from._impl_.tracking_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.id_ = from._impl_.id_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ImpendingCollisionEdge::CopyFrom(const ImpendingCollisionEdge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.ImpendingCollisionEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpendingCollisionEdge::IsInitialized() const {
  return true;
}

void ImpendingCollisionEdge::InternalSwap(ImpendingCollisionEdge* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.cone_id_list_.InternalSwap(&other->_impl_.cone_id_list_);
  _impl_.point_.InternalSwap(&other->_impl_.point_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImpendingCollisionEdge, _impl_.id_)
      + sizeof(ImpendingCollisionEdge::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(ImpendingCollisionEdge, _impl_.tracking_time_)>(
          reinterpret_cast<char*>(&_impl_.tracking_time_),
          reinterpret_cast<char*>(&other->_impl_.tracking_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ImpendingCollisionEdge::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto[0]);
}

// ===================================================================

class ImpendingCollisionEdges::_Internal {
 public:
  using HasBits = decltype(std::declval<ImpendingCollisionEdges>()._impl_._has_bits_);
  static const ::apollo::common::Header& header(const ImpendingCollisionEdges* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apollo::common::Header&
ImpendingCollisionEdges::_Internal::header(const ImpendingCollisionEdges* msg) {
  return *msg->_impl_.header_;
}
void ImpendingCollisionEdges::clear_header() {
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ImpendingCollisionEdges::ImpendingCollisionEdges(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.ImpendingCollisionEdges)
}
ImpendingCollisionEdges::ImpendingCollisionEdges(const ImpendingCollisionEdges& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.impending_collision_edge_){from._impl_.impending_collision_edge_}
    , decltype(_impl_.header_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _impl_.header_ = new ::apollo::common::Header(*from._impl_.header_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.ImpendingCollisionEdges)
}

inline void ImpendingCollisionEdges::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.impending_collision_edge_){arena}
    , decltype(_impl_.header_){nullptr}
  };
}

ImpendingCollisionEdges::~ImpendingCollisionEdges() {
  // @@protoc_insertion_point(destructor:apollo.perception.ImpendingCollisionEdges)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ImpendingCollisionEdges::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.impending_collision_edge_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.header_;
}

void ImpendingCollisionEdges::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ImpendingCollisionEdges::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.ImpendingCollisionEdges)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.impending_collision_edge_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImpendingCollisionEdges::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_impending_collision_edge(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.Header header = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ImpendingCollisionEdges::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.ImpendingCollisionEdges)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_impending_collision_edge_size()); i < n; i++) {
    const auto& repfield = this->_internal_impending_collision_edge(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.common.Header header = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.ImpendingCollisionEdges)
  return target;
}

size_t ImpendingCollisionEdges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.ImpendingCollisionEdges)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
  total_size += 1UL * this->_internal_impending_collision_edge_size();
  for (const auto& msg : this->_impl_.impending_collision_edge_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .apollo.common.Header header = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ImpendingCollisionEdges::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ImpendingCollisionEdges::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ImpendingCollisionEdges::GetClassData() const { return &_class_data_; }

void ImpendingCollisionEdges::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ImpendingCollisionEdges *>(to)->MergeFrom(
      static_cast<const ImpendingCollisionEdges &>(from));
}


void ImpendingCollisionEdges::MergeFrom(const ImpendingCollisionEdges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.ImpendingCollisionEdges)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.impending_collision_edge_.MergeFrom(from._impl_.impending_collision_edge_);
  if (from._internal_has_header()) {
    _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ImpendingCollisionEdges::CopyFrom(const ImpendingCollisionEdges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.ImpendingCollisionEdges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpendingCollisionEdges::IsInitialized() const {
  return true;
}

void ImpendingCollisionEdges::InternalSwap(ImpendingCollisionEdges* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.impending_collision_edge_.InternalSwap(&other->_impl_.impending_collision_edge_);
  swap(_impl_.header_, other->_impl_.header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImpendingCollisionEdges::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::ImpendingCollisionEdge*
Arena::CreateMaybeMessage< ::apollo::perception::ImpendingCollisionEdge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::ImpendingCollisionEdge >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::ImpendingCollisionEdges*
Arena::CreateMaybeMessage< ::apollo::perception::ImpendingCollisionEdges >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::ImpendingCollisionEdges >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
