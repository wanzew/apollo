// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_config_schema.proto

#include "modules/perception/proto/perception_config_schema.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
PROTOBUF_CONSTEXPR KeyValueInt::KeyValueInt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/0} {}
struct KeyValueIntDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueIntDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueIntDefaultTypeInternal() {}
  union {
    KeyValueInt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueIntDefaultTypeInternal _KeyValueInt_default_instance_;
PROTOBUF_CONSTEXPR KeyValueString::KeyValueString(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct KeyValueStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueStringDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueStringDefaultTypeInternal() {}
  union {
    KeyValueString _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueStringDefaultTypeInternal _KeyValueString_default_instance_;
PROTOBUF_CONSTEXPR KeyValueDouble::KeyValueDouble(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/0} {}
struct KeyValueDoubleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueDoubleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueDoubleDefaultTypeInternal() {}
  union {
    KeyValueDouble _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueDoubleDefaultTypeInternal _KeyValueDouble_default_instance_;
PROTOBUF_CONSTEXPR KeyValueFloat::KeyValueFloat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/0} {}
struct KeyValueFloatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueFloatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueFloatDefaultTypeInternal() {}
  union {
    KeyValueFloat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueFloatDefaultTypeInternal _KeyValueFloat_default_instance_;
PROTOBUF_CONSTEXPR KeyValueBool::KeyValueBool(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/false} {}
struct KeyValueBoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueBoolDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueBoolDefaultTypeInternal() {}
  union {
    KeyValueBool _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueBoolDefaultTypeInternal _KeyValueBool_default_instance_;
PROTOBUF_CONSTEXPR KeyValueArrayInt::KeyValueArrayInt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct KeyValueArrayIntDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueArrayIntDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueArrayIntDefaultTypeInternal() {}
  union {
    KeyValueArrayInt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueArrayIntDefaultTypeInternal _KeyValueArrayInt_default_instance_;
PROTOBUF_CONSTEXPR KeyValueArrayString::KeyValueArrayString(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct KeyValueArrayStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueArrayStringDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueArrayStringDefaultTypeInternal() {}
  union {
    KeyValueArrayString _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueArrayStringDefaultTypeInternal _KeyValueArrayString_default_instance_;
PROTOBUF_CONSTEXPR KeyValueArrayDouble::KeyValueArrayDouble(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct KeyValueArrayDoubleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueArrayDoubleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueArrayDoubleDefaultTypeInternal() {}
  union {
    KeyValueArrayDouble _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueArrayDoubleDefaultTypeInternal _KeyValueArrayDouble_default_instance_;
PROTOBUF_CONSTEXPR KeyValueArrayFloat::KeyValueArrayFloat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct KeyValueArrayFloatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueArrayFloatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueArrayFloatDefaultTypeInternal() {}
  union {
    KeyValueArrayFloat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueArrayFloatDefaultTypeInternal _KeyValueArrayFloat_default_instance_;
PROTOBUF_CONSTEXPR KeyValueArrayBool::KeyValueArrayBool(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct KeyValueArrayBoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueArrayBoolDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueArrayBoolDefaultTypeInternal() {}
  union {
    KeyValueArrayBool _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueArrayBoolDefaultTypeInternal _KeyValueArrayBool_default_instance_;
PROTOBUF_CONSTEXPR ModelConfigProto::ModelConfigProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.integer_params_)*/{}
  , /*decltype(_impl_.string_params_)*/{}
  , /*decltype(_impl_.double_params_)*/{}
  , /*decltype(_impl_.float_params_)*/{}
  , /*decltype(_impl_.bool_params_)*/{}
  , /*decltype(_impl_.array_integer_params_)*/{}
  , /*decltype(_impl_.array_string_params_)*/{}
  , /*decltype(_impl_.array_double_params_)*/{}
  , /*decltype(_impl_.array_float_params_)*/{}
  , /*decltype(_impl_.array_bool_params_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct ModelConfigProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigProtoDefaultTypeInternal() {}
  union {
    ModelConfigProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigProtoDefaultTypeInternal _ModelConfigProto_default_instance_;
PROTOBUF_CONSTEXPR MultiModelConfigProto::MultiModelConfigProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_configs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MultiModelConfigProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiModelConfigProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiModelConfigProtoDefaultTypeInternal() {}
  union {
    MultiModelConfigProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiModelConfigProtoDefaultTypeInternal _MultiModelConfigProto_default_instance_;
PROTOBUF_CONSTEXPR ModelConfigFileListProto::ModelConfigFileListProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_config_path_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelConfigFileListProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigFileListProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigFileListProtoDefaultTypeInternal() {}
  union {
    ModelConfigFileListProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigFileListProtoDefaultTypeInternal _ModelConfigFileListProto_default_instance_;
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[13];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueInt, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueInt, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueInt, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueString, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueString, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueString, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueDouble, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueDouble, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueDouble, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueFloat, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueFloat, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueFloat, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueBool, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueBool, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueBool, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayInt, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayInt, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayInt, _impl_.values_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayString, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayString, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayString, _impl_.values_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayDouble, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayDouble, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayDouble, _impl_.values_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayFloat, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayFloat, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayFloat, _impl_.values_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayBool, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayBool, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::KeyValueArrayBool, _impl_.values_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.integer_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.string_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.double_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.float_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.bool_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.array_integer_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.array_string_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.array_double_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.array_float_params_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigProto, _impl_.array_bool_params_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::MultiModelConfigProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::MultiModelConfigProto, _impl_.model_configs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigFileListProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::ModelConfigFileListProto, _impl_.model_config_path_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::apollo::perception::KeyValueInt)},
  { 10, 18, -1, sizeof(::apollo::perception::KeyValueString)},
  { 20, 28, -1, sizeof(::apollo::perception::KeyValueDouble)},
  { 30, 38, -1, sizeof(::apollo::perception::KeyValueFloat)},
  { 40, 48, -1, sizeof(::apollo::perception::KeyValueBool)},
  { 50, 58, -1, sizeof(::apollo::perception::KeyValueArrayInt)},
  { 60, 68, -1, sizeof(::apollo::perception::KeyValueArrayString)},
  { 70, 78, -1, sizeof(::apollo::perception::KeyValueArrayDouble)},
  { 80, 88, -1, sizeof(::apollo::perception::KeyValueArrayFloat)},
  { 90, 98, -1, sizeof(::apollo::perception::KeyValueArrayBool)},
  { 100, 118, -1, sizeof(::apollo::perception::ModelConfigProto)},
  { 130, -1, -1, sizeof(::apollo::perception::MultiModelConfigProto)},
  { 137, -1, -1, sizeof(::apollo::perception::ModelConfigFileListProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::_KeyValueInt_default_instance_._instance,
  &::apollo::perception::_KeyValueString_default_instance_._instance,
  &::apollo::perception::_KeyValueDouble_default_instance_._instance,
  &::apollo::perception::_KeyValueFloat_default_instance_._instance,
  &::apollo::perception::_KeyValueBool_default_instance_._instance,
  &::apollo::perception::_KeyValueArrayInt_default_instance_._instance,
  &::apollo::perception::_KeyValueArrayString_default_instance_._instance,
  &::apollo::perception::_KeyValueArrayDouble_default_instance_._instance,
  &::apollo::perception::_KeyValueArrayFloat_default_instance_._instance,
  &::apollo::perception::_KeyValueArrayBool_default_instance_._instance,
  &::apollo::perception::_ModelConfigProto_default_instance_._instance,
  &::apollo::perception::_MultiModelConfigProto_default_instance_._instance,
  &::apollo::perception::_ModelConfigFileListProto_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7modules/perception/proto/perception_co"
  "nfig_schema.proto\022\021apollo.perception\"*\n\013"
  "KeyValueInt\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\005"
  "\"-\n\016KeyValueString\022\014\n\004name\030\001 \001(\t\022\r\n\005valu"
  "e\030\002 \001(\014\"-\n\016KeyValueDouble\022\014\n\004name\030\001 \001(\t\022"
  "\r\n\005value\030\002 \001(\001\",\n\rKeyValueFloat\022\014\n\004name\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\002\"+\n\014KeyValueBool\022\014\n\004"
  "name\030\001 \001(\t\022\r\n\005value\030\002 \001(\010\"0\n\020KeyValueArr"
  "ayInt\022\014\n\004name\030\001 \001(\t\022\016\n\006values\030\002 \003(\005\"3\n\023K"
  "eyValueArrayString\022\014\n\004name\030\001 \001(\t\022\016\n\006valu"
  "es\030\002 \003(\014\"3\n\023KeyValueArrayDouble\022\014\n\004name\030"
  "\001 \001(\t\022\016\n\006values\030\002 \003(\001\"2\n\022KeyValueArrayFl"
  "oat\022\014\n\004name\030\001 \001(\t\022\016\n\006values\030\002 \003(\002\"1\n\021Key"
  "ValueArrayBool\022\014\n\004name\030\001 \001(\t\022\016\n\006values\030\002"
  " \003(\010\"\234\005\n\020ModelConfigProto\022\014\n\004name\030\001 \001(\t\022"
  "\017\n\007version\030\002 \001(\t\0226\n\016integer_params\030\003 \003(\013"
  "2\036.apollo.perception.KeyValueInt\0228\n\rstri"
  "ng_params\030\004 \003(\0132!.apollo.perception.KeyV"
  "alueString\0228\n\rdouble_params\030\005 \003(\0132!.apol"
  "lo.perception.KeyValueDouble\0226\n\014float_pa"
  "rams\030\006 \003(\0132 .apollo.perception.KeyValueF"
  "loat\0224\n\013bool_params\030\007 \003(\0132\037.apollo.perce"
  "ption.KeyValueBool\022A\n\024array_integer_para"
  "ms\030\010 \003(\0132#.apollo.perception.KeyValueArr"
  "ayInt\022C\n\023array_string_params\030\t \003(\0132&.apo"
  "llo.perception.KeyValueArrayString\022C\n\023ar"
  "ray_double_params\030\n \003(\0132&.apollo.percept"
  "ion.KeyValueArrayDouble\022A\n\022array_float_p"
  "arams\030\013 \003(\0132%.apollo.perception.KeyValue"
  "ArrayFloat\022\?\n\021array_bool_params\030\014 \003(\0132$."
  "apollo.perception.KeyValueArrayBool\"S\n\025M"
  "ultiModelConfigProto\022:\n\rmodel_configs\030\001 "
  "\003(\0132#.apollo.perception.ModelConfigProto"
  "\"5\n\030ModelConfigFileListProto\022\031\n\021model_co"
  "nfig_path\030\001 \003(\t"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto = {
    false, false, 1375, descriptor_table_protodef_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto,
    "modules/perception/proto/perception_config_schema.proto",
    &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once, nullptr, 0, 13,
    schemas, file_default_instances, TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto::offsets,
    file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto, file_level_enum_descriptors_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto,
    file_level_service_descriptors_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto(&descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
namespace apollo {
namespace perception {

// ===================================================================

class KeyValueInt::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueInt>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyValueInt::KeyValueInt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueInt)
}
KeyValueInt::KeyValueInt(const KeyValueInt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueInt)
}

inline void KeyValueInt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueInt::~KeyValueInt() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueInt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueInt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void KeyValueInt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueInt::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueInt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueInt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueInt.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_value(&has_bits);
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueInt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueInt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueInt.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueInt)
  return target;
}

size_t KeyValueInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueInt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional int32 value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueInt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueInt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueInt::GetClassData() const { return &_class_data_; }

void KeyValueInt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueInt *>(to)->MergeFrom(
      static_cast<const KeyValueInt &>(from));
}


void KeyValueInt::MergeFrom(const KeyValueInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueInt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_ = from._impl_.value_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueInt::CopyFrom(const KeyValueInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueInt::IsInitialized() const {
  return true;
}

void KeyValueInt::InternalSwap(KeyValueInt* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueInt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[0]);
}

// ===================================================================

class KeyValueString::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueString>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyValueString::KeyValueString(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueString)
}
KeyValueString::KeyValueString(const KeyValueString& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value()) {
    _impl_.value_.Set(from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueString)
}

inline void KeyValueString::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueString::~KeyValueString() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueString)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueString::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}

void KeyValueString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueString::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueString)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueString::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueString.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueString::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueString)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueString.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueString)
  return target;
}

size_t KeyValueString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueString)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional bytes value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueString::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueString::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueString::GetClassData() const { return &_class_data_; }

void KeyValueString::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueString *>(to)->MergeFrom(
      static_cast<const KeyValueString &>(from));
}


void KeyValueString::MergeFrom(const KeyValueString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueString)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueString::CopyFrom(const KeyValueString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueString::IsInitialized() const {
  return true;
}

void KeyValueString::InternalSwap(KeyValueString* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[1]);
}

// ===================================================================

class KeyValueDouble::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueDouble>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyValueDouble::KeyValueDouble(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueDouble)
}
KeyValueDouble::KeyValueDouble(const KeyValueDouble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueDouble)
}

inline void KeyValueDouble::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueDouble::~KeyValueDouble() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueDouble)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueDouble::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void KeyValueDouble::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueDouble)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueDouble::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueDouble.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional double value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_value(&has_bits);
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueDouble::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueDouble)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueDouble.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional double value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueDouble)
  return target;
}

size_t KeyValueDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueDouble)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional double value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueDouble::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueDouble::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueDouble::GetClassData() const { return &_class_data_; }

void KeyValueDouble::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueDouble *>(to)->MergeFrom(
      static_cast<const KeyValueDouble &>(from));
}


void KeyValueDouble::MergeFrom(const KeyValueDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueDouble)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_ = from._impl_.value_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueDouble::CopyFrom(const KeyValueDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueDouble::IsInitialized() const {
  return true;
}

void KeyValueDouble::InternalSwap(KeyValueDouble* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueDouble::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[2]);
}

// ===================================================================

class KeyValueFloat::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueFloat>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyValueFloat::KeyValueFloat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueFloat)
}
KeyValueFloat::KeyValueFloat(const KeyValueFloat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueFloat)
}

inline void KeyValueFloat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueFloat::~KeyValueFloat() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueFloat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueFloat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void KeyValueFloat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueFloat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueFloat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueFloat.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional float value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_value(&has_bits);
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueFloat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueFloat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueFloat.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional float value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueFloat)
  return target;
}

size_t KeyValueFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueFloat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional float value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueFloat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueFloat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueFloat::GetClassData() const { return &_class_data_; }

void KeyValueFloat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueFloat *>(to)->MergeFrom(
      static_cast<const KeyValueFloat &>(from));
}


void KeyValueFloat::MergeFrom(const KeyValueFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueFloat)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_ = from._impl_.value_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueFloat::CopyFrom(const KeyValueFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueFloat::IsInitialized() const {
  return true;
}

void KeyValueFloat::InternalSwap(KeyValueFloat* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueFloat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[3]);
}

// ===================================================================

class KeyValueBool::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueBool>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyValueBool::KeyValueBool(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueBool)
}
KeyValueBool::KeyValueBool(const KeyValueBool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueBool)
}

inline void KeyValueBool::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){false}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueBool::~KeyValueBool() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueBool)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueBool::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void KeyValueBool::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueBool::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueBool)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.value_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueBool::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueBool.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional bool value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_value(&has_bits);
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueBool::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueBool)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueBool.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional bool value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueBool)
  return target;
}

size_t KeyValueBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueBool)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional bool value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueBool::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueBool::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueBool::GetClassData() const { return &_class_data_; }

void KeyValueBool::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueBool *>(to)->MergeFrom(
      static_cast<const KeyValueBool &>(from));
}


void KeyValueBool::MergeFrom(const KeyValueBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueBool)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_ = from._impl_.value_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueBool::CopyFrom(const KeyValueBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueBool::IsInitialized() const {
  return true;
}

void KeyValueBool::InternalSwap(KeyValueBool* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueBool::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[4]);
}

// ===================================================================

class KeyValueArrayInt::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueArrayInt>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

KeyValueArrayInt::KeyValueArrayInt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueArrayInt)
}
KeyValueArrayInt::KeyValueArrayInt(const KeyValueArrayInt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){from._impl_.values_}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueArrayInt)
}

inline void KeyValueArrayInt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){arena}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueArrayInt::~KeyValueArrayInt() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueArrayInt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueArrayInt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedField();
  _impl_.name_.Destroy();
}

void KeyValueArrayInt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueArrayInt::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueArrayInt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueArrayInt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueArrayInt.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated int32 values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueArrayInt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueArrayInt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueArrayInt.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated int32 values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_values(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueArrayInt)
  return target;
}

size_t KeyValueArrayInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueArrayInt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 values = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.values_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_values_size());
    total_size += data_size;
  }

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueArrayInt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueArrayInt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueArrayInt::GetClassData() const { return &_class_data_; }

void KeyValueArrayInt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueArrayInt *>(to)->MergeFrom(
      static_cast<const KeyValueArrayInt &>(from));
}


void KeyValueArrayInt::MergeFrom(const KeyValueArrayInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueArrayInt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.values_.MergeFrom(from._impl_.values_);
  if (from._internal_has_name()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueArrayInt::CopyFrom(const KeyValueArrayInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueArrayInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueArrayInt::IsInitialized() const {
  return true;
}

void KeyValueArrayInt::InternalSwap(KeyValueArrayInt* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueArrayInt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[5]);
}

// ===================================================================

class KeyValueArrayString::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueArrayString>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

KeyValueArrayString::KeyValueArrayString(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueArrayString)
}
KeyValueArrayString::KeyValueArrayString(const KeyValueArrayString& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){from._impl_.values_}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueArrayString)
}

inline void KeyValueArrayString::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){arena}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueArrayString::~KeyValueArrayString() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueArrayString)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueArrayString::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void KeyValueArrayString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueArrayString::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueArrayString)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueArrayString::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueArrayString.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated bytes values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_values();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueArrayString::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueArrayString)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueArrayString.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated bytes values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    const auto& s = this->_internal_values(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueArrayString)
  return target;
}

size_t KeyValueArrayString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueArrayString)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes values = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.values_.size());
  for (int i = 0, n = _impl_.values_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.values_.Get(i));
  }

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueArrayString::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueArrayString::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueArrayString::GetClassData() const { return &_class_data_; }

void KeyValueArrayString::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueArrayString *>(to)->MergeFrom(
      static_cast<const KeyValueArrayString &>(from));
}


void KeyValueArrayString::MergeFrom(const KeyValueArrayString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueArrayString)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.values_.MergeFrom(from._impl_.values_);
  if (from._internal_has_name()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueArrayString::CopyFrom(const KeyValueArrayString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueArrayString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueArrayString::IsInitialized() const {
  return true;
}

void KeyValueArrayString::InternalSwap(KeyValueArrayString* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueArrayString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[6]);
}

// ===================================================================

class KeyValueArrayDouble::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueArrayDouble>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

KeyValueArrayDouble::KeyValueArrayDouble(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueArrayDouble)
}
KeyValueArrayDouble::KeyValueArrayDouble(const KeyValueArrayDouble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){from._impl_.values_}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueArrayDouble)
}

inline void KeyValueArrayDouble::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){arena}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueArrayDouble::~KeyValueArrayDouble() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueArrayDouble)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueArrayDouble::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedField();
  _impl_.name_.Destroy();
}

void KeyValueArrayDouble::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueArrayDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueArrayDouble)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueArrayDouble::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueArrayDouble.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated double values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
            ptr += sizeof(double);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<17>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueArrayDouble::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueArrayDouble)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueArrayDouble.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated double values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_values(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueArrayDouble)
  return target;
}

size_t KeyValueArrayDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueArrayDouble)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_values_size());
    total_size += data_size;
  }

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueArrayDouble::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueArrayDouble::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueArrayDouble::GetClassData() const { return &_class_data_; }

void KeyValueArrayDouble::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueArrayDouble *>(to)->MergeFrom(
      static_cast<const KeyValueArrayDouble &>(from));
}


void KeyValueArrayDouble::MergeFrom(const KeyValueArrayDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueArrayDouble)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.values_.MergeFrom(from._impl_.values_);
  if (from._internal_has_name()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueArrayDouble::CopyFrom(const KeyValueArrayDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueArrayDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueArrayDouble::IsInitialized() const {
  return true;
}

void KeyValueArrayDouble::InternalSwap(KeyValueArrayDouble* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueArrayDouble::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[7]);
}

// ===================================================================

class KeyValueArrayFloat::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueArrayFloat>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

KeyValueArrayFloat::KeyValueArrayFloat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueArrayFloat)
}
KeyValueArrayFloat::KeyValueArrayFloat(const KeyValueArrayFloat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){from._impl_.values_}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueArrayFloat)
}

inline void KeyValueArrayFloat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){arena}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueArrayFloat::~KeyValueArrayFloat() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueArrayFloat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueArrayFloat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedField();
  _impl_.name_.Destroy();
}

void KeyValueArrayFloat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueArrayFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueArrayFloat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueArrayFloat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueArrayFloat.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated float values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
            ptr += sizeof(float);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<21>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueArrayFloat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueArrayFloat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueArrayFloat.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated float values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_values(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueArrayFloat)
  return target;
}

size_t KeyValueArrayFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueArrayFloat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_values_size());
    total_size += data_size;
  }

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueArrayFloat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueArrayFloat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueArrayFloat::GetClassData() const { return &_class_data_; }

void KeyValueArrayFloat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueArrayFloat *>(to)->MergeFrom(
      static_cast<const KeyValueArrayFloat &>(from));
}


void KeyValueArrayFloat::MergeFrom(const KeyValueArrayFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueArrayFloat)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.values_.MergeFrom(from._impl_.values_);
  if (from._internal_has_name()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueArrayFloat::CopyFrom(const KeyValueArrayFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueArrayFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueArrayFloat::IsInitialized() const {
  return true;
}

void KeyValueArrayFloat::InternalSwap(KeyValueArrayFloat* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueArrayFloat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[8]);
}

// ===================================================================

class KeyValueArrayBool::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyValueArrayBool>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

KeyValueArrayBool::KeyValueArrayBool(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.KeyValueArrayBool)
}
KeyValueArrayBool::KeyValueArrayBool(const KeyValueArrayBool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){from._impl_.values_}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.KeyValueArrayBool)
}

inline void KeyValueArrayBool::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.values_){arena}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValueArrayBool::~KeyValueArrayBool() {
  // @@protoc_insertion_point(destructor:apollo.perception.KeyValueArrayBool)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValueArrayBool::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedField();
  _impl_.name_.Destroy();
}

void KeyValueArrayBool::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValueArrayBool::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.KeyValueArrayBool)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValueArrayBool::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.KeyValueArrayBool.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated bool values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValueArrayBool::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.KeyValueArrayBool)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.KeyValueArrayBool.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated bool values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_values(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.KeyValueArrayBool)
  return target;
}

size_t KeyValueArrayBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.KeyValueArrayBool)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_values_size());
    total_size += data_size;
  }

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValueArrayBool::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KeyValueArrayBool::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValueArrayBool::GetClassData() const { return &_class_data_; }

void KeyValueArrayBool::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KeyValueArrayBool *>(to)->MergeFrom(
      static_cast<const KeyValueArrayBool &>(from));
}


void KeyValueArrayBool::MergeFrom(const KeyValueArrayBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.KeyValueArrayBool)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.values_.MergeFrom(from._impl_.values_);
  if (from._internal_has_name()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValueArrayBool::CopyFrom(const KeyValueArrayBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.KeyValueArrayBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueArrayBool::IsInitialized() const {
  return true;
}

void KeyValueArrayBool::InternalSwap(KeyValueArrayBool* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValueArrayBool::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[9]);
}

// ===================================================================

class ModelConfigProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ModelConfigProto>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ModelConfigProto::ModelConfigProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.ModelConfigProto)
}
ModelConfigProto::ModelConfigProto(const ModelConfigProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.integer_params_){from._impl_.integer_params_}
    , decltype(_impl_.string_params_){from._impl_.string_params_}
    , decltype(_impl_.double_params_){from._impl_.double_params_}
    , decltype(_impl_.float_params_){from._impl_.float_params_}
    , decltype(_impl_.bool_params_){from._impl_.bool_params_}
    , decltype(_impl_.array_integer_params_){from._impl_.array_integer_params_}
    , decltype(_impl_.array_string_params_){from._impl_.array_string_params_}
    , decltype(_impl_.array_double_params_){from._impl_.array_double_params_}
    , decltype(_impl_.array_float_params_){from._impl_.array_float_params_}
    , decltype(_impl_.array_bool_params_){from._impl_.array_bool_params_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _impl_.name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_version()) {
    _impl_.version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.ModelConfigProto)
}

inline void ModelConfigProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.integer_params_){arena}
    , decltype(_impl_.string_params_){arena}
    , decltype(_impl_.double_params_){arena}
    , decltype(_impl_.float_params_){arena}
    , decltype(_impl_.bool_params_){arena}
    , decltype(_impl_.array_integer_params_){arena}
    , decltype(_impl_.array_string_params_){arena}
    , decltype(_impl_.array_double_params_){arena}
    , decltype(_impl_.array_float_params_){arena}
    , decltype(_impl_.array_bool_params_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelConfigProto::~ModelConfigProto() {
  // @@protoc_insertion_point(destructor:apollo.perception.ModelConfigProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelConfigProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.integer_params_.~RepeatedPtrField();
  _impl_.string_params_.~RepeatedPtrField();
  _impl_.double_params_.~RepeatedPtrField();
  _impl_.float_params_.~RepeatedPtrField();
  _impl_.bool_params_.~RepeatedPtrField();
  _impl_.array_integer_params_.~RepeatedPtrField();
  _impl_.array_string_params_.~RepeatedPtrField();
  _impl_.array_double_params_.~RepeatedPtrField();
  _impl_.array_float_params_.~RepeatedPtrField();
  _impl_.array_bool_params_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
}

void ModelConfigProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelConfigProto::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.ModelConfigProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.integer_params_.Clear();
  _impl_.string_params_.Clear();
  _impl_.double_params_.Clear();
  _impl_.float_params_.Clear();
  _impl_.bool_params_.Clear();
  _impl_.array_integer_params_.Clear();
  _impl_.array_string_params_.Clear();
  _impl_.array_double_params_.Clear();
  _impl_.array_float_params_.Clear();
  _impl_.array_bool_params_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.version_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.ModelConfigProto.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.ModelConfigProto.version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueInt integer_params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_integer_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueString string_params = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_string_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueDouble double_params = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_double_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueFloat float_params = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_float_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueBool bool_params = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bool_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueArrayInt array_integer_params = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_array_integer_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueArrayString array_string_params = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_array_string_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueArrayDouble array_double_params = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_array_double_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueArrayFloat array_float_params = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_array_float_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.perception.KeyValueArrayBool array_bool_params = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_array_bool_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelConfigProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.ModelConfigProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.ModelConfigProto.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.ModelConfigProto.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // repeated .apollo.perception.KeyValueInt integer_params = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_integer_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_integer_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueString string_params = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_string_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_string_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueDouble double_params = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_double_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_double_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueFloat float_params = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_float_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_float_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueBool bool_params = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bool_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_bool_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueArrayInt array_integer_params = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_array_integer_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_array_integer_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueArrayString array_string_params = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_array_string_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_array_string_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueArrayDouble array_double_params = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_array_double_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_array_double_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueArrayFloat array_float_params = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_array_float_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_array_float_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .apollo.perception.KeyValueArrayBool array_bool_params = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_array_bool_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_array_bool_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.ModelConfigProto)
  return target;
}

size_t ModelConfigProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.ModelConfigProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.KeyValueInt integer_params = 3;
  total_size += 1UL * this->_internal_integer_params_size();
  for (const auto& msg : this->_impl_.integer_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueString string_params = 4;
  total_size += 1UL * this->_internal_string_params_size();
  for (const auto& msg : this->_impl_.string_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueDouble double_params = 5;
  total_size += 1UL * this->_internal_double_params_size();
  for (const auto& msg : this->_impl_.double_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueFloat float_params = 6;
  total_size += 1UL * this->_internal_float_params_size();
  for (const auto& msg : this->_impl_.float_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueBool bool_params = 7;
  total_size += 1UL * this->_internal_bool_params_size();
  for (const auto& msg : this->_impl_.bool_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueArrayInt array_integer_params = 8;
  total_size += 1UL * this->_internal_array_integer_params_size();
  for (const auto& msg : this->_impl_.array_integer_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueArrayString array_string_params = 9;
  total_size += 1UL * this->_internal_array_string_params_size();
  for (const auto& msg : this->_impl_.array_string_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueArrayDouble array_double_params = 10;
  total_size += 1UL * this->_internal_array_double_params_size();
  for (const auto& msg : this->_impl_.array_double_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueArrayFloat array_float_params = 11;
  total_size += 1UL * this->_internal_array_float_params_size();
  for (const auto& msg : this->_impl_.array_float_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.perception.KeyValueArrayBool array_bool_params = 12;
  total_size += 1UL * this->_internal_array_bool_params_size();
  for (const auto& msg : this->_impl_.array_bool_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelConfigProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelConfigProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelConfigProto::GetClassData() const { return &_class_data_; }

void ModelConfigProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelConfigProto *>(to)->MergeFrom(
      static_cast<const ModelConfigProto &>(from));
}


void ModelConfigProto::MergeFrom(const ModelConfigProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.ModelConfigProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.integer_params_.MergeFrom(from._impl_.integer_params_);
  _impl_.string_params_.MergeFrom(from._impl_.string_params_);
  _impl_.double_params_.MergeFrom(from._impl_.double_params_);
  _impl_.float_params_.MergeFrom(from._impl_.float_params_);
  _impl_.bool_params_.MergeFrom(from._impl_.bool_params_);
  _impl_.array_integer_params_.MergeFrom(from._impl_.array_integer_params_);
  _impl_.array_string_params_.MergeFrom(from._impl_.array_string_params_);
  _impl_.array_double_params_.MergeFrom(from._impl_.array_double_params_);
  _impl_.array_float_params_.MergeFrom(from._impl_.array_float_params_);
  _impl_.array_bool_params_.MergeFrom(from._impl_.array_bool_params_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigProto::CopyFrom(const ModelConfigProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.ModelConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigProto::IsInitialized() const {
  return true;
}

void ModelConfigProto::InternalSwap(ModelConfigProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.integer_params_.InternalSwap(&other->_impl_.integer_params_);
  _impl_.string_params_.InternalSwap(&other->_impl_.string_params_);
  _impl_.double_params_.InternalSwap(&other->_impl_.double_params_);
  _impl_.float_params_.InternalSwap(&other->_impl_.float_params_);
  _impl_.bool_params_.InternalSwap(&other->_impl_.bool_params_);
  _impl_.array_integer_params_.InternalSwap(&other->_impl_.array_integer_params_);
  _impl_.array_string_params_.InternalSwap(&other->_impl_.array_string_params_);
  _impl_.array_double_params_.InternalSwap(&other->_impl_.array_double_params_);
  _impl_.array_float_params_.InternalSwap(&other->_impl_.array_float_params_);
  _impl_.array_bool_params_.InternalSwap(&other->_impl_.array_bool_params_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[10]);
}

// ===================================================================

class MultiModelConfigProto::_Internal {
 public:
};

MultiModelConfigProto::MultiModelConfigProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.MultiModelConfigProto)
}
MultiModelConfigProto::MultiModelConfigProto(const MultiModelConfigProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.model_configs_){from._impl_.model_configs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.MultiModelConfigProto)
}

inline void MultiModelConfigProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_configs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MultiModelConfigProto::~MultiModelConfigProto() {
  // @@protoc_insertion_point(destructor:apollo.perception.MultiModelConfigProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MultiModelConfigProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_configs_.~RepeatedPtrField();
}

void MultiModelConfigProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MultiModelConfigProto::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.MultiModelConfigProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MultiModelConfigProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .apollo.perception.ModelConfigProto model_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_model_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MultiModelConfigProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.MultiModelConfigProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.ModelConfigProto model_configs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_model_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_model_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.MultiModelConfigProto)
  return target;
}

size_t MultiModelConfigProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.MultiModelConfigProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.ModelConfigProto model_configs = 1;
  total_size += 1UL * this->_internal_model_configs_size();
  for (const auto& msg : this->_impl_.model_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MultiModelConfigProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MultiModelConfigProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MultiModelConfigProto::GetClassData() const { return &_class_data_; }

void MultiModelConfigProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MultiModelConfigProto *>(to)->MergeFrom(
      static_cast<const MultiModelConfigProto &>(from));
}


void MultiModelConfigProto::MergeFrom(const MultiModelConfigProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.MultiModelConfigProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.model_configs_.MergeFrom(from._impl_.model_configs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MultiModelConfigProto::CopyFrom(const MultiModelConfigProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.MultiModelConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiModelConfigProto::IsInitialized() const {
  return true;
}

void MultiModelConfigProto::InternalSwap(MultiModelConfigProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.model_configs_.InternalSwap(&other->_impl_.model_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MultiModelConfigProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[11]);
}

// ===================================================================

class ModelConfigFileListProto::_Internal {
 public:
};

ModelConfigFileListProto::ModelConfigFileListProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.ModelConfigFileListProto)
}
ModelConfigFileListProto::ModelConfigFileListProto(const ModelConfigFileListProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.model_config_path_){from._impl_.model_config_path_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.ModelConfigFileListProto)
}

inline void ModelConfigFileListProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_config_path_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModelConfigFileListProto::~ModelConfigFileListProto() {
  // @@protoc_insertion_point(destructor:apollo.perception.ModelConfigFileListProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelConfigFileListProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_config_path_.~RepeatedPtrField();
}

void ModelConfigFileListProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelConfigFileListProto::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.ModelConfigFileListProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_config_path_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelConfigFileListProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string model_config_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_model_config_path();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "apollo.perception.ModelConfigFileListProto.model_config_path");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelConfigFileListProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.ModelConfigFileListProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string model_config_path = 1;
  for (int i = 0, n = this->_internal_model_config_path_size(); i < n; i++) {
    const auto& s = this->_internal_model_config_path(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.ModelConfigFileListProto.model_config_path");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.ModelConfigFileListProto)
  return target;
}

size_t ModelConfigFileListProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.ModelConfigFileListProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string model_config_path = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.model_config_path_.size());
  for (int i = 0, n = _impl_.model_config_path_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.model_config_path_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelConfigFileListProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelConfigFileListProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelConfigFileListProto::GetClassData() const { return &_class_data_; }

void ModelConfigFileListProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelConfigFileListProto *>(to)->MergeFrom(
      static_cast<const ModelConfigFileListProto &>(from));
}


void ModelConfigFileListProto::MergeFrom(const ModelConfigFileListProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.ModelConfigFileListProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.model_config_path_.MergeFrom(from._impl_.model_config_path_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigFileListProto::CopyFrom(const ModelConfigFileListProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.ModelConfigFileListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigFileListProto::IsInitialized() const {
  return true;
}

void ModelConfigFileListProto::InternalSwap(ModelConfigFileListProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.model_config_path_.InternalSwap(&other->_impl_.model_config_path_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelConfigFileListProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto[12]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueInt*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueInt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueInt >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueString*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueString >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueString >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueDouble*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueDouble >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueDouble >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueFloat*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueFloat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueFloat >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueBool*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueBool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueBool >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueArrayInt*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueArrayInt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueArrayInt >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueArrayString*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueArrayString >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueArrayString >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueArrayDouble*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueArrayDouble >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueArrayDouble >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueArrayFloat*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueArrayFloat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueArrayFloat >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::KeyValueArrayBool*
Arena::CreateMaybeMessage< ::apollo::perception::KeyValueArrayBool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::KeyValueArrayBool >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::ModelConfigProto*
Arena::CreateMaybeMessage< ::apollo::perception::ModelConfigProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::ModelConfigProto >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::MultiModelConfigProto*
Arena::CreateMaybeMessage< ::apollo::perception::MultiModelConfigProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::MultiModelConfigProto >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::ModelConfigFileListProto*
Arena::CreateMaybeMessage< ::apollo::perception::ModelConfigFileListProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::ModelConfigFileListProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
