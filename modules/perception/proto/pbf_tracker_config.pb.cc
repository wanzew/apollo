// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/pbf_tracker_config.proto

#include "modules/perception/proto/pbf_tracker_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace perception {
namespace fusion {
PROTOBUF_CONSTEXPR PbfTrackerConfig::PbfTrackerConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_fusion_method_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.motion_fusion_method_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shape_fusion_method_)*/{nullptr, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.existence_fusion_method_)*/{nullptr, ::_pbi::ConstantInitialized{}}} {}
struct PbfTrackerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PbfTrackerConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PbfTrackerConfigDefaultTypeInternal() {}
  union {
    PbfTrackerConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PbfTrackerConfigDefaultTypeInternal _PbfTrackerConfig_default_instance_;
}  // namespace fusion
}  // namespace perception
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto = nullptr;

const uint32_t TableStruct_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::fusion::PbfTrackerConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::fusion::PbfTrackerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::fusion::PbfTrackerConfig, _impl_.type_fusion_method_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::fusion::PbfTrackerConfig, _impl_.motion_fusion_method_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::fusion::PbfTrackerConfig, _impl_.shape_fusion_method_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::fusion::PbfTrackerConfig, _impl_.existence_fusion_method_),
  0,
  1,
  2,
  3,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::apollo::perception::fusion::PbfTrackerConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::perception::fusion::_PbfTrackerConfig_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1modules/perception/proto/pbf_tracker_c"
  "onfig.proto\022\030apollo.perception.fusion\"\321\001"
  "\n\020PbfTrackerConfig\022)\n\022type_fusion_method"
  "\030\001 \001(\t:\rDstTypeFusion\0220\n\024motion_fusion_m"
  "ethod\030\002 \001(\t:\022KalmanMotionFusion\022+\n\023shape"
  "_fusion_method\030\003 \001(\t:\016PbfShapeFusion\0223\n\027"
  "existence_fusion_method\030\004 \001(\t:\022DstExiste"
  "nceFusion"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto = {
    false, false, 289, descriptor_table_protodef_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto,
    "modules/perception/proto/pbf_tracker_config.proto",
    &descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto::offsets,
    file_level_metadata_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto, file_level_enum_descriptors_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto,
    file_level_service_descriptors_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto_getter() {
  return &descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto(&descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto);
namespace apollo {
namespace perception {
namespace fusion {

// ===================================================================

class PbfTrackerConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<PbfTrackerConfig>()._impl_._has_bits_);
  static void set_has_type_fusion_method(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_motion_fusion_method(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_shape_fusion_method(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_existence_fusion_method(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::internal::LazyString PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_type_fusion_method_{{{"DstTypeFusion", 13}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_motion_fusion_method_{{{"KalmanMotionFusion", 18}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_shape_fusion_method_{{{"PbfShapeFusion", 14}}, {nullptr}};
const ::PROTOBUF_NAMESPACE_ID::internal::LazyString PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_existence_fusion_method_{{{"DstExistenceFusion", 18}}, {nullptr}};
PbfTrackerConfig::PbfTrackerConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.perception.fusion.PbfTrackerConfig)
}
PbfTrackerConfig::PbfTrackerConfig(const PbfTrackerConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_fusion_method_){}
    , decltype(_impl_.motion_fusion_method_){}
    , decltype(_impl_.shape_fusion_method_){}
    , decltype(_impl_.existence_fusion_method_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_fusion_method_.InitDefault();
  if (from._internal_has_type_fusion_method()) {
    _impl_.type_fusion_method_.Set(from._internal_type_fusion_method(), 
      GetArenaForAllocation());
  }
  _impl_.motion_fusion_method_.InitDefault();
  if (from._internal_has_motion_fusion_method()) {
    _impl_.motion_fusion_method_.Set(from._internal_motion_fusion_method(), 
      GetArenaForAllocation());
  }
  _impl_.shape_fusion_method_.InitDefault();
  if (from._internal_has_shape_fusion_method()) {
    _impl_.shape_fusion_method_.Set(from._internal_shape_fusion_method(), 
      GetArenaForAllocation());
  }
  _impl_.existence_fusion_method_.InitDefault();
  if (from._internal_has_existence_fusion_method()) {
    _impl_.existence_fusion_method_.Set(from._internal_existence_fusion_method(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.fusion.PbfTrackerConfig)
}

inline void PbfTrackerConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_fusion_method_){}
    , decltype(_impl_.motion_fusion_method_){}
    , decltype(_impl_.shape_fusion_method_){}
    , decltype(_impl_.existence_fusion_method_){}
  };
  _impl_.type_fusion_method_.InitDefault();
  _impl_.motion_fusion_method_.InitDefault();
  _impl_.shape_fusion_method_.InitDefault();
  _impl_.existence_fusion_method_.InitDefault();
}

PbfTrackerConfig::~PbfTrackerConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.fusion.PbfTrackerConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PbfTrackerConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_fusion_method_.Destroy();
  _impl_.motion_fusion_method_.Destroy();
  _impl_.shape_fusion_method_.Destroy();
  _impl_.existence_fusion_method_.Destroy();
}

void PbfTrackerConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PbfTrackerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.fusion.PbfTrackerConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_fusion_method_.ClearToDefault(::apollo::perception::fusion::PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_type_fusion_method_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000002u) {
      _impl_.motion_fusion_method_.ClearToDefault(::apollo::perception::fusion::PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_motion_fusion_method_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000004u) {
      _impl_.shape_fusion_method_.ClearToDefault(::apollo::perception::fusion::PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_shape_fusion_method_, GetArenaForAllocation());
       }
    if (cached_has_bits & 0x00000008u) {
      _impl_.existence_fusion_method_.ClearToDefault(::apollo::perception::fusion::PbfTrackerConfig::Impl_::_i_give_permission_to_break_this_code_default_existence_fusion_method_, GetArenaForAllocation());
       }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PbfTrackerConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_fusion_method = 1 [default = "DstTypeFusion"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_fusion_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.fusion.PbfTrackerConfig.type_fusion_method");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string motion_fusion_method = 2 [default = "KalmanMotionFusion"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_motion_fusion_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.fusion.PbfTrackerConfig.motion_fusion_method");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string shape_fusion_method = 3 [default = "PbfShapeFusion"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_shape_fusion_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.fusion.PbfTrackerConfig.shape_fusion_method");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string existence_fusion_method = 4 [default = "DstExistenceFusion"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_existence_fusion_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.perception.fusion.PbfTrackerConfig.existence_fusion_method");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PbfTrackerConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.fusion.PbfTrackerConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_fusion_method = 1 [default = "DstTypeFusion"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_fusion_method().data(), static_cast<int>(this->_internal_type_fusion_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.PbfTrackerConfig.type_fusion_method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_fusion_method(), target);
  }

  // optional string motion_fusion_method = 2 [default = "KalmanMotionFusion"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_motion_fusion_method().data(), static_cast<int>(this->_internal_motion_fusion_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.PbfTrackerConfig.motion_fusion_method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_motion_fusion_method(), target);
  }

  // optional string shape_fusion_method = 3 [default = "PbfShapeFusion"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_shape_fusion_method().data(), static_cast<int>(this->_internal_shape_fusion_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.PbfTrackerConfig.shape_fusion_method");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_shape_fusion_method(), target);
  }

  // optional string existence_fusion_method = 4 [default = "DstExistenceFusion"];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_existence_fusion_method().data(), static_cast<int>(this->_internal_existence_fusion_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.PbfTrackerConfig.existence_fusion_method");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_existence_fusion_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.fusion.PbfTrackerConfig)
  return target;
}

size_t PbfTrackerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.fusion.PbfTrackerConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_fusion_method = 1 [default = "DstTypeFusion"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_fusion_method());
    }

    // optional string motion_fusion_method = 2 [default = "KalmanMotionFusion"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_motion_fusion_method());
    }

    // optional string shape_fusion_method = 3 [default = "PbfShapeFusion"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_shape_fusion_method());
    }

    // optional string existence_fusion_method = 4 [default = "DstExistenceFusion"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_existence_fusion_method());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PbfTrackerConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PbfTrackerConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PbfTrackerConfig::GetClassData() const { return &_class_data_; }

void PbfTrackerConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PbfTrackerConfig *>(to)->MergeFrom(
      static_cast<const PbfTrackerConfig &>(from));
}


void PbfTrackerConfig::MergeFrom(const PbfTrackerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.fusion.PbfTrackerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_type_fusion_method(from._internal_type_fusion_method());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_motion_fusion_method(from._internal_motion_fusion_method());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_shape_fusion_method(from._internal_shape_fusion_method());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_existence_fusion_method(from._internal_existence_fusion_method());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PbfTrackerConfig::CopyFrom(const PbfTrackerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.fusion.PbfTrackerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbfTrackerConfig::IsInitialized() const {
  return true;
}

void PbfTrackerConfig::InternalSwap(PbfTrackerConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_fusion_method_, lhs_arena,
      &other->_impl_.type_fusion_method_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.motion_fusion_method_, lhs_arena,
      &other->_impl_.motion_fusion_method_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.shape_fusion_method_, lhs_arena,
      &other->_impl_.shape_fusion_method_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.existence_fusion_method_, lhs_arena,
      &other->_impl_.existence_fusion_method_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PbfTrackerConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto_getter, &descriptor_table_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto_once,
      file_level_metadata_modules_2fperception_2fproto_2fpbf_5ftracker_5fconfig_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace fusion
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::fusion::PbfTrackerConfig*
Arena::CreateMaybeMessage< ::apollo::perception::fusion::PbfTrackerConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::perception::fusion::PbfTrackerConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
