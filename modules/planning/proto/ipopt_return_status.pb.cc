// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/ipopt_return_status.proto

#include "modules/planning/proto/ipopt_return_status.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace planning {
}  // namespace planning
}  // namespace apollo
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto = nullptr;
const uint32_t TableStruct_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n0modules/planning/proto/ipopt_return_st"
  "atus.proto\022\017apollo.planning*\353\004\n\021IpoptRet"
  "urnStatus\022\023\n\017SOLVE_SUCCEEDED\020\000\022\036\n\032SOLVED"
  "_TO_ACCEPTABLE_LEVEL\020\001\022\037\n\033INFEASIBLE_PRO"
  "BLEM_DETECTED\020\002\022&\n\"SEARCH_DIRECTION_BECO"
  "MES_TOO_SMALL\020\003\022\025\n\021DIVERGIN_ITERATES\020\004\022\027"
  "\n\023USER_REQUESTED_STOP\020\005\022\030\n\024FEASIBLE_POIN"
  "T_FOUND\020\006\022(\n\033MAXIMUM_ITERATIONS_EXCEEDED"
  "\020\377\377\377\377\377\377\377\377\377\001\022\037\n\022RESTORATION_FAILED\020\376\377\377\377\377\377"
  "\377\377\377\001\022&\n\031ERROR_IN_STEP_COMPUTATION\020\375\377\377\377\377\377"
  "\377\377\377\001\022*\n\035NOT_ENOUGH_DEGREES_OF_FREEDOM\020\366\377"
  "\377\377\377\377\377\377\377\001\022\'\n\032INVALID_PROGRAM_DEFINITION\020\365"
  "\377\377\377\377\377\377\377\377\001\022\033\n\016INVALID_OPTION\020\364\377\377\377\377\377\377\377\377\001\022$"
  "\n\027INVALID_NUMBER_DETECTED\020\363\377\377\377\377\377\377\377\377\001\022$\n\027"
  "UNRECOVERABLE_EXCEPTION\020\234\377\377\377\377\377\377\377\377\001\022&\n\031NO"
  "NIPOPT_EXCEPTION_THROWN\020\233\377\377\377\377\377\377\377\377\001\022 \n\023IN"
  "SUFFICIENT_MEMORY\020\232\377\377\377\377\377\377\377\377\001\022\023\n\016INTERNAL"
  "_ERROR\020\307\001"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto = {
    false, false, 689, descriptor_table_protodef_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto,
    "modules/planning/proto/ipopt_return_status.proto",
    &descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto::offsets,
    nullptr, file_level_enum_descriptors_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto,
    file_level_service_descriptors_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto_getter() {
  return &descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto(&descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto);
namespace apollo {
namespace planning {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IpoptReturnStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto);
  return file_level_enum_descriptors_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto[0];
}
bool IpoptReturnStatus_IsValid(int value) {
  switch (value) {
    case -102:
    case -101:
    case -100:
    case -13:
    case -12:
    case -11:
    case -10:
    case -3:
    case -2:
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 199:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
