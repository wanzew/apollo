// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/ipopt_return_status.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace planning {

enum IpoptReturnStatus : int {
  SOLVE_SUCCEEDED = 0,
  SOLVED_TO_ACCEPTABLE_LEVEL = 1,
  INFEASIBLE_PROBLEM_DETECTED = 2,
  SEARCH_DIRECTION_BECOMES_TOO_SMALL = 3,
  DIVERGIN_ITERATES = 4,
  USER_REQUESTED_STOP = 5,
  FEASIBLE_POINT_FOUND = 6,
  MAXIMUM_ITERATIONS_EXCEEDED = -1,
  RESTORATION_FAILED = -2,
  ERROR_IN_STEP_COMPUTATION = -3,
  NOT_ENOUGH_DEGREES_OF_FREEDOM = -10,
  INVALID_PROGRAM_DEFINITION = -11,
  INVALID_OPTION = -12,
  INVALID_NUMBER_DETECTED = -13,
  UNRECOVERABLE_EXCEPTION = -100,
  NONIPOPT_EXCEPTION_THROWN = -101,
  INSUFFICIENT_MEMORY = -102,
  INTERNAL_ERROR = 199
};
bool IpoptReturnStatus_IsValid(int value);
constexpr IpoptReturnStatus IpoptReturnStatus_MIN = INSUFFICIENT_MEMORY;
constexpr IpoptReturnStatus IpoptReturnStatus_MAX = INTERNAL_ERROR;
constexpr int IpoptReturnStatus_ARRAYSIZE = IpoptReturnStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IpoptReturnStatus_descriptor();
template<typename T>
inline const std::string& IpoptReturnStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, IpoptReturnStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function IpoptReturnStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    IpoptReturnStatus_descriptor(), enum_t_value);
}
inline bool IpoptReturnStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, IpoptReturnStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<IpoptReturnStatus>(
    IpoptReturnStatus_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::apollo::planning::IpoptReturnStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::planning::IpoptReturnStatus>() {
  return ::apollo::planning::IpoptReturnStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fipopt_5freturn_5fstatus_2eproto
