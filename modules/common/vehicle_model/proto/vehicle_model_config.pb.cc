// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/vehicle_model/proto/vehicle_model_config.proto

#include "modules/common/vehicle_model/proto/vehicle_model_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace common {
PROTOBUF_CONSTEXPR VehicleModelConfig::VehicleModelConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.rc_kinematic_bicycle_model_)*/nullptr
  , /*decltype(_impl_.comc_dynamic_bicycle_model_)*/nullptr
  , /*decltype(_impl_.mlp_model_)*/nullptr
  , /*decltype(_impl_.model_type_)*/0} {}
struct VehicleModelConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleModelConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleModelConfigDefaultTypeInternal() {}
  union {
    VehicleModelConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleModelConfigDefaultTypeInternal _VehicleModelConfig_default_instance_;
PROTOBUF_CONSTEXPR RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dt_)*/0} {}
struct RearCenteredKinematicBicycleModelConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RearCenteredKinematicBicycleModelConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RearCenteredKinematicBicycleModelConfigDefaultTypeInternal() {}
  union {
    RearCenteredKinematicBicycleModelConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RearCenteredKinematicBicycleModelConfigDefaultTypeInternal _RearCenteredKinematicBicycleModelConfig_default_instance_;
PROTOBUF_CONSTEXPR ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dt_)*/0} {}
struct ComCenteredDynamicBicycleModelConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComCenteredDynamicBicycleModelConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComCenteredDynamicBicycleModelConfigDefaultTypeInternal() {}
  union {
    ComCenteredDynamicBicycleModelConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComCenteredDynamicBicycleModelConfigDefaultTypeInternal _ComCenteredDynamicBicycleModelConfig_default_instance_;
PROTOBUF_CONSTEXPR MlpModelConfig::MlpModelConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dt_)*/0} {}
struct MlpModelConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MlpModelConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MlpModelConfigDefaultTypeInternal() {}
  union {
    MlpModelConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MlpModelConfigDefaultTypeInternal _MlpModelConfig_default_instance_;
}  // namespace common
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto = nullptr;

const uint32_t TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _impl_.model_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _impl_.rc_kinematic_bicycle_model_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _impl_.comc_dynamic_bicycle_model_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _impl_.mlp_model_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _impl_.dt_),
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _impl_.dt_),
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::common::MlpModelConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::MlpModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::common::MlpModelConfig, _impl_.dt_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::apollo::common::VehicleModelConfig)},
  { 14, 21, -1, sizeof(::apollo::common::RearCenteredKinematicBicycleModelConfig)},
  { 22, 29, -1, sizeof(::apollo::common::ComCenteredDynamicBicycleModelConfig)},
  { 30, 37, -1, sizeof(::apollo::common::MlpModelConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::common::_VehicleModelConfig_default_instance_._instance,
  &::apollo::common::_RearCenteredKinematicBicycleModelConfig_default_instance_._instance,
  &::apollo::common::_ComCenteredDynamicBicycleModelConfig_default_instance_._instance,
  &::apollo::common::_MlpModelConfig_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n=modules/common/vehicle_model/proto/veh"
  "icle_model_config.proto\022\rapollo.common\"\253"
  "\003\n\022VehicleModelConfig\022\?\n\nmodel_type\030\001 \001("
  "\0162+.apollo.common.VehicleModelConfig.Mod"
  "elType\022Z\n\032rc_kinematic_bicycle_model\030\002 \001"
  "(\01326.apollo.common.RearCenteredKinematic"
  "BicycleModelConfig\022W\n\032comc_dynamic_bicyc"
  "le_model\030\003 \001(\01323.apollo.common.ComCenter"
  "edDynamicBicycleModelConfig\0220\n\tmlp_model"
  "\030\004 \001(\0132\035.apollo.common.MlpModelConfig\"m\n"
  "\tModelType\022)\n%REAR_CENTERED_KINEMATIC_BI"
  "CYCLE_MODEL\020\000\022&\n\"COM_CENTERED_DYNAMIC_BI"
  "CYCLE_MODEL\020\001\022\r\n\tMLP_MODEL\020\002\"5\n\'RearCent"
  "eredKinematicBicycleModelConfig\022\n\n\002dt\030\001 "
  "\001(\001\"2\n$ComCenteredDynamicBicycleModelCon"
  "fig\022\n\n\002dt\030\001 \001(\001\"\034\n\016MlpModelConfig\022\n\n\002dt\030"
  "\001 \001(\001"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto = {
    false, false, 645, descriptor_table_protodef_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto,
    "modules/common/vehicle_model/proto/vehicle_model_config.proto",
    &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::offsets,
    file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto, file_level_enum_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto,
    file_level_service_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_getter() {
  return &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto(&descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
namespace apollo {
namespace common {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VehicleModelConfig_ModelType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[0];
}
bool VehicleModelConfig_ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr VehicleModelConfig_ModelType VehicleModelConfig::REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::COM_CENTERED_DYNAMIC_BICYCLE_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::MLP_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MIN;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MAX;
constexpr int VehicleModelConfig::ModelType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class VehicleModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleModelConfig>()._impl_._has_bits_);
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::common::RearCenteredKinematicBicycleModelConfig& rc_kinematic_bicycle_model(const VehicleModelConfig* msg);
  static void set_has_rc_kinematic_bicycle_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::common::ComCenteredDynamicBicycleModelConfig& comc_dynamic_bicycle_model(const VehicleModelConfig* msg);
  static void set_has_comc_dynamic_bicycle_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::common::MlpModelConfig& mlp_model(const VehicleModelConfig* msg);
  static void set_has_mlp_model(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::common::RearCenteredKinematicBicycleModelConfig&
VehicleModelConfig::_Internal::rc_kinematic_bicycle_model(const VehicleModelConfig* msg) {
  return *msg->_impl_.rc_kinematic_bicycle_model_;
}
const ::apollo::common::ComCenteredDynamicBicycleModelConfig&
VehicleModelConfig::_Internal::comc_dynamic_bicycle_model(const VehicleModelConfig* msg) {
  return *msg->_impl_.comc_dynamic_bicycle_model_;
}
const ::apollo::common::MlpModelConfig&
VehicleModelConfig::_Internal::mlp_model(const VehicleModelConfig* msg) {
  return *msg->_impl_.mlp_model_;
}
VehicleModelConfig::VehicleModelConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.common.VehicleModelConfig)
}
VehicleModelConfig::VehicleModelConfig(const VehicleModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rc_kinematic_bicycle_model_){nullptr}
    , decltype(_impl_.comc_dynamic_bicycle_model_){nullptr}
    , decltype(_impl_.mlp_model_){nullptr}
    , decltype(_impl_.model_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rc_kinematic_bicycle_model()) {
    _impl_.rc_kinematic_bicycle_model_ = new ::apollo::common::RearCenteredKinematicBicycleModelConfig(*from._impl_.rc_kinematic_bicycle_model_);
  }
  if (from._internal_has_comc_dynamic_bicycle_model()) {
    _impl_.comc_dynamic_bicycle_model_ = new ::apollo::common::ComCenteredDynamicBicycleModelConfig(*from._impl_.comc_dynamic_bicycle_model_);
  }
  if (from._internal_has_mlp_model()) {
    _impl_.mlp_model_ = new ::apollo::common::MlpModelConfig(*from._impl_.mlp_model_);
  }
  _impl_.model_type_ = from._impl_.model_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.VehicleModelConfig)
}

inline void VehicleModelConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rc_kinematic_bicycle_model_){nullptr}
    , decltype(_impl_.comc_dynamic_bicycle_model_){nullptr}
    , decltype(_impl_.mlp_model_){nullptr}
    , decltype(_impl_.model_type_){0}
  };
}

VehicleModelConfig::~VehicleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.VehicleModelConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VehicleModelConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.rc_kinematic_bicycle_model_;
  if (this != internal_default_instance()) delete _impl_.comc_dynamic_bicycle_model_;
  if (this != internal_default_instance()) delete _impl_.mlp_model_;
}

void VehicleModelConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VehicleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.VehicleModelConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.rc_kinematic_bicycle_model_ != nullptr);
      _impl_.rc_kinematic_bicycle_model_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.comc_dynamic_bicycle_model_ != nullptr);
      _impl_.comc_dynamic_bicycle_model_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.mlp_model_ != nullptr);
      _impl_.mlp_model_->Clear();
    }
  }
  _impl_.model_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VehicleModelConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::common::VehicleModelConfig_ModelType_IsValid(val))) {
            _internal_set_model_type(static_cast<::apollo::common::VehicleModelConfig_ModelType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rc_kinematic_bicycle_model(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_comc_dynamic_bicycle_model(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.MlpModelConfig mlp_model = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_mlp_model(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VehicleModelConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.VehicleModelConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_model_type(), target);
  }

  // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rc_kinematic_bicycle_model(this),
        _Internal::rc_kinematic_bicycle_model(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::comc_dynamic_bicycle_model(this),
        _Internal::comc_dynamic_bicycle_model(this).GetCachedSize(), target, stream);
  }

  // optional .apollo.common.MlpModelConfig mlp_model = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::mlp_model(this),
        _Internal::mlp_model(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.VehicleModelConfig)
  return target;
}

size_t VehicleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.VehicleModelConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rc_kinematic_bicycle_model_);
    }

    // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.comc_dynamic_bicycle_model_);
    }

    // optional .apollo.common.MlpModelConfig mlp_model = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mlp_model_);
    }

    // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VehicleModelConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VehicleModelConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VehicleModelConfig::GetClassData() const { return &_class_data_; }

void VehicleModelConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VehicleModelConfig *>(to)->MergeFrom(
      static_cast<const VehicleModelConfig &>(from));
}


void VehicleModelConfig::MergeFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_rc_kinematic_bicycle_model()->::apollo::common::RearCenteredKinematicBicycleModelConfig::MergeFrom(from._internal_rc_kinematic_bicycle_model());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_comc_dynamic_bicycle_model()->::apollo::common::ComCenteredDynamicBicycleModelConfig::MergeFrom(from._internal_comc_dynamic_bicycle_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_mlp_model()->::apollo::common::MlpModelConfig::MergeFrom(from._internal_mlp_model());
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.model_type_ = from._impl_.model_type_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleModelConfig::CopyFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleModelConfig::IsInitialized() const {
  return true;
}

void VehicleModelConfig::InternalSwap(VehicleModelConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleModelConfig, _impl_.model_type_)
      + sizeof(VehicleModelConfig::_impl_.model_type_)
      - PROTOBUF_FIELD_OFFSET(VehicleModelConfig, _impl_.rc_kinematic_bicycle_model_)>(
          reinterpret_cast<char*>(&_impl_.rc_kinematic_bicycle_model_),
          reinterpret_cast<char*>(&other->_impl_.rc_kinematic_bicycle_model_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VehicleModelConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_getter, &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once,
      file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[0]);
}

// ===================================================================

class RearCenteredKinematicBicycleModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<RearCenteredKinematicBicycleModelConfig>()._impl_._has_bits_);
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
}
RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig(const RearCenteredKinematicBicycleModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dt_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dt_ = from._impl_.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
}

inline void RearCenteredKinematicBicycleModelConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dt_){0}
  };
}

RearCenteredKinematicBicycleModelConfig::~RearCenteredKinematicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RearCenteredKinematicBicycleModelConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RearCenteredKinematicBicycleModelConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RearCenteredKinematicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dt_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearCenteredKinematicBicycleModelConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double dt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_dt(&has_bits);
          _impl_.dt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RearCenteredKinematicBicycleModelConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_dt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.RearCenteredKinematicBicycleModelConfig)
  return target;
}

size_t RearCenteredKinematicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double dt = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RearCenteredKinematicBicycleModelConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RearCenteredKinematicBicycleModelConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RearCenteredKinematicBicycleModelConfig::GetClassData() const { return &_class_data_; }

void RearCenteredKinematicBicycleModelConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RearCenteredKinematicBicycleModelConfig *>(to)->MergeFrom(
      static_cast<const RearCenteredKinematicBicycleModelConfig &>(from));
}


void RearCenteredKinematicBicycleModelConfig::MergeFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dt()) {
    _internal_set_dt(from._internal_dt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearCenteredKinematicBicycleModelConfig::IsInitialized() const {
  return true;
}

void RearCenteredKinematicBicycleModelConfig::InternalSwap(RearCenteredKinematicBicycleModelConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.dt_, other->_impl_.dt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearCenteredKinematicBicycleModelConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_getter, &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once,
      file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[1]);
}

// ===================================================================

class ComCenteredDynamicBicycleModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ComCenteredDynamicBicycleModelConfig>()._impl_._has_bits_);
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
}
ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig(const ComCenteredDynamicBicycleModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dt_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dt_ = from._impl_.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
}

inline void ComCenteredDynamicBicycleModelConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dt_){0}
  };
}

ComCenteredDynamicBicycleModelConfig::~ComCenteredDynamicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComCenteredDynamicBicycleModelConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ComCenteredDynamicBicycleModelConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComCenteredDynamicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dt_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComCenteredDynamicBicycleModelConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double dt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_dt(&has_bits);
          _impl_.dt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ComCenteredDynamicBicycleModelConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_dt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.ComCenteredDynamicBicycleModelConfig)
  return target;
}

size_t ComCenteredDynamicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double dt = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComCenteredDynamicBicycleModelConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComCenteredDynamicBicycleModelConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComCenteredDynamicBicycleModelConfig::GetClassData() const { return &_class_data_; }

void ComCenteredDynamicBicycleModelConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ComCenteredDynamicBicycleModelConfig *>(to)->MergeFrom(
      static_cast<const ComCenteredDynamicBicycleModelConfig &>(from));
}


void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dt()) {
    _internal_set_dt(from._internal_dt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComCenteredDynamicBicycleModelConfig::IsInitialized() const {
  return true;
}

void ComCenteredDynamicBicycleModelConfig::InternalSwap(ComCenteredDynamicBicycleModelConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.dt_, other->_impl_.dt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComCenteredDynamicBicycleModelConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_getter, &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once,
      file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[2]);
}

// ===================================================================

class MlpModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<MlpModelConfig>()._impl_._has_bits_);
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MlpModelConfig::MlpModelConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.common.MlpModelConfig)
}
MlpModelConfig::MlpModelConfig(const MlpModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dt_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dt_ = from._impl_.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.MlpModelConfig)
}

inline void MlpModelConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dt_){0}
  };
}

MlpModelConfig::~MlpModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.MlpModelConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MlpModelConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MlpModelConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MlpModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.MlpModelConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dt_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MlpModelConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double dt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_dt(&has_bits);
          _impl_.dt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MlpModelConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.MlpModelConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_dt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.MlpModelConfig)
  return target;
}

size_t MlpModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.MlpModelConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double dt = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MlpModelConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MlpModelConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MlpModelConfig::GetClassData() const { return &_class_data_; }

void MlpModelConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MlpModelConfig *>(to)->MergeFrom(
      static_cast<const MlpModelConfig &>(from));
}


void MlpModelConfig::MergeFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dt()) {
    _internal_set_dt(from._internal_dt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MlpModelConfig::CopyFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MlpModelConfig::IsInitialized() const {
  return true;
}

void MlpModelConfig::InternalSwap(MlpModelConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.dt_, other->_impl_.dt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MlpModelConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_getter, &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once,
      file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::common::VehicleModelConfig*
Arena::CreateMaybeMessage< ::apollo::common::VehicleModelConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::common::VehicleModelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::RearCenteredKinematicBicycleModelConfig*
Arena::CreateMaybeMessage< ::apollo::common::RearCenteredKinematicBicycleModelConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::common::RearCenteredKinematicBicycleModelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::ComCenteredDynamicBicycleModelConfig*
Arena::CreateMaybeMessage< ::apollo::common::ComCenteredDynamicBicycleModelConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::common::ComCenteredDynamicBicycleModelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::MlpModelConfig*
Arena::CreateMaybeMessage< ::apollo::common::MlpModelConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::common::MlpModelConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
