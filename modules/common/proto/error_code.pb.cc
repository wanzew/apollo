// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/proto/error_code.proto

#include "modules/common/proto/error_code.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace apollo {
namespace common {
PROTOBUF_CONSTEXPR StatusPb::StatusPb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_code_)*/0} {}
struct StatusPbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusPbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusPbDefaultTypeInternal() {}
  union {
    StatusPb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusPbDefaultTypeInternal _StatusPb_default_instance_;
}  // namespace common
}  // namespace apollo
static ::_pb::Metadata file_level_metadata_modules_2fcommon_2fproto_2ferror_5fcode_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_modules_2fcommon_2fproto_2ferror_5fcode_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_2fproto_2ferror_5fcode_2eproto = nullptr;

const uint32_t TableStruct_modules_2fcommon_2fproto_2ferror_5fcode_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::common::StatusPb, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::StatusPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::common::StatusPb, _impl_.error_code_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::StatusPb, _impl_.msg_),
  1,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::apollo::common::StatusPb)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::apollo::common::_StatusPb_default_instance_._instance,
};

const char descriptor_table_protodef_modules_2fcommon_2fproto_2ferror_5fcode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%modules/common/proto/error_code.proto\022"
  "\rapollo.common\"I\n\010StatusPb\0220\n\nerror_code"
  "\030\001 \001(\0162\030.apollo.common.ErrorCode:\002OK\022\013\n\003"
  "msg\030\002 \001(\t*\360\006\n\tErrorCode\022\006\n\002OK\020\000\022\022\n\rCONTR"
  "OL_ERROR\020\350\007\022\027\n\022CONTROL_INIT_ERROR\020\351\007\022\032\n\025"
  "CONTROL_COMPUTE_ERROR\020\352\007\022\021\n\014CANBUS_ERROR"
  "\020\320\017\022\032\n\025CAN_CLIENT_ERROR_BASE\020\264\020\022(\n#CAN_C"
  "LIENT_ERROR_OPEN_DEVICE_FAILED\020\265\020\022\037\n\032CAN"
  "_CLIENT_ERROR_FRAME_NUM\020\266\020\022!\n\034CAN_CLIENT"
  "_ERROR_SEND_FAILED\020\267\020\022!\n\034CAN_CLIENT_ERRO"
  "R_RECV_FAILED\020\270\020\022\027\n\022LOCALIZATION_ERROR\020\270"
  "\027\022\033\n\026LOCALIZATION_ERROR_MSG\020\234\030\022\035\n\030LOCALI"
  "ZATION_ERROR_LIDAR\020\200\031\022\035\n\030LOCALIZATION_ER"
  "ROR_INTEG\020\344\031\022\034\n\027LOCALIZATION_ERROR_GNSS\020"
  "\310\032\022\025\n\020PERCEPTION_ERROR\020\240\037\022\030\n\023PERCEPTION_"
  "ERROR_TF\020\241\037\022\035\n\030PERCEPTION_ERROR_PROCESS\020"
  "\242\037\022\025\n\020PERCEPTION_FATAL\020\243\037\022\025\n\020PREDICTION_"
  "ERROR\020\210\'\022\023\n\016PLANNING_ERROR\020\360.\022\025\n\020HDMAP_D"
  "ATA_ERROR\020\3306\022\022\n\rROUTING_ERROR\020\300>\022\032\n\025ROUT"
  "ING_ERROR_REQUEST\020\301>\022\033\n\026ROUTING_ERROR_RE"
  "SPONSE\020\302>\022\034\n\027ROUTING_ERROR_NOT_READY\020\303>\022"
  "\021\n\014END_OF_INPUT\020\250F\022\025\n\020HTTP_LOGIC_ERROR\020\220"
  "N\022\027\n\022HTTP_RUNTIME_ERROR\020\221N\022\027\n\022RELATIVE_M"
  "AP_ERROR\020\370U\022\033\n\026RELATIVE_MAP_NOT_READY\020\371U"
  "\022\026\n\021DRIVER_ERROR_GNSS\020\340]\022\032\n\025DRIVER_ERROR"
  "_VELODYNE\020\310e"
  ;
static ::_pbi::once_flag descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto = {
    false, false, 1012, descriptor_table_protodef_modules_2fcommon_2fproto_2ferror_5fcode_2eproto,
    "modules/common/proto/error_code.proto",
    &descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_modules_2fcommon_2fproto_2ferror_5fcode_2eproto::offsets,
    file_level_metadata_modules_2fcommon_2fproto_2ferror_5fcode_2eproto, file_level_enum_descriptors_modules_2fcommon_2fproto_2ferror_5fcode_2eproto,
    file_level_service_descriptors_modules_2fcommon_2fproto_2ferror_5fcode_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto_getter() {
  return &descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_modules_2fcommon_2fproto_2ferror_5fcode_2eproto(&descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto);
namespace apollo {
namespace common {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_2fproto_2ferror_5fcode_2eproto[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 2000:
    case 2100:
    case 2101:
    case 2102:
    case 2103:
    case 2104:
    case 3000:
    case 3100:
    case 3200:
    case 3300:
    case 3400:
    case 4000:
    case 4001:
    case 4002:
    case 4003:
    case 5000:
    case 6000:
    case 7000:
    case 8000:
    case 8001:
    case 8002:
    case 8003:
    case 9000:
    case 10000:
    case 10001:
    case 11000:
    case 11001:
    case 12000:
    case 13000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class StatusPb::_Internal {
 public:
  using HasBits = decltype(std::declval<StatusPb>()._impl_._has_bits_);
  static void set_has_error_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StatusPb::StatusPb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:apollo.common.StatusPb)
}
StatusPb::StatusPb(const StatusPb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.error_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_msg()) {
    _impl_.msg_.Set(from._internal_msg(), 
      GetArenaForAllocation());
  }
  _impl_.error_code_ = from._impl_.error_code_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.StatusPb)
}

inline void StatusPb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.error_code_){0}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StatusPb::~StatusPb() {
  // @@protoc_insertion_point(destructor:apollo.common.StatusPb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatusPb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void StatusPb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StatusPb::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.StatusPb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.msg_.ClearNonDefaultToEmpty();
  }
  _impl_.error_code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusPb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.common.ErrorCode error_code = 1 [default = OK];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::common::ErrorCode_IsValid(val))) {
            _internal_set_error_code(static_cast<::apollo::common::ErrorCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "apollo.common.StatusPb.msg");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatusPb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.StatusPb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .apollo.common.ErrorCode error_code = 1 [default = OK];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error_code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.common.StatusPb.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.StatusPb)
  return target;
}

size_t StatusPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.StatusPb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_msg());
    }

    // optional .apollo.common.ErrorCode error_code = 1 [default = OK];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_error_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusPb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StatusPb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusPb::GetClassData() const { return &_class_data_; }

void StatusPb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StatusPb *>(to)->MergeFrom(
      static_cast<const StatusPb &>(from));
}


void StatusPb::MergeFrom(const StatusPb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.StatusPb)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_msg(from._internal_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.error_code_ = from._impl_.error_code_;
    }
    _impl_._has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatusPb::CopyFrom(const StatusPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.StatusPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusPb::IsInitialized() const {
  return true;
}

void StatusPb::InternalSwap(StatusPb* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.error_code_, other->_impl_.error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusPb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto_getter, &descriptor_table_modules_2fcommon_2fproto_2ferror_5fcode_2eproto_once,
      file_level_metadata_modules_2fcommon_2fproto_2ferror_5fcode_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::common::StatusPb*
Arena::CreateMaybeMessage< ::apollo::common::StatusPb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::common::StatusPb >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
